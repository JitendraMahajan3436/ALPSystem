<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ManifestCreateTitle" xml:space="preserve">
    <value>Manifest Create</value>
  </data>
  <data name="ManifestTitle" xml:space="preserve">
    <value>Manifest</value>
  </data>
  <data name="Manifest_Add_Failure" xml:space="preserve">
    <value>Adding the Manifest record failed.Please Try Again</value>
  </data>
  <data name="Manifest_Add_Success" xml:space="preserve">
    <value>Successfully Added Manifest </value>
  </data>
  <data name="Manifest_Create_DbUpdateException" xml:space="preserve">
    <value>DbUpdateException Occurred while Creating Manifest</value>
  </data>
  <data name="Manifest_Create_Exception" xml:space="preserve">
    <value>Exception Occurred while Creating Manifest</value>
  </data>
  <data name="Manifest_Delete_Dependency_Failure" xml:space="preserve">
    <value>Cannot Delete Manifest record because it is has dependency in other modules</value>
  </data>
  <data name="Manifest_Delete_Failure" xml:space="preserve">
    <value>Deleting the Manifest record failed.Please Try Again</value>
  </data>
  <data name="Manifest_Delete_Success" xml:space="preserve">
    <value>Successfully Deleted the Manifest Record</value>
  </data>
  <data name="Manifest_Edit_DbEntityValidationException" xml:space="preserve">
    <value>DbEntityValidationException Occurred while Editing Manifest</value>
  </data>
  <data name="Manifest_Edit_DbUpdateException" xml:space="preserve">
    <value>DbUpdateException Occurred while Editing Manifest</value>
  </data>
  <data name="Manifest_Edit_Exception" xml:space="preserve">
    <value>Exception Occurred while Editing Manifest</value>
  </data>
  <data name="Manifest_Edit_Falure" xml:space="preserve">
    <value>Editing the Manifest record failed.Please Try Again</value>
  </data>
  <data name="Manifest_Edit_Success" xml:space="preserve">
    <value>Successfully Modified Manifest</value>
  </data>
  <data name="Manifest_Image_Required" xml:space="preserve">
    <value>Please Upload a Part Image</value>
  </data>
  <data name="Manifest_Image_Title" xml:space="preserve">
    <value>Manifest Image</value>
  </data>
  <data name="Manifest_PartNo_Label" xml:space="preserve">
    <value>Part No</value>
  </data>
  <data name="Manifest_Part_Desc" xml:space="preserve">
    <value>Part Description</value>
  </data>
  <data name="Manifest_Title_Add_Manifest" xml:space="preserve">
    <value>Manifest Upload</value>
  </data>
  <data name="Manifest_Title_Delete_Manifest" xml:space="preserve">
    <value>Delete Manifest</value>
  </data>
  <data name="Manifest_Title_Edit_Manifest" xml:space="preserve">
    <value>Manifest Edit</value>
  </data>
  <data name="Manifest_Title_Manifest_Lists" xml:space="preserve">
    <value>Manifest List</value>
  </data>
  <data name="Model_Code" xml:space="preserve">
    <value>Model Code</value>
  </data>
  <data name="Model_Family" xml:space="preserve">
    <value>Family</value>
  </data>
  <data name="SOPCreateTitle" xml:space="preserve">
    <value>SOP Create</value>
  </data>
  <data name="SOPTitle" xml:space="preserve">
    <value>SOP</value>
  </data>
  <data name="SOP_Add_Failure" xml:space="preserve">
    <value>Adding the SOP record failed.Please Try Again</value>
  </data>
  <data name="SOP_Add_Success" xml:space="preserve">
    <value>Successfully Added SOP </value>
  </data>
  <data name="SOP_Create_DbUpdateException" xml:space="preserve">
    <value>DbUpdateException Occurred while Creating SOP</value>
  </data>
  <data name="SOP_Create_Exception" xml:space="preserve">
    <value>Exception Occurred while Creating SOP</value>
  </data>
  <data name="SOP_Delete_Dependency_Failure" xml:space="preserve">
    <value>Cannot Delete SOP record because it is has dependency in other modules</value>
  </data>
  <data name="SOP_Delete_Failure" xml:space="preserve">
    <value>Deleting the SOP record failed.Please Try Again</value>
  </data>
  <data name="SOP_Delete_Success" xml:space="preserve">
    <value>Successfully Deleted the SOP Record</value>
  </data>
  <data name="SOP_Edit_DbEntityValidationException" xml:space="preserve">
    <value>DbEntityValidationException Occurred while Editing SOP</value>
  </data>
  <data name="SOP_Edit_DbUpdateException" xml:space="preserve">
    <value>DbUpdateException Occurred while Editing SOP</value>
  </data>
  <data name="SOP_Edit_Exception" xml:space="preserve">
    <value>Exception Occurred while Editing SOP</value>
  </data>
  <data name="SOP_Edit_Falure" xml:space="preserve">
    <value>Editing the SOP record failed.Please Try Again</value>
  </data>
  <data name="SOP_Edit_Success" xml:space="preserve">
    <value>Successfully Modified SOP</value>
  </data>
  <data name="SOP_Image_Required" xml:space="preserve">
    <value>Please Upload a SOP Image</value>
  </data>
  <data name="SOP_Image_Title" xml:space="preserve">
    <value>SOP Image</value>
  </data>
  <data name="SOP_ModelCode" xml:space="preserve">
    <value>Model Code</value>
  </data>
  <data name="SOP_Name" xml:space="preserve">
    <value>SOP Name</value>
  </data>
  <data name="SOP_Name_Required" xml:space="preserve">
    <value>SOP Name is required</value>
  </data>
  <data name="SOP_Title_Add_SOP" xml:space="preserve">
    <value>SOP Upload</value>
  </data>
  <data name="SOP_Title_Delete_SOP" xml:space="preserve">
    <value>Delete SOP</value>
  </data>
  <data name="SOP_Title_Edit_SOP" xml:space="preserve">
    <value>SOP Edit</value>
  </data>
  <data name="SOP_Title_SOP_Lists" xml:space="preserve">
    <value>SOP List</value>
  </data>
</root>