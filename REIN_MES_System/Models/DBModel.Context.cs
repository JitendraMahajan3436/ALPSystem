//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace REIN_MES_System.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class REIN_SOLUTIONEntities : DbContext
    {
        public REIN_SOLUTIONEntities()
            : base("name=REIN_SOLUTIONEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Partwise_Defect_Master> Partwise_Defect_Master { get; set; }
        public virtual DbSet<Real_Time_Communication> Real_Time_Communication { get; set; }
        public virtual DbSet<RS_Abs_Operator_Transfer_Allocation> RS_Abs_Operator_Transfer_Allocation { get; set; }
        public virtual DbSet<RS_Aggregate_Part_Image> RS_Aggregate_Part_Image { get; set; }
        public virtual DbSet<RS_All_Configuration> RS_All_Configuration { get; set; }
        public virtual DbSet<RS_AM_Category> RS_AM_Category { get; set; }
        public virtual DbSet<RS_AM_Default_URL> RS_AM_Default_URL { get; set; }
        public virtual DbSet<RS_AM_Employee_SkillSet> RS_AM_Employee_SkillSet { get; set; }
        public virtual DbSet<RS_AM_LeaveManagement> RS_AM_LeaveManagement { get; set; }
        public virtual DbSet<RS_AM_Line_Supervisor_Mapping> RS_AM_Line_Supervisor_Mapping { get; set; }
        public virtual DbSet<RS_AM_Notification> RS_AM_Notification { get; set; }
        public virtual DbSet<RS_AM_Operation_Master> RS_AM_Operation_Master { get; set; }
        public virtual DbSet<RS_AM_Operator_Change_Request> RS_AM_Operator_Change_Request { get; set; }
        public virtual DbSet<RS_AM_Operator_Station_Allocation> RS_AM_Operator_Station_Allocation { get; set; }
        public virtual DbSet<RS_AM_Operator_Station_Allocation_History> RS_AM_Operator_Station_Allocation_History { get; set; }
        public virtual DbSet<RS_AM_Shop_Manager_Mapping> RS_AM_Shop_Manager_Mapping { get; set; }
        public virtual DbSet<RS_AM_Skill_Set> RS_AM_Skill_Set { get; set; }
        public virtual DbSet<RS_AM_Station_Operation> RS_AM_Station_Operation { get; set; }
        public virtual DbSet<RS_AM_Training> RS_AM_Training { get; set; }
        public virtual DbSet<RS_AM_User_Sessions> RS_AM_User_Sessions { get; set; }
        public virtual DbSet<RS_AM_UserPlant> RS_AM_UserPlant { get; set; }
        public virtual DbSet<RS_Assign_OperatorToSupervisor> RS_Assign_OperatorToSupervisor { get; set; }
        public virtual DbSet<RS_Assign_SupervisorToManager> RS_Assign_SupervisorToManager { get; set; }
        public virtual DbSet<RS_Attribution_Parameters> RS_Attribution_Parameters { get; set; }
        public virtual DbSet<RS_AttributionType_Master> RS_AttributionType_Master { get; set; }
        public virtual DbSet<RS_BIW_Part_Master> RS_BIW_Part_Master { get; set; }
        public virtual DbSet<RS_Body_Conversion> RS_Body_Conversion { get; set; }
        public virtual DbSet<RS_BOM> RS_BOM { get; set; }
        public virtual DbSet<RS_BOM_History> RS_BOM_History { get; set; }
        public virtual DbSet<RS_BOM_Item> RS_BOM_Item { get; set; }
        public virtual DbSet<RS_BOM_Item_History> RS_BOM_Item_History { get; set; }
        public virtual DbSet<RS_Buildsheet_Printer_Config> RS_Buildsheet_Printer_Config { get; set; }
        public virtual DbSet<RS_BWT> RS_BWT { get; set; }
        public virtual DbSet<RS_BWT_Station> RS_BWT_Station { get; set; }
        public virtual DbSet<RS_Carrier_Orderlist> RS_Carrier_Orderlist { get; set; }
        public virtual DbSet<RS_Carrier_Orderlist_History> RS_Carrier_Orderlist_History { get; set; }
        public virtual DbSet<RS_Colour> RS_Colour { get; set; }
        public virtual DbSet<RS_Country> RS_Country { get; set; }
        public virtual DbSet<RS_CrankCase_Scan_Data> RS_CrankCase_Scan_Data { get; set; }
        public virtual DbSet<RS_Ctrl_Alarm_Signals> RS_Ctrl_Alarm_Signals { get; set; }
        public virtual DbSet<RS_Ctrl_Alarm_Signals_History> RS_Ctrl_Alarm_Signals_History { get; set; }
        public virtual DbSet<RS_Ctrl_CBM_Data_Migrated> RS_Ctrl_CBM_Data_Migrated { get; set; }
        public virtual DbSet<RS_Ctrl_Conveyor_Signal> RS_Ctrl_Conveyor_Signal { get; set; }
        public virtual DbSet<RS_Ctrl_Cyl_Head_MB_CON_Data> RS_Ctrl_Cyl_Head_MB_CON_Data { get; set; }
        public virtual DbSet<RS_Ctrl_Cylinder_Head> RS_Ctrl_Cylinder_Head { get; set; }
        public virtual DbSet<RS_Ctrl_DC_Nutrunner_Master> RS_Ctrl_DC_Nutrunner_Master { get; set; }
        public virtual DbSet<RS_Ctrl_Equipment_Status> RS_Ctrl_Equipment_Status { get; set; }
        public virtual DbSet<RS_Ctrl_Equipment_Status_History> RS_Ctrl_Equipment_Status_History { get; set; }
        public virtual DbSet<RS_Ctrl_Leak_Testing> RS_Ctrl_Leak_Testing { get; set; }
        public virtual DbSet<RS_Ctrl_Line_Stop_History> RS_Ctrl_Line_Stop_History { get; set; }
        public virtual DbSet<RS_Ctrl_LineStopEmergency> RS_Ctrl_LineStopEmergency { get; set; }
        public virtual DbSet<RS_Ctrl_MBCAB_CONROD> RS_Ctrl_MBCAB_CONROD { get; set; }
        public virtual DbSet<RS_Ctrl_Oil_Dispencing> RS_Ctrl_Oil_Dispencing { get; set; }
        public virtual DbSet<RS_Ctrl_Station_Status> RS_Ctrl_Station_Status { get; set; }
        public virtual DbSet<RS_CVI_Spindle> RS_CVI_Spindle { get; set; }
        public virtual DbSet<RS_CVI_Station> RS_CVI_Station { get; set; }
        public virtual DbSet<RS_Daily_MIS> RS_Daily_MIS { get; set; }
        public virtual DbSet<RS_Dashboard_Master> RS_Dashboard_Master { get; set; }
        public virtual DbSet<RS_DefectLocation> RS_DefectLocation { get; set; }
        public virtual DbSet<RS_Department> RS_Department { get; set; }
        public virtual DbSet<RS_DispatchDetails> RS_DispatchDetails { get; set; }
        public virtual DbSet<RS_Documents> RS_Documents { get; set; }
        public virtual DbSet<RS_Employee> RS_Employee { get; set; }
        public virtual DbSet<RS_Enable_Diasble_Workstation_Column> RS_Enable_Diasble_Workstation_Column { get; set; }
        public virtual DbSet<RS_Engine_Marking_Data> RS_Engine_Marking_Data { get; set; }
        public virtual DbSet<RS_EngineDropping> RS_EngineDropping { get; set; }
        public virtual DbSet<RS_Equipment_SAP> RS_Equipment_SAP { get; set; }
        public virtual DbSet<RS_Error_Log> RS_Error_Log { get; set; }
        public virtual DbSet<RS_ErrorProofing_LineStop> RS_ErrorProofing_LineStop { get; set; }
        public virtual DbSet<RS_External_Training_Data> RS_External_Training_Data { get; set; }
        public virtual DbSet<RS_FilePath> RS_FilePath { get; set; }
        public virtual DbSet<RS_Geneaology> RS_Geneaology { get; set; }
        public virtual DbSet<RS_Hanger> RS_Hanger { get; set; }
        public virtual DbSet<RS_Help_Category> RS_Help_Category { get; set; }
        public virtual DbSet<RS_Help_Desk> RS_Help_Desk { get; set; }
        public virtual DbSet<RS_Help_Issue_Code> RS_Help_Issue_Code { get; set; }
        public virtual DbSet<RS_Help_Issue_Code_Name> RS_Help_Issue_Code_Name { get; set; }
        public virtual DbSet<RS_Help_Issue_Log_Type> RS_Help_Issue_Log_Type { get; set; }
        public virtual DbSet<RS_Help_Issue_Type> RS_Help_Issue_Type { get; set; }
        public virtual DbSet<RS_History_Card_Data> RS_History_Card_Data { get; set; }
        public virtual DbSet<RS_History_Line_TACT_Time> RS_History_Line_TACT_Time { get; set; }
        public virtual DbSet<RS_History_LineStop> RS_History_LineStop { get; set; }
        public virtual DbSet<RS_History_Mismatch> RS_History_Mismatch { get; set; }
        public virtual DbSet<RS_Historycard_CheckPoint> RS_Historycard_CheckPoint { get; set; }
        public virtual DbSet<RS_HL_Primary_Owner> RS_HL_Primary_Owner { get; set; }
        public virtual DbSet<RS_HL_Secondary_Owner> RS_HL_Secondary_Owner { get; set; }
        public virtual DbSet<RS_IoT_Tags> RS_IoT_Tags { get; set; }
        public virtual DbSet<RS_IoT_Url> RS_IoT_Url { get; set; }
        public virtual DbSet<RS_Kitt_Barcode_Master> RS_Kitt_Barcode_Master { get; set; }
        public virtual DbSet<RS_Kitting_Zone> RS_Kitting_Zone { get; set; }
        public virtual DbSet<RS_Kitting_Zone_Part> RS_Kitting_Zone_Part { get; set; }
        public virtual DbSet<RS_Line_Complete_Buffer> RS_Line_Complete_Buffer { get; set; }
        public virtual DbSet<RS_Line_Part_Assembly> RS_Line_Part_Assembly { get; set; }
        public virtual DbSet<RS_Line_Types> RS_Line_Types { get; set; }
        public virtual DbSet<RS_Lines> RS_Lines { get; set; }
        public virtual DbSet<RS_LineStoppage_Reasons> RS_LineStoppage_Reasons { get; set; }
        public virtual DbSet<RS_Lock_Table> RS_Lock_Table { get; set; }
        public virtual DbSet<RS_Machine_Image> RS_Machine_Image { get; set; }
        public virtual DbSet<RS_Machine_Shift_Data> RS_Machine_Shift_Data { get; set; }
        public virtual DbSet<RS_Maintenance_Machine_Part> RS_Maintenance_Machine_Part { get; set; }
        public virtual DbSet<RS_Maintenance_Part> RS_Maintenance_Part { get; set; }
        public virtual DbSet<RS_Major_Sub_Assembly> RS_Major_Sub_Assembly { get; set; }
        public virtual DbSet<RS_Manifest> RS_Manifest { get; set; }
        public virtual DbSet<RS_ManPower_Required> RS_ManPower_Required { get; set; }
        public virtual DbSet<RS_Manual_Data_Collection> RS_Manual_Data_Collection { get; set; }
        public virtual DbSet<RS_MAST_GENERAL> RS_MAST_GENERAL { get; set; }
        public virtual DbSet<RS_MAST_IPCONFIG> RS_MAST_IPCONFIG { get; set; }
        public virtual DbSet<RS_MAST_SAP_USER> RS_MAST_SAP_USER { get; set; }
        public virtual DbSet<RS_MAST_VIN_LINE> RS_MAST_VIN_LINE { get; set; }
        public virtual DbSet<RS_Menu_Role> RS_Menu_Role { get; set; }
        public virtual DbSet<RS_Menus> RS_Menus { get; set; }
        public virtual DbSet<RS_Model_Attribute_Master> RS_Model_Attribute_Master { get; set; }
        public virtual DbSet<RS_Model_Bin_Vin> RS_Model_Bin_Vin { get; set; }
        public virtual DbSet<RS_Model_Child_Part_Mapping> RS_Model_Child_Part_Mapping { get; set; }
        public virtual DbSet<RS_Model_Master> RS_Model_Master { get; set; }
        public virtual DbSet<RS_Model_Master_Image> RS_Model_Master_Image { get; set; }
        public virtual DbSet<RS_Model_Tyre_Make> RS_Model_Tyre_Make { get; set; }
        public virtual DbSet<RS_ModelCode_Country_Mapping> RS_ModelCode_Country_Mapping { get; set; }
        public virtual DbSet<RS_Month> RS_Month { get; set; }
        public virtual DbSet<RS_Month_Identifier> RS_Month_Identifier { get; set; }
        public virtual DbSet<RS_Monthly_Yearly_Plan> RS_Monthly_Yearly_Plan { get; set; }
        public virtual DbSet<RS_MT_BreakDown_Target> RS_MT_BreakDown_Target { get; set; }
        public virtual DbSet<RS_MT_Calibration> RS_MT_Calibration { get; set; }
        public virtual DbSet<RS_MT_Calibration_Log> RS_MT_Calibration_Log { get; set; }
        public virtual DbSet<RS_MT_Calibration_Users> RS_MT_Calibration_Users { get; set; }
        public virtual DbSet<RS_MT_CLITA_Capa> RS_MT_CLITA_Capa { get; set; }
        public virtual DbSet<RS_MT_Email_Time_Configuration> RS_MT_Email_Time_Configuration { get; set; }
        public virtual DbSet<RS_MT_Machine_Category> RS_MT_Machine_Category { get; set; }
        public virtual DbSet<RS_MT_Machine_Document> RS_MT_Machine_Document { get; set; }
        public virtual DbSet<RS_MT_Machine_Type> RS_MT_Machine_Type { get; set; }
        public virtual DbSet<RS_MT_Machines> RS_MT_Machines { get; set; }
        public virtual DbSet<RS_MT_Maintenance_Manual_Data> RS_MT_Maintenance_Manual_Data { get; set; }
        public virtual DbSet<RS_MT_Maintenance_Type> RS_MT_Maintenance_Type { get; set; }
        public virtual DbSet<RS_MT_Parameter> RS_MT_Parameter { get; set; }
        public virtual DbSet<RS_MT_Preventive_Maintenance> RS_MT_Preventive_Maintenance { get; set; }
        public virtual DbSet<RS_MT_Preventive_Maintenance_Log_New> RS_MT_Preventive_Maintenance_Log_New { get; set; }
        public virtual DbSet<RS_MT_Shop_Manual_Data_Collection> RS_MT_Shop_Manual_Data_Collection { get; set; }
        public virtual DbSet<RS_MT_Ticket> RS_MT_Ticket { get; set; }
        public virtual DbSet<RS_MT_Ticket_Users> RS_MT_Ticket_Users { get; set; }
        public virtual DbSet<RS_MT_Time_Based_Maintenance> RS_MT_Time_Based_Maintenance { get; set; }
        public virtual DbSet<RS_MT_Unit_Of_Measurement> RS_MT_Unit_Of_Measurement { get; set; }
        public virtual DbSet<RS_Notification_Modules> RS_Notification_Modules { get; set; }
        public virtual DbSet<RS_OM_Andon_Setup_Configuration> RS_OM_Andon_Setup_Configuration { get; set; }
        public virtual DbSet<RS_OM_BCA_Orders_Sequence> RS_OM_BCA_Orders_Sequence { get; set; }
        public virtual DbSet<RS_OM_BuildSheet_Print> RS_OM_BuildSheet_Print { get; set; }
        public virtual DbSet<RS_OM_Configuration> RS_OM_Configuration { get; set; }
        public virtual DbSet<RS_OM_Creation> RS_OM_Creation { get; set; }
        public virtual DbSet<RS_OM_Deleted_Orders> RS_OM_Deleted_Orders { get; set; }
        public virtual DbSet<RS_OM_Dispatchorders> RS_OM_Dispatchorders { get; set; }
        public virtual DbSet<RS_OM_Genealogy_Compare_Fields> RS_OM_Genealogy_Compare_Fields { get; set; }
        public virtual DbSet<RS_OM_History_TimeBased_ModelConfig> RS_OM_History_TimeBased_ModelConfig { get; set; }
        public virtual DbSet<RS_OM_Kitting_Order_list> RS_OM_Kitting_Order_list { get; set; }
        public virtual DbSet<RS_OM_KittingOrder_Parts> RS_OM_KittingOrder_Parts { get; set; }
        public virtual DbSet<RS_OM_Order_Genealogy_Fields> RS_OM_Order_Genealogy_Fields { get; set; }
        public virtual DbSet<RS_OM_Order_List> RS_OM_Order_List { get; set; }
        public virtual DbSet<RS_OM_Order_Moved_History> RS_OM_Order_Moved_History { get; set; }
        public virtual DbSet<RS_OM_Order_Pattern> RS_OM_Order_Pattern { get; set; }
        public virtual DbSet<RS_OM_Order_Plan_History> RS_OM_Order_Plan_History { get; set; }
        public virtual DbSet<RS_OM_Order_Remarks> RS_OM_Order_Remarks { get; set; }
        public virtual DbSet<RS_OM_Order_Retrieval> RS_OM_Order_Retrieval { get; set; }
        public virtual DbSet<RS_OM_Order_Status> RS_OM_Order_Status { get; set; }
        public virtual DbSet<RS_OM_Order_Status_Live> RS_OM_Order_Status_Live { get; set; }
        public virtual DbSet<RS_OM_Order_Type> RS_OM_Order_Type { get; set; }
        public virtual DbSet<RS_OM_OrderRelease> RS_OM_OrderRelease { get; set; }
        public virtual DbSet<RS_OM_Planned_Orders> RS_OM_Planned_Orders { get; set; }
        public virtual DbSet<RS_OM_Platform> RS_OM_Platform { get; set; }
        public virtual DbSet<RS_OM_PPC_Daily_Plan> RS_OM_PPC_Daily_Plan { get; set; }
        public virtual DbSet<RS_OM_S201_Tactsheet_Orders> RS_OM_S201_Tactsheet_Orders { get; set; }
        public virtual DbSet<RS_OM_ShopFloor_Holded_RSN> RS_OM_ShopFloor_Holded_RSN { get; set; }
        public virtual DbSet<RS_OM_SubAssembly_Order_List> RS_OM_SubAssembly_Order_List { get; set; }
        public virtual DbSet<RS_OM_SubAssembly_Order_List_History> RS_OM_SubAssembly_Order_List_History { get; set; }
        public virtual DbSet<RS_OM_TimeBased_ModelConfig> RS_OM_TimeBased_ModelConfig { get; set; }
        public virtual DbSet<RS_OM_U321_Tactsheet_Orders> RS_OM_U321_Tactsheet_Orders { get; set; }
        public virtual DbSet<RS_OM_UB10_ErrorProffing> RS_OM_UB10_ErrorProffing { get; set; }
        public virtual DbSet<RS_OM_UB10_Orders_Sequence> RS_OM_UB10_Orders_Sequence { get; set; }
        public virtual DbSet<RS_OM_UB10_Sequence_Display_Menu_Config> RS_OM_UB10_Sequence_Display_Menu_Config { get; set; }
        public virtual DbSet<RS_OM_UB40_ErrorProffing> RS_OM_UB40_ErrorProffing { get; set; }
        public virtual DbSet<RS_OM_VMS_Error_Log> RS_OM_VMS_Error_Log { get; set; }
        public virtual DbSet<RS_OM_Xylo_Tactsheet_Orders> RS_OM_Xylo_Tactsheet_Orders { get; set; }
        public virtual DbSet<RS_OM_XYLO_Tactsheet_Orders_Sequence> RS_OM_XYLO_Tactsheet_Orders_Sequence { get; set; }
        public virtual DbSet<RS_On_Job_Training_Data> RS_On_Job_Training_Data { get; set; }
        public virtual DbSet<RS_Order_Queue> RS_Order_Queue { get; set; }
        public virtual DbSet<RS_Order_Tracking> RS_Order_Tracking { get; set; }
        public virtual DbSet<RS_Order_Tracking_History> RS_Order_Tracking_History { get; set; }
        public virtual DbSet<RS_Partgroup> RS_Partgroup { get; set; }
        public virtual DbSet<RS_PartgroupItem> RS_PartgroupItem { get; set; }
        public virtual DbSet<RS_PartID> RS_PartID { get; set; }
        public virtual DbSet<RS_PartID_Station> RS_PartID_Station { get; set; }
        public virtual DbSet<RS_Partmaster> RS_Partmaster { get; set; }
        public virtual DbSet<RS_PDIToRFD> RS_PDIToRFD { get; set; }
        public virtual DbSet<RS_Plants> RS_Plants { get; set; }
        public virtual DbSet<RS_Platform> RS_Platform { get; set; }
        public virtual DbSet<RS_PM_Activity> RS_PM_Activity { get; set; }
        public virtual DbSet<RS_PM_Activity_Log> RS_PM_Activity_Log { get; set; }
        public virtual DbSet<RS_PM_Activity_Part> RS_PM_Activity_Part { get; set; }
        public virtual DbSet<RS_PM_Activity_Part_Log> RS_PM_Activity_Part_Log { get; set; }
        public virtual DbSet<RS_PM_Equipment> RS_PM_Equipment { get; set; }
        public virtual DbSet<RS_Print_OK> RS_Print_OK { get; set; }
        public virtual DbSet<RS_PrinterConfig> RS_PrinterConfig { get; set; }
        public virtual DbSet<RS_PRN> RS_PRN { get; set; }
        public virtual DbSet<RS_PRN_Buyoff> RS_PRN_Buyoff { get; set; }
        public virtual DbSet<RS_PRN_Files> RS_PRN_Files { get; set; }
        public virtual DbSet<RS_PRN_Station> RS_PRN_Station { get; set; }
        public virtual DbSet<RS_PRN_Tracebility> RS_PRN_Tracebility { get; set; }
        public virtual DbSet<RS_PRN_Wrap> RS_PRN_Wrap { get; set; }
        public virtual DbSet<RS_Production_Training> RS_Production_Training { get; set; }
        public virtual DbSet<RS_Punching_Data> RS_Punching_Data { get; set; }
        public virtual DbSet<RS_Purge_Deleted_Records> RS_Purge_Deleted_Records { get; set; }
        public virtual DbSet<RS_Purge_Master> RS_Purge_Master { get; set; }
        public virtual DbSet<RS_Purge_ModuleWise_Duration> RS_Purge_ModuleWise_Duration { get; set; }
        public virtual DbSet<RS_QlikSense_EmployeeDetails> RS_QlikSense_EmployeeDetails { get; set; }
        public virtual DbSet<RS_Qlty_Attribute_Master> RS_Qlty_Attribute_Master { get; set; }
        public virtual DbSet<RS_Qlty_Attribute_Master_6M> RS_Qlty_Attribute_Master_6M { get; set; }
        public virtual DbSet<RS_Qlty_BuyOffIndicator> RS_Qlty_BuyOffIndicator { get; set; }
        public virtual DbSet<RS_Qlty_Captures> RS_Qlty_Captures { get; set; }
        public virtual DbSet<RS_Qlty_Causes_Master> RS_Qlty_Causes_Master { get; set; }
        public virtual DbSet<RS_Qlty_Checkpoint_To_Defect> RS_Qlty_Checkpoint_To_Defect { get; set; }
        public virtual DbSet<RS_Qlty_Dashboard_Master> RS_Qlty_Dashboard_Master { get; set; }
        public virtual DbSet<RS_Qlty_Defect> RS_Qlty_Defect { get; set; }
        public virtual DbSet<RS_Qlty_Defect_Corrective> RS_Qlty_Defect_Corrective { get; set; }
        public virtual DbSet<RS_Qlty_Family_Master> RS_Qlty_Family_Master { get; set; }
        public virtual DbSet<RS_Qlty_Image> RS_Qlty_Image { get; set; }
        public virtual DbSet<RS_Qlty_Image_Grid> RS_Qlty_Image_Grid { get; set; }
        public virtual DbSet<RS_Qlty_Image_Part_Defect> RS_Qlty_Image_Part_Defect { get; set; }
        public virtual DbSet<RS_Qlty_LBLT_ParameterList> RS_Qlty_LBLT_ParameterList { get; set; }
        public virtual DbSet<RS_Qlty_LBLT_PartList> RS_Qlty_LBLT_PartList { get; set; }
        public virtual DbSet<RS_Qlty_Location_Of_Concrn> RS_Qlty_Location_Of_Concrn { get; set; }
        public virtual DbSet<RS_Qlty_Mail_Configuration> RS_Qlty_Mail_Configuration { get; set; }
        public virtual DbSet<RS_Qlty_Mail_Subject_Master> RS_Qlty_Mail_Subject_Master { get; set; }
        public virtual DbSet<RS_Qlty_Mstr_BuyOff> RS_Qlty_Mstr_BuyOff { get; set; }
        public virtual DbSet<RS_Qlty_Mstr_Stage> RS_Qlty_Mstr_Stage { get; set; }
        public virtual DbSet<RS_Qlty_Part> RS_Qlty_Part { get; set; }
        public virtual DbSet<RS_Qlty_PartWise> RS_Qlty_PartWise { get; set; }
        public virtual DbSet<RS_Qlty_Rework_BY_Master> RS_Qlty_Rework_BY_Master { get; set; }
        public virtual DbSet<RS_Qlty_Station_Checklist> RS_Qlty_Station_Checklist { get; set; }
        public virtual DbSet<RS_Qlty_Workstation> RS_Qlty_Workstation { get; set; }
        public virtual DbSet<RS_Quality_Captures> RS_Quality_Captures { get; set; }
        public virtual DbSet<RS_Quality_Corrective_Actions> RS_Quality_Corrective_Actions { get; set; }
        public virtual DbSet<RS_Quality_Defect> RS_Quality_Defect { get; set; }
        public virtual DbSet<RS_Quality_Defect_Category> RS_Quality_Defect_Category { get; set; }
        public virtual DbSet<RS_Quality_Defect_Corrective_Actions> RS_Quality_Defect_Corrective_Actions { get; set; }
        public virtual DbSet<RS_Quality_Defect_Users> RS_Quality_Defect_Users { get; set; }
        public virtual DbSet<RS_Quality_Deviation> RS_Quality_Deviation { get; set; }
        public virtual DbSet<RS_Quality_Deviation_Parameters> RS_Quality_Deviation_Parameters { get; set; }
        public virtual DbSet<RS_Quality_Deviation_SerialNo> RS_Quality_Deviation_SerialNo { get; set; }
        public virtual DbSet<RS_Quality_OK_Order> RS_Quality_OK_Order { get; set; }
        public virtual DbSet<RS_Quality_Order_Queue> RS_Quality_Order_Queue { get; set; }
        public virtual DbSet<RS_Quality_Station_List> RS_Quality_Station_List { get; set; }
        public virtual DbSet<RS_Quality_Take_In_Take_Out> RS_Quality_Take_In_Take_Out { get; set; }
        public virtual DbSet<RS_Real_Time_Communication> RS_Real_Time_Communication { get; set; }
        public virtual DbSet<RS_RFD> RS_RFD { get; set; }
        public virtual DbSet<RS_Roles> RS_Roles { get; set; }
        public virtual DbSet<RS_Route_Configurations> RS_Route_Configurations { get; set; }
        public virtual DbSet<RS_Route_Display> RS_Route_Display { get; set; }
        public virtual DbSet<RS_Route_Marriage_Shop> RS_Route_Marriage_Shop { get; set; }
        public virtual DbSet<RS_Route_Marriage_Station> RS_Route_Marriage_Station { get; set; }
        public virtual DbSet<RS_SAP_BOM> RS_SAP_BOM { get; set; }
        public virtual DbSet<RS_SAP_Equipment_Creation> RS_SAP_Equipment_Creation { get; set; }
        public virtual DbSet<RS_SAP_Production_Booking> RS_SAP_Production_Booking { get; set; }
        public virtual DbSet<RS_SAP_Work_Content> RS_SAP_Work_Content { get; set; }
        public virtual DbSet<RS_Serial_Number_Columns> RS_Serial_Number_Columns { get; set; }
        public virtual DbSet<RS_Serial_Number_Configuration> RS_Serial_Number_Configuration { get; set; }
        public virtual DbSet<RS_Serial_Number_Data> RS_Serial_Number_Data { get; set; }
        public virtual DbSet<RS_Series> RS_Series { get; set; }
        public virtual DbSet<RS_Setup> RS_Setup { get; set; }
        public virtual DbSet<RS_Severity> RS_Severity { get; set; }
        public virtual DbSet<RS_Shift> RS_Shift { get; set; }
        public virtual DbSet<RS_Shops> RS_Shops { get; set; }
        public virtual DbSet<RS_Shopwise_Carrier> RS_Shopwise_Carrier { get; set; }
        public virtual DbSet<RS_SOP> RS_SOP { get; set; }
        public virtual DbSet<RS_Station_Alarms> RS_Station_Alarms { get; set; }
        public virtual DbSet<RS_Station_Based_Clita> RS_Station_Based_Clita { get; set; }
        public virtual DbSet<RS_Station_Based_Clita_Log> RS_Station_Based_Clita_Log { get; set; }
        public virtual DbSet<RS_Station_Curation_Master> RS_Station_Curation_Master { get; set; }
        public virtual DbSet<RS_Station_Roles> RS_Station_Roles { get; set; }
        public virtual DbSet<RS_Station_Setup_Mapping> RS_Station_Setup_Mapping { get; set; }
        public virtual DbSet<RS_Station_Tracking> RS_Station_Tracking { get; set; }
        public virtual DbSet<RS_Station_Type> RS_Station_Type { get; set; }
        public virtual DbSet<RS_Stations> RS_Stations { get; set; }
        public virtual DbSet<RS_Status> RS_Status { get; set; }
        public virtual DbSet<RS_Style_Code> RS_Style_Code { get; set; }
        public virtual DbSet<RS_Sub_Menus> RS_Sub_Menus { get; set; }
        public virtual DbSet<RS_SubAssembly_Station_PartMaster> RS_SubAssembly_Station_PartMaster { get; set; }
        public virtual DbSet<RS_Temp_PartwiseData> RS_Temp_PartwiseData { get; set; }
        public virtual DbSet<RS_Traceability> RS_Traceability { get; set; }
        public virtual DbSet<RS_Training_Sessions> RS_Training_Sessions { get; set; }
        public virtual DbSet<RS_Training_Users> RS_Training_Users { get; set; }
        public virtual DbSet<RS_Trim_In> RS_Trim_In { get; set; }
        public virtual DbSet<RS_User_Attendance_Sheet> RS_User_Attendance_Sheet { get; set; }
        public virtual DbSet<RS_User_Attendance_Sheet_History> RS_User_Attendance_Sheet_History { get; set; }
        public virtual DbSet<RS_User_Log> RS_User_Log { get; set; }
        public virtual DbSet<RS_User_Plant_Concern> RS_User_Plant_Concern { get; set; }
        public virtual DbSet<RS_User_Roles> RS_User_Roles { get; set; }
        public virtual DbSet<RS_UserActivity_Log> RS_UserActivity_Log { get; set; }
        public virtual DbSet<RS_Vehicle_Series> RS_Vehicle_Series { get; set; }
        public virtual DbSet<RS_WorkInstruction_Master> RS_WorkInstruction_Master { get; set; }
        public virtual DbSet<RS_WorkInstruction_Submitted> RS_WorkInstruction_Submitted { get; set; }
        public virtual DbSet<RS_WorkInstruction_Submitted_History> RS_WorkInstruction_Submitted_History { get; set; }
        public virtual DbSet<RS_WorkInstruction_TypeList> RS_WorkInstruction_TypeList { get; set; }
        public virtual DbSet<RS_Year> RS_Year { get; set; }
        public virtual DbSet<RS_Year_Identifier> RS_Year_Identifier { get; set; }
        public virtual DbSet<Partwise_Defect_Master_Dummy> Partwise_Defect_Master_Dummy { get; set; }
        public virtual DbSet<RS_Notification_Config> RS_Notification_Config { get; set; }
        public virtual DbSet<RS_OM_Order_Status_Log> RS_OM_Order_Status_Log { get; set; }
        public virtual DbSet<RS_PartList_View> RS_PartList_View { get; set; }
        public virtual DbSet<View_RS_ModelSRVIN> View_RS_ModelSRVIN { get; set; }
    
        [DbFunction("REIN_SOLUTIONEntities", "GetShopWiseDetails")]
        public virtual IQueryable<RS_EngStartedOrders_Cumml_Function_Result> GetShopWiseDetails(Nullable<long> shop_ID)
        {
            var shop_IDParameter = shop_ID.HasValue ?
                new ObjectParameter("Shop_ID", shop_ID) :
                new ObjectParameter("Shop_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<RS_EngStartedOrders_Cumml_Function_Result>("[REIN_SOLUTIONEntities].[GetShopWiseDetails](@Shop_ID)", shop_IDParameter);
        }
    
        [DbFunction("REIN_SOLUTIONEntities", "GetTracterOrderDetails")]
        public virtual IQueryable<RS_TractStartedOrders_Cumml_Function_Result> GetTracterOrderDetails(Nullable<long> shop_ID, Nullable<System.DateTime> planned_Date, Nullable<long> line_ID)
        {
            var shop_IDParameter = shop_ID.HasValue ?
                new ObjectParameter("Shop_ID", shop_ID) :
                new ObjectParameter("Shop_ID", typeof(long));
    
            var planned_DateParameter = planned_Date.HasValue ?
                new ObjectParameter("Planned_Date", planned_Date) :
                new ObjectParameter("Planned_Date", typeof(System.DateTime));
    
            var line_IDParameter = line_ID.HasValue ?
                new ObjectParameter("Line_ID", line_ID) :
                new ObjectParameter("Line_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<RS_TractStartedOrders_Cumml_Function_Result>("[REIN_SOLUTIONEntities].[GetTracterOrderDetails](@Shop_ID, @Planned_Date, @Line_ID)", shop_IDParameter, planned_DateParameter, line_IDParameter);
        }
    
        public virtual int BuyOFfList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BuyOFfList");
        }
    
        public virtual ObjectResult<BuyoffToSource_Result> BuyoffToSource()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuyoffToSource_Result>("BuyoffToSource");
        }
    
        public virtual ObjectResult<BuyoffToSourceByIndicator_Result> BuyoffToSourceByIndicator(string flag)
        {
            var flagParameter = flag != null ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuyoffToSourceByIndicator_Result>("BuyoffToSourceByIndicator", flagParameter);
        }
    
        public virtual ObjectResult<CheckDublicateDefect_Result> CheckDublicateDefect(string bodysrno, Nullable<decimal> buyoff, string quality_type)
        {
            var bodysrnoParameter = bodysrno != null ?
                new ObjectParameter("bodysrno", bodysrno) :
                new ObjectParameter("bodysrno", typeof(string));
    
            var buyoffParameter = buyoff.HasValue ?
                new ObjectParameter("buyoff", buyoff) :
                new ObjectParameter("buyoff", typeof(decimal));
    
            var quality_typeParameter = quality_type != null ?
                new ObjectParameter("quality_type", quality_type) :
                new ObjectParameter("quality_type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckDublicateDefect_Result>("CheckDublicateDefect", bodysrnoParameter, buyoffParameter, quality_typeParameter);
        }
    
        public virtual ObjectResult<closeRS_Qlty_PartWise_Result> closeRS_Qlty_PartWise(Nullable<decimal> plant, Nullable<decimal> shop, Nullable<decimal> buyoff, Nullable<decimal> platform, Nullable<decimal> stage, Nullable<decimal> partid)
        {
            var plantParameter = plant.HasValue ?
                new ObjectParameter("plant", plant) :
                new ObjectParameter("plant", typeof(decimal));
    
            var shopParameter = shop.HasValue ?
                new ObjectParameter("shop", shop) :
                new ObjectParameter("shop", typeof(decimal));
    
            var buyoffParameter = buyoff.HasValue ?
                new ObjectParameter("buyoff", buyoff) :
                new ObjectParameter("buyoff", typeof(decimal));
    
            var platformParameter = platform.HasValue ?
                new ObjectParameter("platform", platform) :
                new ObjectParameter("platform", typeof(decimal));
    
            var stageParameter = stage.HasValue ?
                new ObjectParameter("stage", stage) :
                new ObjectParameter("stage", typeof(decimal));
    
            var partidParameter = partid.HasValue ?
                new ObjectParameter("Partid", partid) :
                new ObjectParameter("Partid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<closeRS_Qlty_PartWise_Result>("closeRS_Qlty_PartWise", plantParameter, shopParameter, buyoffParameter, platformParameter, stageParameter, partidParameter);
        }
    
        public virtual ObjectResult<DefectCaptureList_Result> DefectCaptureList(string bODYSRNO, Nullable<decimal> plantid, Nullable<decimal> shopid)
        {
            var bODYSRNOParameter = bODYSRNO != null ?
                new ObjectParameter("BODYSRNO", bODYSRNO) :
                new ObjectParameter("BODYSRNO", typeof(string));
    
            var plantidParameter = plantid.HasValue ?
                new ObjectParameter("plantid", plantid) :
                new ObjectParameter("plantid", typeof(decimal));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("shopid", shopid) :
                new ObjectParameter("shopid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DefectCaptureList_Result>("DefectCaptureList", bODYSRNOParameter, plantidParameter, shopidParameter);
        }
    
        public virtual ObjectResult<DefectCaptureList_ImageBase_Result> DefectCaptureList_ImageBase(string bODYSRNO, Nullable<decimal> platId, Nullable<decimal> shopid)
        {
            var bODYSRNOParameter = bODYSRNO != null ?
                new ObjectParameter("BODYSRNO", bODYSRNO) :
                new ObjectParameter("BODYSRNO", typeof(string));
    
            var platIdParameter = platId.HasValue ?
                new ObjectParameter("platId", platId) :
                new ObjectParameter("platId", typeof(decimal));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("shopid", shopid) :
                new ObjectParameter("shopid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DefectCaptureList_ImageBase_Result>("DefectCaptureList_ImageBase", bODYSRNOParameter, platIdParameter, shopidParameter);
        }
    
        public virtual int DefectList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DefectList");
        }
    
        public virtual int DefectListByLineID(Nullable<int> lineID)
        {
            var lineIDParameter = lineID.HasValue ?
                new ObjectParameter("LineID", lineID) :
                new ObjectParameter("LineID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DefectListByLineID", lineIDParameter);
        }
    
        public virtual int DefectListByShopID(Nullable<int> shopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DefectListByShopID", shopIDParameter);
        }
    
        public virtual ObjectResult<DefectLocationList_Result> DefectLocationList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DefectLocationList_Result>("DefectLocationList");
        }
    
        public virtual int DefectLocationListByLineID(Nullable<int> lineID)
        {
            var lineIDParameter = lineID.HasValue ?
                new ObjectParameter("LineID", lineID) :
                new ObjectParameter("LineID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DefectLocationListByLineID", lineIDParameter);
        }
    
        public virtual ObjectResult<DefectToLocation_Result> DefectToLocation(Nullable<decimal> shopid, Nullable<decimal> buyoffcode, Nullable<decimal> stageid, Nullable<decimal> partid, Nullable<decimal> defect_ID, Nullable<decimal> platformid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("shopid", shopid) :
                new ObjectParameter("shopid", typeof(decimal));
    
            var buyoffcodeParameter = buyoffcode.HasValue ?
                new ObjectParameter("buyoffcode", buyoffcode) :
                new ObjectParameter("buyoffcode", typeof(decimal));
    
            var stageidParameter = stageid.HasValue ?
                new ObjectParameter("stageid", stageid) :
                new ObjectParameter("stageid", typeof(decimal));
    
            var partidParameter = partid.HasValue ?
                new ObjectParameter("Partid", partid) :
                new ObjectParameter("Partid", typeof(decimal));
    
            var defect_IDParameter = defect_ID.HasValue ?
                new ObjectParameter("Defect_ID", defect_ID) :
                new ObjectParameter("Defect_ID", typeof(decimal));
    
            var platformidParameter = platformid.HasValue ?
                new ObjectParameter("platformid", platformid) :
                new ObjectParameter("platformid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DefectToLocation_Result>("DefectToLocation", shopidParameter, buyoffcodeParameter, stageidParameter, partidParameter, defect_IDParameter, platformidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetAllBodyCount(string hostname, Nullable<decimal> plantid)
        {
            var hostnameParameter = hostname != null ?
                new ObjectParameter("hostname", hostname) :
                new ObjectParameter("hostname", typeof(string));
    
            var plantidParameter = plantid.HasValue ?
                new ObjectParameter("plantid", plantid) :
                new ObjectParameter("plantid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetAllBodyCount", hostnameParameter, plantidParameter);
        }
    
        public virtual int GetAllBodyCountImageBase(string hostname)
        {
            var hostnameParameter = hostname != null ?
                new ObjectParameter("hostname", hostname) :
                new ObjectParameter("hostname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetAllBodyCountImageBase", hostnameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetBodyCount(Nullable<int> flag, Nullable<int> buyoffCode)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(int));
    
            var buyoffCodeParameter = buyoffCode.HasValue ?
                new ObjectParameter("BuyoffCode", buyoffCode) :
                new ObjectParameter("BuyoffCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetBodyCount", flagParameter, buyoffCodeParameter);
        }
    
        public virtual ObjectResult<GetConcenListPartBase_Result> GetConcenListPartBase(Nullable<int> buyoffcode)
        {
            var buyoffcodeParameter = buyoffcode.HasValue ?
                new ObjectParameter("buyoffcode", buyoffcode) :
                new ObjectParameter("buyoffcode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetConcenListPartBase_Result>("GetConcenListPartBase", buyoffcodeParameter);
        }
    
        public virtual ObjectResult<GetConcernlist_Result> GetConcernlist(Nullable<int> buyoffcode)
        {
            var buyoffcodeParameter = buyoffcode.HasValue ?
                new ObjectParameter("buyoffcode", buyoffcode) :
                new ObjectParameter("buyoffcode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetConcernlist_Result>("GetConcernlist", buyoffcodeParameter);
        }
    
        public virtual ObjectResult<GetConcernlistImagebase_Result> GetConcernlistImagebase(Nullable<decimal> buyoffcode)
        {
            var buyoffcodeParameter = buyoffcode.HasValue ?
                new ObjectParameter("buyoffcode", buyoffcode) :
                new ObjectParameter("buyoffcode", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetConcernlistImagebase_Result>("GetConcernlistImagebase", buyoffcodeParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetdefectCountCurrentShift(Nullable<int> buyoffcode, Nullable<int> type)
        {
            var buyoffcodeParameter = buyoffcode.HasValue ?
                new ObjectParameter("buyoffcode", buyoffcode) :
                new ObjectParameter("buyoffcode", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetdefectCountCurrentShift", buyoffcodeParameter, typeParameter);
        }
    
        public virtual ObjectResult<GetDistinctPart_Result> GetDistinctPart(Nullable<int> stageID)
        {
            var stageIDParameter = stageID.HasValue ?
                new ObjectParameter("StageID", stageID) :
                new ObjectParameter("StageID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDistinctPart_Result>("GetDistinctPart", stageIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetFBO(Nullable<int> buyoffcode)
        {
            var buyoffcodeParameter = buyoffcode.HasValue ?
                new ObjectParameter("buyoffcode", buyoffcode) :
                new ObjectParameter("buyoffcode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetFBO", buyoffcodeParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetFRC(Nullable<int> buyoffcode)
        {
            var buyoffcodeParameter = buyoffcode.HasValue ?
                new ObjectParameter("buyoffcode", buyoffcode) :
                new ObjectParameter("buyoffcode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetFRC", buyoffcodeParameter);
        }
    
        public virtual ObjectResult<GetHostName_Result> GetHostName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHostName_Result>("GetHostName");
        }
    
        public virtual ObjectResult<GetImageBaseReportData_Result> GetImageBaseReportData(string sTARTDATE, string eNDDATE, Nullable<int> plantID, Nullable<int> sHOPID, Nullable<int> buyOffCode, Nullable<int> shift, Nullable<int> imageId, Nullable<int> partId)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var buyOffCodeParameter = buyOffCode.HasValue ?
                new ObjectParameter("BuyOffCode", buyOffCode) :
                new ObjectParameter("BuyOffCode", typeof(int));
    
            var shiftParameter = shift.HasValue ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(int));
    
            var imageIdParameter = imageId.HasValue ?
                new ObjectParameter("ImageId", imageId) :
                new ObjectParameter("ImageId", typeof(int));
    
            var partIdParameter = partId.HasValue ?
                new ObjectParameter("PartId", partId) :
                new ObjectParameter("PartId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetImageBaseReportData_Result>("GetImageBaseReportData", sTARTDATEParameter, eNDDATEParameter, plantIDParameter, sHOPIDParameter, buyOffCodeParameter, shiftParameter, imageIdParameter, partIdParameter);
        }
    
        public virtual ObjectResult<getIndicatorListByBuyOff_Line_Result> getIndicatorListByBuyOff_Line(Nullable<int> parentbuyoffcode, Nullable<int> lineid)
        {
            var parentbuyoffcodeParameter = parentbuyoffcode.HasValue ?
                new ObjectParameter("parentbuyoffcode", parentbuyoffcode) :
                new ObjectParameter("parentbuyoffcode", typeof(int));
    
            var lineidParameter = lineid.HasValue ?
                new ObjectParameter("lineid", lineid) :
                new ObjectParameter("lineid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getIndicatorListByBuyOff_Line_Result>("getIndicatorListByBuyOff_Line", parentbuyoffcodeParameter, lineidParameter);
        }
    
        public virtual ObjectResult<GetPartToDefectInPartwise_Result> GetPartToDefectInPartwise(Nullable<decimal> parid, Nullable<decimal> stageid, Nullable<decimal> platformid)
        {
            var paridParameter = parid.HasValue ?
                new ObjectParameter("parid", parid) :
                new ObjectParameter("parid", typeof(decimal));
    
            var stageidParameter = stageid.HasValue ?
                new ObjectParameter("stageid", stageid) :
                new ObjectParameter("stageid", typeof(decimal));
    
            var platformidParameter = platformid.HasValue ?
                new ObjectParameter("platformid", platformid) :
                new ObjectParameter("platformid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPartToDefectInPartwise_Result>("GetPartToDefectInPartwise", paridParameter, stageidParameter, platformidParameter);
        }
    
        public virtual ObjectResult<GetPartToLocationInPartwise_Result> GetPartToLocationInPartwise(Nullable<decimal> parid, Nullable<decimal> stageid, Nullable<decimal> platformid)
        {
            var paridParameter = parid.HasValue ?
                new ObjectParameter("parid", parid) :
                new ObjectParameter("parid", typeof(decimal));
    
            var stageidParameter = stageid.HasValue ?
                new ObjectParameter("stageid", stageid) :
                new ObjectParameter("stageid", typeof(decimal));
    
            var platformidParameter = platformid.HasValue ?
                new ObjectParameter("platformid", platformid) :
                new ObjectParameter("platformid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPartToLocationInPartwise_Result>("GetPartToLocationInPartwise", paridParameter, stageidParameter, platformidParameter);
        }
    
        public virtual ObjectResult<GetPlatformBySrNo_Result> GetPlatformBySrNo(string bodysrno, Nullable<decimal> plantId, Nullable<decimal> shopid)
        {
            var bodysrnoParameter = bodysrno != null ?
                new ObjectParameter("bodysrno", bodysrno) :
                new ObjectParameter("bodysrno", typeof(string));
    
            var plantIdParameter = plantId.HasValue ?
                new ObjectParameter("plantId", plantId) :
                new ObjectParameter("plantId", typeof(decimal));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("shopid", shopid) :
                new ObjectParameter("shopid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPlatformBySrNo_Result>("GetPlatformBySrNo", bodysrnoParameter, plantIdParameter, shopidParameter);
        }
    
        public virtual ObjectResult<GetPlatformList_Result> GetPlatformList(Nullable<decimal> id, Nullable<decimal> shopid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(decimal));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("shopid", shopid) :
                new ObjectParameter("shopid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPlatformList_Result>("GetPlatformList", idParameter, shopidParameter);
        }
    
        public virtual ObjectResult<GetQCRTDWMListByShop_Result> GetQCRTDWMListByShop(Nullable<decimal> shopid, Nullable<decimal> platformid, Nullable<int> top)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("shopid", shopid) :
                new ObjectParameter("shopid", typeof(decimal));
    
            var platformidParameter = platformid.HasValue ?
                new ObjectParameter("platformid", platformid) :
                new ObjectParameter("platformid", typeof(decimal));
    
            var topParameter = top.HasValue ?
                new ObjectParameter("top", top) :
                new ObjectParameter("top", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQCRTDWMListByShop_Result>("GetQCRTDWMListByShop", shopidParameter, platformidParameter, topParameter);
        }
    
        public virtual ObjectResult<GetRealTimeData_Result> GetRealTimeData(Nullable<decimal> buyOffCode)
        {
            var buyOffCodeParameter = buyOffCode.HasValue ?
                new ObjectParameter("BuyOffCode", buyOffCode) :
                new ObjectParameter("BuyOffCode", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRealTimeData_Result>("GetRealTimeData", buyOffCodeParameter);
        }
    
        public virtual ObjectResult<GetRealTimeDataImageBase_Result> GetRealTimeDataImageBase(Nullable<decimal> buyOffCode)
        {
            var buyOffCodeParameter = buyOffCode.HasValue ?
                new ObjectParameter("BuyOffCode", buyOffCode) :
                new ObjectParameter("BuyOffCode", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRealTimeDataImageBase_Result>("GetRealTimeDataImageBase", buyOffCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetShopDPTDashboard(Nullable<int> buyoffcode, Nullable<int> typeDPT)
        {
            var buyoffcodeParameter = buyoffcode.HasValue ?
                new ObjectParameter("buyoffcode", buyoffcode) :
                new ObjectParameter("buyoffcode", typeof(int));
    
            var typeDPTParameter = typeDPT.HasValue ?
                new ObjectParameter("typeDPT", typeDPT) :
                new ObjectParameter("typeDPT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetShopDPTDashboard", buyoffcodeParameter, typeDPTParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetShopFBO(Nullable<int> buyoffcode, Nullable<int> typeFRC)
        {
            var buyoffcodeParameter = buyoffcode.HasValue ?
                new ObjectParameter("buyoffcode", buyoffcode) :
                new ObjectParameter("buyoffcode", typeof(int));
    
            var typeFRCParameter = typeFRC.HasValue ?
                new ObjectParameter("typeFRC", typeFRC) :
                new ObjectParameter("typeFRC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetShopFBO", buyoffcodeParameter, typeFRCParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetShopFRCDashboard(Nullable<int> buyoffcode, Nullable<int> typeFRC)
        {
            var buyoffcodeParameter = buyoffcode.HasValue ?
                new ObjectParameter("buyoffcode", buyoffcode) :
                new ObjectParameter("buyoffcode", typeof(int));
    
            var typeFRCParameter = typeFRC.HasValue ?
                new ObjectParameter("typeFRC", typeFRC) :
                new ObjectParameter("typeFRC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetShopFRCDashboard", buyoffcodeParameter, typeFRCParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetShopPPMDashboard(Nullable<int> buyoffcode, Nullable<int> typePPM)
        {
            var buyoffcodeParameter = buyoffcode.HasValue ?
                new ObjectParameter("buyoffcode", buyoffcode) :
                new ObjectParameter("buyoffcode", typeof(int));
    
            var typePPMParameter = typePPM.HasValue ?
                new ObjectParameter("typePPM", typePPM) :
                new ObjectParameter("typePPM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetShopPPMDashboard", buyoffcodeParameter, typePPMParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetSTR(Nullable<int> buyoffcode)
        {
            var buyoffcodeParameter = buyoffcode.HasValue ?
                new ObjectParameter("buyoffcode", buyoffcode) :
                new ObjectParameter("buyoffcode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetSTR", buyoffcodeParameter);
        }
    
        public virtual ObjectResult<LocationToSeverity_Result> LocationToSeverity()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LocationToSeverity_Result>("LocationToSeverity");
        }
    
        public virtual ObjectResult<PartToDefect_Result> PartToDefect(string partName)
        {
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PartToDefect_Result>("PartToDefect", partNameParameter);
        }
    
        public virtual ObjectResult<QDMSList_Result> QDMSList(string hostName)
        {
            var hostNameParameter = hostName != null ?
                new ObjectParameter("HostName", hostName) :
                new ObjectParameter("HostName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QDMSList_Result>("QDMSList", hostNameParameter);
        }
    
        public virtual int Rework_Mail(Nullable<int> line_id, string start_time, string end_time)
        {
            var line_idParameter = line_id.HasValue ?
                new ObjectParameter("Line_id", line_id) :
                new ObjectParameter("Line_id", typeof(int));
    
            var start_timeParameter = start_time != null ?
                new ObjectParameter("Start_time", start_time) :
                new ObjectParameter("Start_time", typeof(string));
    
            var end_timeParameter = end_time != null ?
                new ObjectParameter("End_time", end_time) :
                new ObjectParameter("End_time", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rework_Mail", line_idParameter, start_timeParameter, end_timeParameter);
        }
    
        public virtual ObjectResult<ReworkHistroy_Result> ReworkHistroy(string defect_Name)
        {
            var defect_NameParameter = defect_Name != null ?
                new ObjectParameter("Defect_Name", defect_Name) :
                new ObjectParameter("Defect_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReworkHistroy_Result>("ReworkHistroy", defect_NameParameter);
        }
    
        public virtual ObjectResult<ReworkHistroyByBodySrNo_Result> ReworkHistroyByBodySrNo(string bodysrno, string defect_Name)
        {
            var bodysrnoParameter = bodysrno != null ?
                new ObjectParameter("bodysrno", bodysrno) :
                new ObjectParameter("bodysrno", typeof(string));
    
            var defect_NameParameter = defect_Name != null ?
                new ObjectParameter("Defect_Name", defect_Name) :
                new ObjectParameter("Defect_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReworkHistroyByBodySrNo_Result>("ReworkHistroyByBodySrNo", bodysrnoParameter, defect_NameParameter);
        }
    
        public virtual ObjectResult<SeverityList_Result> SeverityList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SeverityList_Result>("SeverityList");
        }
    
        public virtual ObjectResult<SeverityListByShopId_Result> SeverityListByShopId(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("shopid", shopid) :
                new ObjectParameter("shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SeverityListByShopId_Result>("SeverityListByShopId", shopidParameter);
        }
    
        public virtual ObjectResult<ShiftDay_GetBodyCount_Result> ShiftDay_GetBodyCount(Nullable<int> flag, Nullable<int> buyoffCode)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(int));
    
            var buyoffCodeParameter = buyoffCode.HasValue ?
                new ObjectParameter("BuyoffCode", buyoffCode) :
                new ObjectParameter("BuyoffCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShiftDay_GetBodyCount_Result>("ShiftDay_GetBodyCount", flagParameter, buyoffCodeParameter);
        }
    
        public virtual ObjectResult<SourceToStage_Result> SourceToStage(Nullable<int> buyoffcode)
        {
            var buyoffcodeParameter = buyoffcode.HasValue ?
                new ObjectParameter("Buyoffcode", buyoffcode) :
                new ObjectParameter("Buyoffcode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SourceToStage_Result>("SourceToStage", buyoffcodeParameter);
        }
    
        public virtual ObjectResult<Sp_Attributewise_Model_Result> Sp_Attributewise_Model(string sTARTDATE, string eNDDATE, string shift, Nullable<int> sHOPID, Nullable<int> platformID, Nullable<int> plantID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var platformIDParameter = platformID.HasValue ?
                new ObjectParameter("PlatformID", platformID) :
                new ObjectParameter("PlatformID", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Attributewise_Model_Result>("Sp_Attributewise_Model", sTARTDATEParameter, eNDDATEParameter, shiftParameter, sHOPIDParameter, platformIDParameter, plantIDParameter);
        }
    
        public virtual ObjectResult<Sp_Attributewise_Model_New_Result> Sp_Attributewise_Model_New(string sTARTDATE, string eNDDATE, string shift, Nullable<int> sHOPID, Nullable<int> platformID, Nullable<int> plantID, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var platformIDParameter = platformID.HasValue ?
                new ObjectParameter("PlatformID", platformID) :
                new ObjectParameter("PlatformID", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Attributewise_Model_New_Result>("Sp_Attributewise_Model_New", sTARTDATEParameter, eNDDATEParameter, shiftParameter, sHOPIDParameter, platformIDParameter, plantIDParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<Sp_Attributewise_Shop_Result> Sp_Attributewise_Shop(string sTARTDATE, string eNDDATE, string shift, Nullable<int> sHOPID, Nullable<int> plantID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Attributewise_Shop_Result>("Sp_Attributewise_Shop", sTARTDATEParameter, eNDDATEParameter, shiftParameter, sHOPIDParameter, plantIDParameter);
        }
    
        public virtual ObjectResult<Sp_Attributewise_Shop_New_Result> Sp_Attributewise_Shop_New(string sTARTDATE, string eNDDATE, string shift, Nullable<int> sHOPID, Nullable<int> plantID, Nullable<int> buyoffcode, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var buyoffcodeParameter = buyoffcode.HasValue ?
                new ObjectParameter("buyoffcode", buyoffcode) :
                new ObjectParameter("buyoffcode", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Attributewise_Shop_New_Result>("Sp_Attributewise_Shop_New", sTARTDATEParameter, eNDDATEParameter, shiftParameter, sHOPIDParameter, plantIDParameter, buyoffcodeParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<Sp_Attributewise_Source_Result> Sp_Attributewise_Source(string sTARTDATE, string eNDDATE, string shift, Nullable<int> buyOFfID, Nullable<int> sourceID, Nullable<int> sHOPID, Nullable<int> plantID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var buyOFfIDParameter = buyOFfID.HasValue ?
                new ObjectParameter("BuyOFfID", buyOFfID) :
                new ObjectParameter("BuyOFfID", typeof(int));
    
            var sourceIDParameter = sourceID.HasValue ?
                new ObjectParameter("SourceID", sourceID) :
                new ObjectParameter("SourceID", typeof(int));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Attributewise_Source_Result>("Sp_Attributewise_Source", sTARTDATEParameter, eNDDATEParameter, shiftParameter, buyOFfIDParameter, sourceIDParameter, sHOPIDParameter, plantIDParameter);
        }
    
        public virtual ObjectResult<Sp_Attributewise_Source_New_Result> Sp_Attributewise_Source_New(string sTARTDATE, string eNDDATE, string shift, Nullable<int> buyOFfID, Nullable<int> sourceID, Nullable<int> sHOPID, Nullable<int> plantID, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var buyOFfIDParameter = buyOFfID.HasValue ?
                new ObjectParameter("BuyOFfID", buyOFfID) :
                new ObjectParameter("BuyOFfID", typeof(int));
    
            var sourceIDParameter = sourceID.HasValue ?
                new ObjectParameter("SourceID", sourceID) :
                new ObjectParameter("SourceID", typeof(int));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Attributewise_Source_New_Result>("Sp_Attributewise_Source_New", sTARTDATEParameter, eNDDATEParameter, shiftParameter, buyOFfIDParameter, sourceIDParameter, sHOPIDParameter, plantIDParameter, sub_ShopIDParameter);
        }
    
        public virtual int Sp_Defectsrclist(string defactsrc)
        {
            var defactsrcParameter = defactsrc != null ?
                new ObjectParameter("Defactsrc", defactsrc) :
                new ObjectParameter("Defactsrc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Defectsrclist", defactsrcParameter);
        }
    
        public virtual int SP_Delete_Error_Log()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_Error_Log");
        }
    
        public virtual ObjectResult<Sp_DetailReport_Result> Sp_DetailReport(string sTARTDATE, string eNDDATE, string shift, Nullable<int> plant, Nullable<int> shopID, Nullable<long> buyOffID, string eNGINE, Nullable<int> defectstatus, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var buyOffIDParameter = buyOffID.HasValue ?
                new ObjectParameter("BuyOffID", buyOffID) :
                new ObjectParameter("BuyOffID", typeof(long));
    
            var eNGINEParameter = eNGINE != null ?
                new ObjectParameter("ENGINE", eNGINE) :
                new ObjectParameter("ENGINE", typeof(string));
    
            var defectstatusParameter = defectstatus.HasValue ?
                new ObjectParameter("Defectstatus", defectstatus) :
                new ObjectParameter("Defectstatus", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_DetailReport_Result>("Sp_DetailReport", sTARTDATEParameter, eNDDATEParameter, shiftParameter, plantParameter, shopIDParameter, buyOffIDParameter, eNGINEParameter, defectstatusParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<SP_GetBodyShopPlatform_Result> SP_GetBodyShopPlatform()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetBodyShopPlatform_Result>("SP_GetBodyShopPlatform");
        }
    
        public virtual ObjectResult<SP_GetBuyOffStages_Result> SP_GetBuyOffStages()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetBuyOffStages_Result>("SP_GetBuyOffStages");
        }
    
        public virtual int sp_GetFrcLine(string startDate, string endDate, Nullable<int> lineName)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var lineNameParameter = lineName.HasValue ?
                new ObjectParameter("LineName", lineName) :
                new ObjectParameter("LineName", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetFrcLine", startDateParameter, endDateParameter, lineNameParameter);
        }
    
        public virtual ObjectResult<sp_GetFrcLineChartReport_Result> sp_GetFrcLineChartReport(string startDate, string endDate, Nullable<int> lineName)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var lineNameParameter = lineName.HasValue ?
                new ObjectParameter("LineName", lineName) :
                new ObjectParameter("LineName", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetFrcLineChartReport_Result>("sp_GetFrcLineChartReport", startDateParameter, endDateParameter, lineNameParameter);
        }
    
        public virtual ObjectResult<Sp_IndicatorCountPichatrpt_Result> Sp_IndicatorCountPichatrpt(string sTARTDATE, string eNDDATE, string shift, Nullable<int> shopID, Nullable<int> buyOffID, Nullable<int> plant)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var buyOffIDParameter = buyOffID.HasValue ?
                new ObjectParameter("BuyOffID", buyOffID) :
                new ObjectParameter("BuyOffID", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_IndicatorCountPichatrpt_Result>("Sp_IndicatorCountPichatrpt", sTARTDATEParameter, eNDDATEParameter, shiftParameter, shopIDParameter, buyOffIDParameter, plantParameter);
        }
    
        public virtual ObjectResult<Sp_IndicatorCountPichatrpt_New_Result> Sp_IndicatorCountPichatrpt_New(string sTARTDATE, string eNDDATE, string shift, Nullable<int> shopID, Nullable<int> buyOffID, Nullable<int> plant, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var buyOffIDParameter = buyOffID.HasValue ?
                new ObjectParameter("BuyOffID", buyOffID) :
                new ObjectParameter("BuyOffID", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_IndicatorCountPichatrpt_New_Result>("Sp_IndicatorCountPichatrpt_New", sTARTDATEParameter, eNDDATEParameter, shiftParameter, shopIDParameter, buyOffIDParameter, plantParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<Sp_Indicatorwise_Model_Result> Sp_Indicatorwise_Model(Nullable<int> shopID, string sTARTDATE, string eNDDATE, string shift, Nullable<int> plantID, Nullable<int> platformID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var platformIDParameter = platformID.HasValue ?
                new ObjectParameter("PlatformID", platformID) :
                new ObjectParameter("PlatformID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Indicatorwise_Model_Result>("Sp_Indicatorwise_Model", shopIDParameter, sTARTDATEParameter, eNDDATEParameter, shiftParameter, plantIDParameter, platformIDParameter);
        }
    
        public virtual ObjectResult<Sp_Indicatorwise_Model_New_Result> Sp_Indicatorwise_Model_New(Nullable<int> shopID, string sTARTDATE, string eNDDATE, string shift, Nullable<int> plantID, Nullable<int> platformID, string sub_ShopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var platformIDParameter = platformID.HasValue ?
                new ObjectParameter("PlatformID", platformID) :
                new ObjectParameter("PlatformID", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Indicatorwise_Model_New_Result>("Sp_Indicatorwise_Model_New", shopIDParameter, sTARTDATEParameter, eNDDATEParameter, shiftParameter, plantIDParameter, platformIDParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<Sp_Indicatorwise_Shop_Result> Sp_Indicatorwise_Shop(Nullable<int> shopID, string sTARTDATE, string eNDDATE, string shift, Nullable<int> plantID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Indicatorwise_Shop_Result>("Sp_Indicatorwise_Shop", shopIDParameter, sTARTDATEParameter, eNDDATEParameter, shiftParameter, plantIDParameter);
        }
    
        public virtual ObjectResult<Sp_Indicatorwise_Shop_New_Result> Sp_Indicatorwise_Shop_New(Nullable<int> shopID, string sTARTDATE, string eNDDATE, string shift, Nullable<int> plantID, string sub_ShopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Indicatorwise_Shop_New_Result>("Sp_Indicatorwise_Shop_New", shopIDParameter, sTARTDATEParameter, eNDDATEParameter, shiftParameter, plantIDParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<Sp_Indicatorwise_Source_Result> Sp_Indicatorwise_Source(Nullable<int> shopID, Nullable<int> buyOffID, string sTARTDATE, string eNDDATE, string shift, Nullable<int> plantID, Nullable<int> sourceID, string sub_ShopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var buyOffIDParameter = buyOffID.HasValue ?
                new ObjectParameter("BuyOffID", buyOffID) :
                new ObjectParameter("BuyOffID", typeof(int));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sourceIDParameter = sourceID.HasValue ?
                new ObjectParameter("SourceID", sourceID) :
                new ObjectParameter("SourceID", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Indicatorwise_Source_Result>("Sp_Indicatorwise_Source", shopIDParameter, buyOffIDParameter, sTARTDATEParameter, eNDDATEParameter, shiftParameter, plantIDParameter, sourceIDParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<Sp_Indicatorwiserpt_Result> Sp_Indicatorwiserpt(Nullable<int> shopID, Nullable<int> buyOffID, string sTARTDATE, string eNDDATE, string shift, Nullable<int> plantID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var buyOffIDParameter = buyOffID.HasValue ?
                new ObjectParameter("BuyOffID", buyOffID) :
                new ObjectParameter("BuyOffID", typeof(int));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Indicatorwiserpt_Result>("Sp_Indicatorwiserpt", shopIDParameter, buyOffIDParameter, sTARTDATEParameter, eNDDATEParameter, shiftParameter, plantIDParameter);
        }
    
        public virtual ObjectResult<Sp_LineWiseFRCPPM_Result> Sp_LineWiseFRCPPM(string sTARTDATE, string eNDDATE, Nullable<int> shopId, Nullable<int> plant)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("shopId", shopId) :
                new ObjectParameter("shopId", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_LineWiseFRCPPM_Result>("Sp_LineWiseFRCPPM", sTARTDATEParameter, eNDDATEParameter, shopIdParameter, plantParameter);
        }
    
        public virtual ObjectResult<Sp_LineWiseFRCPPM1_Result> Sp_LineWiseFRCPPM1(string sTARTDATE, string eNDDATE, Nullable<int> lineName)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var lineNameParameter = lineName.HasValue ?
                new ObjectParameter("LineName", lineName) :
                new ObjectParameter("LineName", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_LineWiseFRCPPM1_Result>("Sp_LineWiseFRCPPM1", sTARTDATEParameter, eNDDATEParameter, lineNameParameter);
        }
    
        public virtual int Sp_LineWiseFRCPPMMonthly(Nullable<int> year, Nullable<int> sTARTMonth, Nullable<int> eNDMonth, Nullable<int> shopId, Nullable<int> plant)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var sTARTMonthParameter = sTARTMonth.HasValue ?
                new ObjectParameter("STARTMonth", sTARTMonth) :
                new ObjectParameter("STARTMonth", typeof(int));
    
            var eNDMonthParameter = eNDMonth.HasValue ?
                new ObjectParameter("ENDMonth", eNDMonth) :
                new ObjectParameter("ENDMonth", typeof(int));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("ShopId", shopId) :
                new ObjectParameter("ShopId", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_LineWiseFRCPPMMonthly", yearParameter, sTARTMonthParameter, eNDMonthParameter, shopIdParameter, plantParameter);
        }
    
        public virtual int Sp_LineWiseFRCPPMTemp(string sTARTDATE, string eNDDATE, Nullable<int> shopId, Nullable<int> plant)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("ShopId", shopId) :
                new ObjectParameter("ShopId", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_LineWiseFRCPPMTemp", sTARTDATEParameter, eNDDATEParameter, shopIdParameter, plantParameter);
        }
    
        public virtual int Sp_LineWiseFRCPPMYearly(Nullable<int> sTARTYear, Nullable<int> eNDYear, Nullable<int> shopId, Nullable<int> plant)
        {
            var sTARTYearParameter = sTARTYear.HasValue ?
                new ObjectParameter("STARTYear", sTARTYear) :
                new ObjectParameter("STARTYear", typeof(int));
    
            var eNDYearParameter = eNDYear.HasValue ?
                new ObjectParameter("ENDYear", eNDYear) :
                new ObjectParameter("ENDYear", typeof(int));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("shopId", shopId) :
                new ObjectParameter("shopId", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_LineWiseFRCPPMYearly", sTARTYearParameter, eNDYearParameter, shopIdParameter, plantParameter);
        }
    
        public virtual ObjectResult<Sp_MIS_Platformwise_Result> Sp_MIS_Platformwise(string sTARTDATE, string eNDDATE, Nullable<int> plantID, Nullable<int> sHOPID, Nullable<int> platform)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var platformParameter = platform.HasValue ?
                new ObjectParameter("platform", platform) :
                new ObjectParameter("platform", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_MIS_Platformwise_Result>("Sp_MIS_Platformwise", sTARTDATEParameter, eNDDATEParameter, plantIDParameter, sHOPIDParameter, platformParameter);
        }
    
        public virtual ObjectResult<Sp_MIS_Total_Production_Result> Sp_MIS_Total_Production(string sTARTDATE, string eNDDATE, Nullable<int> plantID, Nullable<int> sHOPID, Nullable<int> platform)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var platformParameter = platform.HasValue ?
                new ObjectParameter("platform", platform) :
                new ObjectParameter("platform", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_MIS_Total_Production_Result>("Sp_MIS_Total_Production", sTARTDATEParameter, eNDDATEParameter, plantIDParameter, sHOPIDParameter, platformParameter);
        }
    
        public virtual ObjectResult<Sp_MIS_Total_Production_DPT_Result> Sp_MIS_Total_Production_DPT(string sTARTDATE, string eNDDATE, Nullable<int> plantID, Nullable<int> sHOPID, Nullable<int> platform)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var platformParameter = platform.HasValue ?
                new ObjectParameter("platform", platform) :
                new ObjectParameter("platform", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_MIS_Total_Production_DPT_Result>("Sp_MIS_Total_Production_DPT", sTARTDATEParameter, eNDDATEParameter, plantIDParameter, sHOPIDParameter, platformParameter);
        }
    
        public virtual ObjectResult<Sp_Pareto_Graph_Result> Sp_Pareto_Graph(Nullable<int> shopID, Nullable<int> buyOffID, string sTARTDATE, string eNDDATE, string shift, string top, Nullable<int> status, Nullable<int> plantID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var buyOffIDParameter = buyOffID.HasValue ?
                new ObjectParameter("BuyOffID", buyOffID) :
                new ObjectParameter("BuyOffID", typeof(int));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Pareto_Graph_Result>("Sp_Pareto_Graph", shopIDParameter, buyOffIDParameter, sTARTDATEParameter, eNDDATEParameter, shiftParameter, topParameter, statusParameter, plantIDParameter);
        }
    
        public virtual ObjectResult<Sp_Pareto_Graph_Model_Result> Sp_Pareto_Graph_Model(Nullable<int> shopID, string sTARTDATE, string eNDDATE, string shift, string top, Nullable<int> status, Nullable<int> plantID, Nullable<int> platformID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var platformIDParameter = platformID.HasValue ?
                new ObjectParameter("PlatformID", platformID) :
                new ObjectParameter("PlatformID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Pareto_Graph_Model_Result>("Sp_Pareto_Graph_Model", shopIDParameter, sTARTDATEParameter, eNDDATEParameter, shiftParameter, topParameter, statusParameter, plantIDParameter, platformIDParameter);
        }
    
        public virtual ObjectResult<Sp_Pareto_Graph_Model_New_Result> Sp_Pareto_Graph_Model_New(Nullable<int> shopID, string sTARTDATE, string eNDDATE, string shift, string top, Nullable<int> status, Nullable<int> plantID, Nullable<int> platformID, string sub_ShopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var platformIDParameter = platformID.HasValue ?
                new ObjectParameter("PlatformID", platformID) :
                new ObjectParameter("PlatformID", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Pareto_Graph_Model_New_Result>("Sp_Pareto_Graph_Model_New", shopIDParameter, sTARTDATEParameter, eNDDATEParameter, shiftParameter, topParameter, statusParameter, plantIDParameter, platformIDParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<Sp_Pareto_Graph_Shop_Result> Sp_Pareto_Graph_Shop(Nullable<int> shopID, string sTARTDATE, string eNDDATE, string shift, string top, Nullable<int> status, Nullable<int> plantID, string sub_ShopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Pareto_Graph_Shop_Result>("Sp_Pareto_Graph_Shop", shopIDParameter, sTARTDATEParameter, eNDDATEParameter, shiftParameter, topParameter, statusParameter, plantIDParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<Sp_Pareto_Graph_Source_Result> Sp_Pareto_Graph_Source(Nullable<int> shopID, Nullable<int> buyOffID, string sTARTDATE, string eNDDATE, string shift, string top, Nullable<int> status, Nullable<int> plantID, Nullable<int> sourceID, string sub_ShopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var buyOffIDParameter = buyOffID.HasValue ?
                new ObjectParameter("BuyOffID", buyOffID) :
                new ObjectParameter("BuyOffID", typeof(int));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sourceIDParameter = sourceID.HasValue ?
                new ObjectParameter("SourceID", sourceID) :
                new ObjectParameter("SourceID", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Pareto_Graph_Source_Result>("Sp_Pareto_Graph_Source", shopIDParameter, buyOffIDParameter, sTARTDATEParameter, eNDDATEParameter, shiftParameter, topParameter, statusParameter, plantIDParameter, sourceIDParameter, sub_ShopIDParameter);
        }
    
        public virtual int Sp_PartwiseTransferFromExcel(Nullable<int> excel_number)
        {
            var excel_numberParameter = excel_number.HasValue ?
                new ObjectParameter("excel_number", excel_number) :
                new ObjectParameter("excel_number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_PartwiseTransferFromExcel", excel_numberParameter);
        }
    
        public virtual int Sp_PlantFRCPPM(string sTARTDATE, string eNDDATE, Nullable<int> plant)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_PlantFRCPPM", sTARTDATEParameter, eNDDATEParameter, plantParameter);
        }
    
        public virtual ObjectResult<Sp_QualityDetailRpt_Result> Sp_QualityDetailRpt(string sTARTDATE, string eNDDATE, string shift, Nullable<int> plant, Nullable<int> shopID, Nullable<long> buyOffID, string eNGINE, Nullable<bool> defectstatus)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var buyOffIDParameter = buyOffID.HasValue ?
                new ObjectParameter("BuyOffID", buyOffID) :
                new ObjectParameter("BuyOffID", typeof(long));
    
            var eNGINEParameter = eNGINE != null ?
                new ObjectParameter("ENGINE", eNGINE) :
                new ObjectParameter("ENGINE", typeof(string));
    
            var defectstatusParameter = defectstatus.HasValue ?
                new ObjectParameter("Defectstatus", defectstatus) :
                new ObjectParameter("Defectstatus", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_QualityDetailRpt_Result>("Sp_QualityDetailRpt", sTARTDATEParameter, eNDDATEParameter, shiftParameter, plantParameter, shopIDParameter, buyOffIDParameter, eNGINEParameter, defectstatusParameter);
        }
    
        public virtual int Sp_QualityEngineReport(string sTARTDATE, string eNDDATE, Nullable<int> lineID, Nullable<long> buyOffID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var lineIDParameter = lineID.HasValue ?
                new ObjectParameter("LineID", lineID) :
                new ObjectParameter("LineID", typeof(int));
    
            var buyOffIDParameter = buyOffID.HasValue ?
                new ObjectParameter("BuyOffID", buyOffID) :
                new ObjectParameter("BuyOffID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_QualityEngineReport", sTARTDATEParameter, eNDDATEParameter, lineIDParameter, buyOffIDParameter);
        }
    
        public virtual ObjectResult<Sp_QualityEngineRpt_Result> Sp_QualityEngineRpt(string sTARTDATE, string eNDDATE, string shift, Nullable<int> plant, Nullable<int> shopID, Nullable<long> buyOffID, string eNGINE, Nullable<int> defectstatus)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var buyOffIDParameter = buyOffID.HasValue ?
                new ObjectParameter("BuyOffID", buyOffID) :
                new ObjectParameter("BuyOffID", typeof(long));
    
            var eNGINEParameter = eNGINE != null ?
                new ObjectParameter("ENGINE", eNGINE) :
                new ObjectParameter("ENGINE", typeof(string));
    
            var defectstatusParameter = defectstatus.HasValue ?
                new ObjectParameter("Defectstatus", defectstatus) :
                new ObjectParameter("Defectstatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_QualityEngineRpt_Result>("Sp_QualityEngineRpt", sTARTDATEParameter, eNDDATEParameter, shiftParameter, plantParameter, shopIDParameter, buyOffIDParameter, eNGINEParameter, defectstatusParameter);
        }
    
        public virtual ObjectResult<Sp_QualityEngineRpt1_Result> Sp_QualityEngineRpt1(string sTARTDATE, string eNDDATE, string shift, Nullable<int> plant, Nullable<int> shopID, Nullable<long> buyOffID, string eNGINE, Nullable<int> defectstatus, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var buyOffIDParameter = buyOffID.HasValue ?
                new ObjectParameter("BuyOffID", buyOffID) :
                new ObjectParameter("BuyOffID", typeof(long));
    
            var eNGINEParameter = eNGINE != null ?
                new ObjectParameter("ENGINE", eNGINE) :
                new ObjectParameter("ENGINE", typeof(string));
    
            var defectstatusParameter = defectstatus.HasValue ?
                new ObjectParameter("Defectstatus", defectstatus) :
                new ObjectParameter("Defectstatus", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_QualityEngineRpt1_Result>("Sp_QualityEngineRpt1", sTARTDATEParameter, eNDDATEParameter, shiftParameter, plantParameter, shopIDParameter, buyOffIDParameter, eNGINEParameter, defectstatusParameter, sub_ShopIDParameter);
        }
    
        public virtual int Sp_QualitySummary(string sTARTDATE, string eNDDATE, string shift, Nullable<int> sHOPID, Nullable<int> buyOffCode, Nullable<int> plantID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var buyOffCodeParameter = buyOffCode.HasValue ?
                new ObjectParameter("BuyOffCode", buyOffCode) :
                new ObjectParameter("BuyOffCode", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_QualitySummary", sTARTDATEParameter, eNDDATEParameter, shiftParameter, sHOPIDParameter, buyOffCodeParameter, plantIDParameter);
        }
    
        public virtual int Sp_QualitySummary_New(string sTARTDATE, string eNDDATE, string shift, Nullable<int> sHOPID, Nullable<int> buyOffCode, Nullable<int> plantID, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var buyOffCodeParameter = buyOffCode.HasValue ?
                new ObjectParameter("BuyOffCode", buyOffCode) :
                new ObjectParameter("BuyOffCode", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_QualitySummary_New", sTARTDATEParameter, eNDDATEParameter, shiftParameter, sHOPIDParameter, buyOffCodeParameter, plantIDParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<Sp_QualitySummary_New1_Result> Sp_QualitySummary_New1(string sTARTDATE, string eNDDATE, string shift, Nullable<int> sHOPID, Nullable<int> buyOffCode, Nullable<int> plantID, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var buyOffCodeParameter = buyOffCode.HasValue ?
                new ObjectParameter("BuyOffCode", buyOffCode) :
                new ObjectParameter("BuyOffCode", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_QualitySummary_New1_Result>("Sp_QualitySummary_New1", sTARTDATEParameter, eNDDATEParameter, shiftParameter, sHOPIDParameter, buyOffCodeParameter, plantIDParameter, sub_ShopIDParameter);
        }
    
        public virtual int Sp_QualitySummary_New3(string sTARTDATE, string eNDDATE, string shift, Nullable<int> sHOPID, Nullable<int> buyOffCode, Nullable<int> plantID, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var buyOffCodeParameter = buyOffCode.HasValue ?
                new ObjectParameter("BuyOffCode", buyOffCode) :
                new ObjectParameter("BuyOffCode", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_QualitySummary_New3", sTARTDATEParameter, eNDDATEParameter, shiftParameter, sHOPIDParameter, buyOffCodeParameter, plantIDParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<Sp_ShopWiseFRCDPT_Daily_Result> Sp_ShopWiseFRCDPT_Daily(string sTARTDATE, string eNDDATE, Nullable<int> shopId, Nullable<int> plant)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("shopId", shopId) :
                new ObjectParameter("shopId", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ShopWiseFRCDPT_Daily_Result>("Sp_ShopWiseFRCDPT_Daily", sTARTDATEParameter, eNDDATEParameter, shopIdParameter, plantParameter);
        }
    
        public virtual int Sp_ShopWiseFRCDPT_Daily_New(string sTARTDATE, string eNDDATE, Nullable<int> shopId, Nullable<int> plant, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("shopId", shopId) :
                new ObjectParameter("shopId", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ShopWiseFRCDPT_Daily_New", sTARTDATEParameter, eNDDATEParameter, shopIdParameter, plantParameter, sub_ShopIDParameter);
        }
    
        public virtual int Sp_ShopWiseFRCDPT_Daywise(string sTARTDATE, string eNDDATE, Nullable<int> shopId, Nullable<int> plant)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("ShopId", shopId) :
                new ObjectParameter("ShopId", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ShopWiseFRCDPT_Daywise", sTARTDATEParameter, eNDDATEParameter, shopIdParameter, plantParameter);
        }
    
        public virtual int Sp_ShopWiseFRCDPT_Daywise_New(string sTARTDATE, string eNDDATE, Nullable<int> shopId, Nullable<int> plant, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("ShopId", shopId) :
                new ObjectParameter("ShopId", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ShopWiseFRCDPT_Daywise_New", sTARTDATEParameter, eNDDATEParameter, shopIdParameter, plantParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<Sp_ShopWiseFRCDPT_Model_Result> Sp_ShopWiseFRCDPT_Model(string sTARTDATE, string eNDDATE, Nullable<int> shopId, Nullable<int> plant, string platformID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("shopId", shopId) :
                new ObjectParameter("shopId", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var platformIDParameter = platformID != null ?
                new ObjectParameter("PlatformID", platformID) :
                new ObjectParameter("PlatformID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ShopWiseFRCDPT_Model_Result>("Sp_ShopWiseFRCDPT_Model", sTARTDATEParameter, eNDDATEParameter, shopIdParameter, plantParameter, platformIDParameter);
        }
    
        public virtual ObjectResult<Sp_ShopWiseFRCDPT_Model_New_Result> Sp_ShopWiseFRCDPT_Model_New(string sTARTDATE, string eNDDATE, Nullable<int> shopId, Nullable<int> plant, string platformID, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("shopId", shopId) :
                new ObjectParameter("shopId", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var platformIDParameter = platformID != null ?
                new ObjectParameter("PlatformID", platformID) :
                new ObjectParameter("PlatformID", typeof(string));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ShopWiseFRCDPT_Model_New_Result>("Sp_ShopWiseFRCDPT_Model_New", sTARTDATEParameter, eNDDATEParameter, shopIdParameter, plantParameter, platformIDParameter, sub_ShopIDParameter);
        }
    
        public virtual int Sp_ShopWiseFRCDPT_Monthly(Nullable<int> year, Nullable<int> sTARTMonth, Nullable<int> eNDMonth, Nullable<int> shopId, Nullable<int> plant)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var sTARTMonthParameter = sTARTMonth.HasValue ?
                new ObjectParameter("STARTMonth", sTARTMonth) :
                new ObjectParameter("STARTMonth", typeof(int));
    
            var eNDMonthParameter = eNDMonth.HasValue ?
                new ObjectParameter("ENDMonth", eNDMonth) :
                new ObjectParameter("ENDMonth", typeof(int));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("ShopId", shopId) :
                new ObjectParameter("ShopId", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ShopWiseFRCDPT_Monthly", yearParameter, sTARTMonthParameter, eNDMonthParameter, shopIdParameter, plantParameter);
        }
    
        public virtual int Sp_ShopWiseFRCDPT_Monthly_New(Nullable<int> year, Nullable<int> sTARTMonth, Nullable<int> eNDMonth, Nullable<int> shopId, Nullable<int> plant, string sub_ShopID)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var sTARTMonthParameter = sTARTMonth.HasValue ?
                new ObjectParameter("STARTMonth", sTARTMonth) :
                new ObjectParameter("STARTMonth", typeof(int));
    
            var eNDMonthParameter = eNDMonth.HasValue ?
                new ObjectParameter("ENDMonth", eNDMonth) :
                new ObjectParameter("ENDMonth", typeof(int));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("ShopId", shopId) :
                new ObjectParameter("ShopId", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ShopWiseFRCDPT_Monthly_New", yearParameter, sTARTMonthParameter, eNDMonthParameter, shopIdParameter, plantParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<Sp_ShopWiseFRCDPT_Source_Result> Sp_ShopWiseFRCDPT_Source(string sTARTDATE, string eNDDATE, Nullable<int> shopId, Nullable<int> plant, Nullable<int> buyoffID, string sourceId)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("shopId", shopId) :
                new ObjectParameter("shopId", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var buyoffIDParameter = buyoffID.HasValue ?
                new ObjectParameter("BuyoffID", buyoffID) :
                new ObjectParameter("BuyoffID", typeof(int));
    
            var sourceIdParameter = sourceId != null ?
                new ObjectParameter("SourceId", sourceId) :
                new ObjectParameter("SourceId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ShopWiseFRCDPT_Source_Result>("Sp_ShopWiseFRCDPT_Source", sTARTDATEParameter, eNDDATEParameter, shopIdParameter, plantParameter, buyoffIDParameter, sourceIdParameter);
        }
    
        public virtual ObjectResult<Sp_ShopWiseFRCDPT_Source_New_Result> Sp_ShopWiseFRCDPT_Source_New(string sTARTDATE, string eNDDATE, Nullable<int> shopId, Nullable<int> plant, Nullable<int> buyoffID, string sourceId, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("shopId", shopId) :
                new ObjectParameter("shopId", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var buyoffIDParameter = buyoffID.HasValue ?
                new ObjectParameter("BuyoffID", buyoffID) :
                new ObjectParameter("BuyoffID", typeof(int));
    
            var sourceIdParameter = sourceId != null ?
                new ObjectParameter("SourceId", sourceId) :
                new ObjectParameter("SourceId", typeof(string));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ShopWiseFRCDPT_Source_New_Result>("Sp_ShopWiseFRCDPT_Source_New", sTARTDATEParameter, eNDDATEParameter, shopIdParameter, plantParameter, buyoffIDParameter, sourceIdParameter, sub_ShopIDParameter);
        }
    
        public virtual int Sp_ShopWiseFRCDPT_Yearly(Nullable<int> sTARTYear, Nullable<int> eNDYear, Nullable<int> shopId, Nullable<int> plant)
        {
            var sTARTYearParameter = sTARTYear.HasValue ?
                new ObjectParameter("STARTYear", sTARTYear) :
                new ObjectParameter("STARTYear", typeof(int));
    
            var eNDYearParameter = eNDYear.HasValue ?
                new ObjectParameter("ENDYear", eNDYear) :
                new ObjectParameter("ENDYear", typeof(int));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("shopId", shopId) :
                new ObjectParameter("shopId", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ShopWiseFRCDPT_Yearly", sTARTYearParameter, eNDYearParameter, shopIdParameter, plantParameter);
        }
    
        public virtual int Sp_ShopWiseFRCDPT_Yearly_New(Nullable<int> sTARTYear, Nullable<int> eNDYear, Nullable<int> shopId, Nullable<int> plant, string sub_ShopID)
        {
            var sTARTYearParameter = sTARTYear.HasValue ?
                new ObjectParameter("STARTYear", sTARTYear) :
                new ObjectParameter("STARTYear", typeof(int));
    
            var eNDYearParameter = eNDYear.HasValue ?
                new ObjectParameter("ENDYear", eNDYear) :
                new ObjectParameter("ENDYear", typeof(int));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("shopId", shopId) :
                new ObjectParameter("shopId", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ShopWiseFRCDPT_Yearly_New", sTARTYearParameter, eNDYearParameter, shopIdParameter, plantParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<Sp_SourceWise_Model_Result> Sp_SourceWise_Model(string sTARTDATE, string eNDDATE, Nullable<int> sHOPID, Nullable<int> plantID, string platformID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var platformIDParameter = platformID != null ?
                new ObjectParameter("PlatformID", platformID) :
                new ObjectParameter("PlatformID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_SourceWise_Model_Result>("Sp_SourceWise_Model", sTARTDATEParameter, eNDDATEParameter, sHOPIDParameter, plantIDParameter, platformIDParameter);
        }
    
        public virtual ObjectResult<Sp_SourceWise_Model_New_Result> Sp_SourceWise_Model_New(string sTARTDATE, string eNDDATE, Nullable<int> sHOPID, Nullable<int> plantID, string platformID, string sub_ShopID, Nullable<int> shift)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var platformIDParameter = platformID != null ?
                new ObjectParameter("PlatformID", platformID) :
                new ObjectParameter("PlatformID", typeof(string));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            var shiftParameter = shift.HasValue ?
                new ObjectParameter("shift", shift) :
                new ObjectParameter("shift", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_SourceWise_Model_New_Result>("Sp_SourceWise_Model_New", sTARTDATEParameter, eNDDATEParameter, sHOPIDParameter, plantIDParameter, platformIDParameter, sub_ShopIDParameter, shiftParameter);
        }
    
        public virtual ObjectResult<Sp_SourceWise_Shop_Result> Sp_SourceWise_Shop(string sTARTDATE, string eNDDATE, Nullable<int> sHOPID, Nullable<int> plantID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_SourceWise_Shop_Result>("Sp_SourceWise_Shop", sTARTDATEParameter, eNDDATEParameter, sHOPIDParameter, plantIDParameter);
        }
    
        public virtual int Sp_SourceWise_Shop_New(string sTARTDATE, string eNDDATE, Nullable<int> sHOPID, Nullable<int> plantID, string sub_ShopID, Nullable<int> shift)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            var shiftParameter = shift.HasValue ?
                new ObjectParameter("shift", shift) :
                new ObjectParameter("shift", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_SourceWise_Shop_New", sTARTDATEParameter, eNDDATEParameter, sHOPIDParameter, plantIDParameter, sub_ShopIDParameter, shiftParameter);
        }
    
        public virtual ObjectResult<Sp_StageWiseFRCPPM_Result> Sp_StageWiseFRCPPM(string sTARTDATE, string eNDDATE, Nullable<int> shopId, Nullable<int> plant)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("ShopId", shopId) :
                new ObjectParameter("ShopId", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_StageWiseFRCPPM_Result>("Sp_StageWiseFRCPPM", sTARTDATEParameter, eNDDATEParameter, shopIdParameter, plantParameter);
        }
    
        public virtual ObjectResult<Sp_StageWiseFRCPPM_New_Result> Sp_StageWiseFRCPPM_New(string sTARTDATE, string eNDDATE, Nullable<int> shopId, Nullable<int> plant, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("ShopId", shopId) :
                new ObjectParameter("ShopId", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_StageWiseFRCPPM_New_Result>("Sp_StageWiseFRCPPM_New", sTARTDATEParameter, eNDDATEParameter, shopIdParameter, plantParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<Sp_TOP5Indicatorwise_Model_Result> Sp_TOP5Indicatorwise_Model(Nullable<int> shopID, string sTARTDATE, string eNDDATE, string shift, Nullable<int> plantID, Nullable<int> platformID, string top)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var platformIDParameter = platformID.HasValue ?
                new ObjectParameter("PlatformID", platformID) :
                new ObjectParameter("PlatformID", typeof(int));
    
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_TOP5Indicatorwise_Model_Result>("Sp_TOP5Indicatorwise_Model", shopIDParameter, sTARTDATEParameter, eNDDATEParameter, shiftParameter, plantIDParameter, platformIDParameter, topParameter);
        }
    
        public virtual ObjectResult<Sp_TOP5Indicatorwise_Model_New_Result> Sp_TOP5Indicatorwise_Model_New(Nullable<int> shopID, string sTARTDATE, string eNDDATE, string shift, Nullable<int> plantID, Nullable<int> platformID, string top, string sub_ShopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var platformIDParameter = platformID.HasValue ?
                new ObjectParameter("PlatformID", platformID) :
                new ObjectParameter("PlatformID", typeof(int));
    
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_TOP5Indicatorwise_Model_New_Result>("Sp_TOP5Indicatorwise_Model_New", shopIDParameter, sTARTDATEParameter, eNDDATEParameter, shiftParameter, plantIDParameter, platformIDParameter, topParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<Sp_TOP5Indicatorwise_Shop_Result> Sp_TOP5Indicatorwise_Shop(string sTARTDATE, string eNDDATE, string shift, Nullable<int> shopID, string top, Nullable<int> plantID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_TOP5Indicatorwise_Shop_Result>("Sp_TOP5Indicatorwise_Shop", sTARTDATEParameter, eNDDATEParameter, shiftParameter, shopIDParameter, topParameter, plantIDParameter);
        }
    
        public virtual ObjectResult<Sp_TOP5Indicatorwise_Shop_New_Result> Sp_TOP5Indicatorwise_Shop_New(string sTARTDATE, string eNDDATE, string shift, Nullable<int> shopID, string top, Nullable<int> plantID, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_TOP5Indicatorwise_Shop_New_Result>("Sp_TOP5Indicatorwise_Shop_New", sTARTDATEParameter, eNDDATEParameter, shiftParameter, shopIDParameter, topParameter, plantIDParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<Sp_TOP5Indicatorwise_Source_Result> Sp_TOP5Indicatorwise_Source(Nullable<int> shopID, Nullable<int> buyOffID, string sTARTDATE, string eNDDATE, string shift, Nullable<int> plantID, Nullable<int> sourceID, string top, string sub_ShopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var buyOffIDParameter = buyOffID.HasValue ?
                new ObjectParameter("BuyOffID", buyOffID) :
                new ObjectParameter("BuyOffID", typeof(int));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sourceIDParameter = sourceID.HasValue ?
                new ObjectParameter("SourceID", sourceID) :
                new ObjectParameter("SourceID", typeof(int));
    
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_TOP5Indicatorwise_Source_Result>("Sp_TOP5Indicatorwise_Source", shopIDParameter, buyOffIDParameter, sTARTDATEParameter, eNDDATEParameter, shiftParameter, plantIDParameter, sourceIDParameter, topParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<Sp_TOP5Indicatorwiserpt_Result> Sp_TOP5Indicatorwiserpt(string sTARTDATE, string eNDDATE, string shift, Nullable<int> shopID, Nullable<int> buyOffID, Nullable<int> top, Nullable<int> plantID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var buyOffIDParameter = buyOffID.HasValue ?
                new ObjectParameter("BuyOffID", buyOffID) :
                new ObjectParameter("BuyOffID", typeof(int));
    
            var topParameter = top.HasValue ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_TOP5Indicatorwiserpt_Result>("Sp_TOP5Indicatorwiserpt", sTARTDATEParameter, eNDDATEParameter, shiftParameter, shopIDParameter, buyOffIDParameter, topParameter, plantIDParameter);
        }
    
        public virtual ObjectResult<SP_Traceability_Data_Result> SP_Traceability_Data(string sTARTDATE, string eNDDATE, Nullable<int> sHOPID, Nullable<int> plantID, string status)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Traceability_Data_Result>("SP_Traceability_Data", sTARTDATEParameter, eNDDATEParameter, sHOPIDParameter, plantIDParameter, statusParameter);
        }
    
        public virtual int SP_User_Punching_History_Data()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_User_Punching_History_Data");
        }
    
        public virtual ObjectResult<Sp_Vehicle_History_Result> Sp_Vehicle_History(Nullable<int> plantid, string serialNumber)
        {
            var plantidParameter = plantid.HasValue ?
                new ObjectParameter("plantid", plantid) :
                new ObjectParameter("plantid", typeof(int));
    
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("serialNumber", serialNumber) :
                new ObjectParameter("serialNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Vehicle_History_Result>("Sp_Vehicle_History", plantidParameter, serialNumberParameter);
        }
    
        public virtual ObjectResult<StageToPart_Result> StageToPart(Nullable<decimal> id, Nullable<decimal> platformid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(decimal));
    
            var platformidParameter = platformid.HasValue ?
                new ObjectParameter("platformid", platformid) :
                new ObjectParameter("platformid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StageToPart_Result>("StageToPart", idParameter, platformidParameter);
        }
    
        public virtual ObjectResult<Temp_GetBodyCount_Result> Temp_GetBodyCount(Nullable<int> flag, Nullable<int> buyoffCode)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(int));
    
            var buyoffCodeParameter = buyoffCode.HasValue ?
                new ObjectParameter("BuyoffCode", buyoffCode) :
                new ObjectParameter("BuyoffCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Temp_GetBodyCount_Result>("Temp_GetBodyCount", flagParameter, buyoffCodeParameter);
        }
    
        public virtual ObjectResult<Test_SourceWise_Shop_New_Result> Test_SourceWise_Shop_New(string sTARTDATE, string eNDDATE, Nullable<int> sHOPID, Nullable<int> plantID, string sub_ShopID, Nullable<int> shift)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            var shiftParameter = shift.HasValue ?
                new ObjectParameter("shift", shift) :
                new ObjectParameter("shift", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Test_SourceWise_Shop_New_Result>("Test_SourceWise_Shop_New", sTARTDATEParameter, eNDDATEParameter, sHOPIDParameter, plantIDParameter, sub_ShopIDParameter, shiftParameter);
        }
    
        public virtual int User_plant_Concern_Report(string sTARTDATE, string eNDDATE, Nullable<int> shopID, Nullable<int> plant)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("User_plant_Concern_Report", sTARTDATEParameter, eNDDATEParameter, shopIDParameter, plantParameter);
        }
    
        public virtual int USP_BIW_HOURLY_PRODUCTION(string shop, string platform, string atDate)
        {
            var shopParameter = shop != null ?
                new ObjectParameter("Shop", shop) :
                new ObjectParameter("Shop", typeof(string));
    
            var platformParameter = platform != null ?
                new ObjectParameter("Platform", platform) :
                new ObjectParameter("Platform", typeof(string));
    
            var atDateParameter = atDate != null ?
                new ObjectParameter("atDate", atDate) :
                new ObjectParameter("atDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_BIW_HOURLY_PRODUCTION", shopParameter, platformParameter, atDateParameter);
        }
    
        public virtual int USP_BIW_PRODUCTION_REPORT(string shop, string orderStatus, string fromDate, string toDate, string platformId, string platformAll)
        {
            var shopParameter = shop != null ?
                new ObjectParameter("Shop", shop) :
                new ObjectParameter("Shop", typeof(string));
    
            var orderStatusParameter = orderStatus != null ?
                new ObjectParameter("OrderStatus", orderStatus) :
                new ObjectParameter("OrderStatus", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var platformIdParameter = platformId != null ?
                new ObjectParameter("PlatformId", platformId) :
                new ObjectParameter("PlatformId", typeof(string));
    
            var platformAllParameter = platformAll != null ?
                new ObjectParameter("PlatformAll", platformAll) :
                new ObjectParameter("PlatformAll", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_BIW_PRODUCTION_REPORT", shopParameter, orderStatusParameter, fromDateParameter, toDateParameter, platformIdParameter, platformAllParameter);
        }
    
        public virtual ObjectResult<usp_NewAttributewise_Model_Result> usp_NewAttributewise_Model(string sTARTDATE, string eNDDATE, string shift, Nullable<int> sHOPID, Nullable<int> platformID, Nullable<int> plantID, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var platformIDParameter = platformID.HasValue ?
                new ObjectParameter("PlatformID", platformID) :
                new ObjectParameter("PlatformID", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewAttributewise_Model_Result>("usp_NewAttributewise_Model", sTARTDATEParameter, eNDDATEParameter, shiftParameter, sHOPIDParameter, platformIDParameter, plantIDParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<usp_NewAttributewise_Shop_Result> usp_NewAttributewise_Shop(string sTARTDATE, string eNDDATE, string shift, Nullable<int> sHOPID, Nullable<int> plantID, Nullable<int> buyoffcode, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var buyoffcodeParameter = buyoffcode.HasValue ?
                new ObjectParameter("buyoffcode", buyoffcode) :
                new ObjectParameter("buyoffcode", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewAttributewise_Shop_Result>("usp_NewAttributewise_Shop", sTARTDATEParameter, eNDDATEParameter, shiftParameter, sHOPIDParameter, plantIDParameter, buyoffcodeParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<usp_NewAttributewise_Source_Result> usp_NewAttributewise_Source(string sTARTDATE, string eNDDATE, string shift, Nullable<int> buyOFfID, Nullable<int> sourceID, Nullable<int> sHOPID, Nullable<int> plantID, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var buyOFfIDParameter = buyOFfID.HasValue ?
                new ObjectParameter("BuyOFfID", buyOFfID) :
                new ObjectParameter("BuyOFfID", typeof(int));
    
            var sourceIDParameter = sourceID.HasValue ?
                new ObjectParameter("SourceID", sourceID) :
                new ObjectParameter("SourceID", typeof(int));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewAttributewise_Source_Result>("usp_NewAttributewise_Source", sTARTDATEParameter, eNDDATEParameter, shiftParameter, buyOFfIDParameter, sourceIDParameter, sHOPIDParameter, plantIDParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<usp_NewDetailReport_Result> usp_NewDetailReport(string sTARTDATE, string eNDDATE, string shift, Nullable<int> plant, Nullable<int> shopID, Nullable<long> buyOffID, string eNGINE, Nullable<int> defectstatus, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var buyOffIDParameter = buyOffID.HasValue ?
                new ObjectParameter("BuyOffID", buyOffID) :
                new ObjectParameter("BuyOffID", typeof(long));
    
            var eNGINEParameter = eNGINE != null ?
                new ObjectParameter("ENGINE", eNGINE) :
                new ObjectParameter("ENGINE", typeof(string));
    
            var defectstatusParameter = defectstatus.HasValue ?
                new ObjectParameter("Defectstatus", defectstatus) :
                new ObjectParameter("Defectstatus", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewDetailReport_Result>("usp_NewDetailReport", sTARTDATEParameter, eNDDATEParameter, shiftParameter, plantParameter, shopIDParameter, buyOffIDParameter, eNGINEParameter, defectstatusParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<usp_NewIndicatorCountPichatrpt_Result> usp_NewIndicatorCountPichatrpt(string sTARTDATE, string eNDDATE, string shift, Nullable<int> shopID, Nullable<int> buyOffID, Nullable<int> plant, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var buyOffIDParameter = buyOffID.HasValue ?
                new ObjectParameter("BuyOffID", buyOffID) :
                new ObjectParameter("BuyOffID", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewIndicatorCountPichatrpt_Result>("usp_NewIndicatorCountPichatrpt", sTARTDATEParameter, eNDDATEParameter, shiftParameter, shopIDParameter, buyOffIDParameter, plantParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<usp_NewIndicatorwise_Model_Result> usp_NewIndicatorwise_Model(Nullable<int> shopID, string sTARTDATE, string eNDDATE, string shift, Nullable<int> plantID, Nullable<int> platformID, string sub_ShopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var platformIDParameter = platformID.HasValue ?
                new ObjectParameter("PlatformID", platformID) :
                new ObjectParameter("PlatformID", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewIndicatorwise_Model_Result>("usp_NewIndicatorwise_Model", shopIDParameter, sTARTDATEParameter, eNDDATEParameter, shiftParameter, plantIDParameter, platformIDParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<usp_NewIndicatorwise_Shop_Result> usp_NewIndicatorwise_Shop(Nullable<int> shopID, string sTARTDATE, string eNDDATE, string shift, Nullable<int> plantID, string sub_ShopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewIndicatorwise_Shop_Result>("usp_NewIndicatorwise_Shop", shopIDParameter, sTARTDATEParameter, eNDDATEParameter, shiftParameter, plantIDParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<usp_NewIndicatorwise_Source_Result> usp_NewIndicatorwise_Source(Nullable<int> shopID, Nullable<int> buyOffID, string sTARTDATE, string eNDDATE, string shift, Nullable<int> plantID, Nullable<int> sourceID, string sub_ShopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var buyOffIDParameter = buyOffID.HasValue ?
                new ObjectParameter("BuyOffID", buyOffID) :
                new ObjectParameter("BuyOffID", typeof(int));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sourceIDParameter = sourceID.HasValue ?
                new ObjectParameter("SourceID", sourceID) :
                new ObjectParameter("SourceID", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewIndicatorwise_Source_Result>("usp_NewIndicatorwise_Source", shopIDParameter, buyOffIDParameter, sTARTDATEParameter, eNDDATEParameter, shiftParameter, plantIDParameter, sourceIDParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<usp_NewMIS_Platformwise_Result> usp_NewMIS_Platformwise(string sTARTDATE, string eNDDATE, Nullable<int> plantID, Nullable<int> sHOPID, Nullable<int> platform)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var platformParameter = platform.HasValue ?
                new ObjectParameter("platform", platform) :
                new ObjectParameter("platform", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewMIS_Platformwise_Result>("usp_NewMIS_Platformwise", sTARTDATEParameter, eNDDATEParameter, plantIDParameter, sHOPIDParameter, platformParameter);
        }
    
        public virtual ObjectResult<usp_NewMIS_Total_Production_Result> usp_NewMIS_Total_Production(string sTARTDATE, string eNDDATE, Nullable<int> plantID, Nullable<int> sHOPID, Nullable<int> platform)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var platformParameter = platform.HasValue ?
                new ObjectParameter("platform", platform) :
                new ObjectParameter("platform", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewMIS_Total_Production_Result>("usp_NewMIS_Total_Production", sTARTDATEParameter, eNDDATEParameter, plantIDParameter, sHOPIDParameter, platformParameter);
        }
    
        public virtual ObjectResult<usp_NewMIS_Total_Production_DPT_Result> usp_NewMIS_Total_Production_DPT(string sTARTDATE, string eNDDATE, Nullable<int> plantID, Nullable<int> sHOPID, Nullable<int> platform)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var platformParameter = platform.HasValue ?
                new ObjectParameter("platform", platform) :
                new ObjectParameter("platform", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewMIS_Total_Production_DPT_Result>("usp_NewMIS_Total_Production_DPT", sTARTDATEParameter, eNDDATEParameter, plantIDParameter, sHOPIDParameter, platformParameter);
        }
    
        public virtual ObjectResult<usp_newQualityEngineDetailRpt_Result> usp_newQualityEngineDetailRpt(string sTARTDATE, string eNDDATE, string shift, Nullable<int> plant, Nullable<int> shopID, Nullable<long> buyOffID, string eNGINE, Nullable<int> defectstatus, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var buyOffIDParameter = buyOffID.HasValue ?
                new ObjectParameter("BuyOffID", buyOffID) :
                new ObjectParameter("BuyOffID", typeof(long));
    
            var eNGINEParameter = eNGINE != null ?
                new ObjectParameter("ENGINE", eNGINE) :
                new ObjectParameter("ENGINE", typeof(string));
    
            var defectstatusParameter = defectstatus.HasValue ?
                new ObjectParameter("Defectstatus", defectstatus) :
                new ObjectParameter("Defectstatus", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_newQualityEngineDetailRpt_Result>("usp_newQualityEngineDetailRpt", sTARTDATEParameter, eNDDATEParameter, shiftParameter, plantParameter, shopIDParameter, buyOffIDParameter, eNGINEParameter, defectstatusParameter, sub_ShopIDParameter);
        }
    
        public virtual int usp_NewQualitySummary(string sTARTDATE, string eNDDATE, string shift, Nullable<int> sHOPID, Nullable<int> buyOffCode, Nullable<int> plantID, string sub_ShopID, Nullable<int> platfrom)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var buyOffCodeParameter = buyOffCode.HasValue ?
                new ObjectParameter("BuyOffCode", buyOffCode) :
                new ObjectParameter("BuyOffCode", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            var platfromParameter = platfrom.HasValue ?
                new ObjectParameter("platfrom", platfrom) :
                new ObjectParameter("platfrom", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NewQualitySummary", sTARTDATEParameter, eNDDATEParameter, shiftParameter, sHOPIDParameter, buyOffCodeParameter, plantIDParameter, sub_ShopIDParameter, platfromParameter);
        }
    
        public virtual int usp_NewShopWiseFRCDPT_Daily(string sTARTDATE, string eNDDATE, Nullable<int> shopId, Nullable<int> plant, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("shopId", shopId) :
                new ObjectParameter("shopId", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NewShopWiseFRCDPT_Daily", sTARTDATEParameter, eNDDATEParameter, shopIdParameter, plantParameter, sub_ShopIDParameter);
        }
    
        public virtual int usp_NewShopWiseFRCDPT_Daywise(string sTARTDATE, string eNDDATE, Nullable<int> shopId, Nullable<int> plant, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("ShopId", shopId) :
                new ObjectParameter("ShopId", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NewShopWiseFRCDPT_Daywise", sTARTDATEParameter, eNDDATEParameter, shopIdParameter, plantParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<usp_newShopWiseFRCDPT_Model_Result> usp_newShopWiseFRCDPT_Model(string sTARTDATE, string eNDDATE, Nullable<int> shopId, Nullable<int> plant, string platformID, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("shopId", shopId) :
                new ObjectParameter("shopId", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var platformIDParameter = platformID != null ?
                new ObjectParameter("PlatformID", platformID) :
                new ObjectParameter("PlatformID", typeof(string));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_newShopWiseFRCDPT_Model_Result>("usp_newShopWiseFRCDPT_Model", sTARTDATEParameter, eNDDATEParameter, shopIdParameter, plantParameter, platformIDParameter, sub_ShopIDParameter);
        }
    
        public virtual int usp_NewShopWiseFRCDPT_Monthly(Nullable<int> year, Nullable<int> sTARTMonth, Nullable<int> eNDMonth, Nullable<int> shopId, Nullable<int> plant, string sub_ShopID)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var sTARTMonthParameter = sTARTMonth.HasValue ?
                new ObjectParameter("STARTMonth", sTARTMonth) :
                new ObjectParameter("STARTMonth", typeof(int));
    
            var eNDMonthParameter = eNDMonth.HasValue ?
                new ObjectParameter("ENDMonth", eNDMonth) :
                new ObjectParameter("ENDMonth", typeof(int));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("ShopId", shopId) :
                new ObjectParameter("ShopId", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NewShopWiseFRCDPT_Monthly", yearParameter, sTARTMonthParameter, eNDMonthParameter, shopIdParameter, plantParameter, sub_ShopIDParameter);
        }
    
        public virtual int usp_NewShopWiseFRCDPT_Yearly(Nullable<int> sTARTYear, Nullable<int> eNDYear, Nullable<int> shopId, Nullable<int> plant, string sub_ShopID)
        {
            var sTARTYearParameter = sTARTYear.HasValue ?
                new ObjectParameter("STARTYear", sTARTYear) :
                new ObjectParameter("STARTYear", typeof(int));
    
            var eNDYearParameter = eNDYear.HasValue ?
                new ObjectParameter("ENDYear", eNDYear) :
                new ObjectParameter("ENDYear", typeof(int));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("shopId", shopId) :
                new ObjectParameter("shopId", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NewShopWiseFRCDPT_Yearly", sTARTYearParameter, eNDYearParameter, shopIdParameter, plantParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<usp_NewSourceWise_Model_Result> usp_NewSourceWise_Model(string sTARTDATE, string eNDDATE, Nullable<int> sHOPID, Nullable<int> plantID, string platformID, string sub_ShopID, Nullable<int> shift)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var platformIDParameter = platformID != null ?
                new ObjectParameter("PlatformID", platformID) :
                new ObjectParameter("PlatformID", typeof(string));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            var shiftParameter = shift.HasValue ?
                new ObjectParameter("shift", shift) :
                new ObjectParameter("shift", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewSourceWise_Model_Result>("usp_NewSourceWise_Model", sTARTDATEParameter, eNDDATEParameter, sHOPIDParameter, plantIDParameter, platformIDParameter, sub_ShopIDParameter, shiftParameter);
        }
    
        public virtual int usp_NewSourceWise_Shop(string sTARTDATE, string eNDDATE, Nullable<int> sHOPID, Nullable<int> plantID, string sub_ShopID, Nullable<int> shift)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            var shiftParameter = shift.HasValue ?
                new ObjectParameter("shift", shift) :
                new ObjectParameter("shift", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NewSourceWise_Shop", sTARTDATEParameter, eNDDATEParameter, sHOPIDParameter, plantIDParameter, sub_ShopIDParameter, shiftParameter);
        }
    
        public virtual ObjectResult<usp_NewTOP5Indicatorwise_Model_Result> usp_NewTOP5Indicatorwise_Model(Nullable<int> shopID, string sTARTDATE, string eNDDATE, string shift, Nullable<int> plantID, Nullable<int> platformID, string top, string sub_ShopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var platformIDParameter = platformID.HasValue ?
                new ObjectParameter("PlatformID", platformID) :
                new ObjectParameter("PlatformID", typeof(int));
    
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewTOP5Indicatorwise_Model_Result>("usp_NewTOP5Indicatorwise_Model", shopIDParameter, sTARTDATEParameter, eNDDATEParameter, shiftParameter, plantIDParameter, platformIDParameter, topParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<usp_NewTOP5Indicatorwise_Shop_Result> usp_NewTOP5Indicatorwise_Shop(string sTARTDATE, string eNDDATE, string shift, Nullable<int> shopID, string top, Nullable<int> plantID, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewTOP5Indicatorwise_Shop_Result>("usp_NewTOP5Indicatorwise_Shop", sTARTDATEParameter, eNDDATEParameter, shiftParameter, shopIDParameter, topParameter, plantIDParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<usp_NewTOP5Indicatorwise_Source_Result> usp_NewTOP5Indicatorwise_Source(Nullable<int> shopID, Nullable<int> buyOffID, string sTARTDATE, string eNDDATE, string shift, Nullable<int> plantID, Nullable<int> sourceID, string top, string sub_ShopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var buyOffIDParameter = buyOffID.HasValue ?
                new ObjectParameter("BuyOffID", buyOffID) :
                new ObjectParameter("BuyOffID", typeof(int));
    
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sourceIDParameter = sourceID.HasValue ?
                new ObjectParameter("SourceID", sourceID) :
                new ObjectParameter("SourceID", typeof(int));
    
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewTOP5Indicatorwise_Source_Result>("usp_NewTOP5Indicatorwise_Source", shopIDParameter, buyOffIDParameter, sTARTDATEParameter, eNDDATEParameter, shiftParameter, plantIDParameter, sourceIDParameter, topParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<usp_NewVehicleHistory_Result> usp_NewVehicleHistory(Nullable<int> plantid, string serialNumber)
        {
            var plantidParameter = plantid.HasValue ?
                new ObjectParameter("plantid", plantid) :
                new ObjectParameter("plantid", typeof(int));
    
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("serialNumber", serialNumber) :
                new ObjectParameter("serialNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewVehicleHistory_Result>("usp_NewVehicleHistory", plantidParameter, serialNumberParameter);
        }
    
        public virtual ObjectResult<USP_PRODUCTION_REPORT_test_Result> USP_PRODUCTION_REPORT_test(string shop, string orderStatus, string fromDate, string toDate, Nullable<int> platformId, string platformAll)
        {
            var shopParameter = shop != null ?
                new ObjectParameter("Shop", shop) :
                new ObjectParameter("Shop", typeof(string));
    
            var orderStatusParameter = orderStatus != null ?
                new ObjectParameter("OrderStatus", orderStatus) :
                new ObjectParameter("OrderStatus", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var platformIdParameter = platformId.HasValue ?
                new ObjectParameter("PlatformId", platformId) :
                new ObjectParameter("PlatformId", typeof(int));
    
            var platformAllParameter = platformAll != null ?
                new ObjectParameter("PlatformAll", platformAll) :
                new ObjectParameter("PlatformAll", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PRODUCTION_REPORT_test_Result>("USP_PRODUCTION_REPORT_test", shopParameter, orderStatusParameter, fromDateParameter, toDateParameter, platformIdParameter, platformAllParameter);
        }
    
        public virtual ObjectResult<Usp_RptAttributionwiserep_Result> Usp_RptAttributionwiserep(string sTARTDATE, string eNDDATE, string shift, Nullable<int> sHOPID, Nullable<int> buyoffcode, Nullable<int> plantID, string sub_ShopID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            var sHOPIDParameter = sHOPID.HasValue ?
                new ObjectParameter("SHOPID", sHOPID) :
                new ObjectParameter("SHOPID", typeof(int));
    
            var buyoffcodeParameter = buyoffcode.HasValue ?
                new ObjectParameter("buyoffcode", buyoffcode) :
                new ObjectParameter("buyoffcode", typeof(int));
    
            var plantIDParameter = plantID.HasValue ?
                new ObjectParameter("PlantID", plantID) :
                new ObjectParameter("PlantID", typeof(int));
    
            var sub_ShopIDParameter = sub_ShopID != null ?
                new ObjectParameter("Sub_ShopID", sub_ShopID) :
                new ObjectParameter("Sub_ShopID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_RptAttributionwiserep_Result>("Usp_RptAttributionwiserep", sTARTDATEParameter, eNDDATEParameter, shiftParameter, sHOPIDParameter, buyoffcodeParameter, plantIDParameter, sub_ShopIDParameter);
        }
    
        public virtual ObjectResult<usp_RptDefectCountShopwise_Result> usp_RptDefectCountShopwise(string sTARTDATE, string eNDDATE, Nullable<int> shopID, Nullable<int> plant)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RptDefectCountShopwise_Result>("usp_RptDefectCountShopwise", sTARTDATEParameter, eNDDATEParameter, shopIDParameter, plantParameter);
        }
    
        public virtual ObjectResult<usp_RptDefectOccurenceUmmaryReport_Result> usp_RptDefectOccurenceUmmaryReport(string sTARTDATE, string eNDDATE, Nullable<int> shopID, Nullable<int> plant, Nullable<int> shift, Nullable<int> intPlatform, Nullable<int> buyOffID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var shiftParameter = shift.HasValue ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(int));
    
            var intPlatformParameter = intPlatform.HasValue ?
                new ObjectParameter("intPlatform", intPlatform) :
                new ObjectParameter("intPlatform", typeof(int));
    
            var buyOffIDParameter = buyOffID.HasValue ?
                new ObjectParameter("BuyOffID", buyOffID) :
                new ObjectParameter("BuyOffID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RptDefectOccurenceUmmaryReport_Result>("usp_RptDefectOccurenceUmmaryReport", sTARTDATEParameter, eNDDATEParameter, shopIDParameter, plantParameter, shiftParameter, intPlatformParameter, buyOffIDParameter);
        }
    
        public virtual ObjectResult<usp_RptDefectTopConReport_Result> usp_RptDefectTopConReport(string sTARTDATE, string eNDDATE, Nullable<int> shopID, Nullable<int> plant, Nullable<int> buyOffID)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            var buyOffIDParameter = buyOffID.HasValue ?
                new ObjectParameter("BuyOffID", buyOffID) :
                new ObjectParameter("BuyOffID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RptDefectTopConReport_Result>("usp_RptDefectTopConReport", sTARTDATEParameter, eNDDATEParameter, shopIDParameter, plantParameter, buyOffIDParameter);
        }
    }
}
