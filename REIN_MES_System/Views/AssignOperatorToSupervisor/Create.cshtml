@model REIN_MES_System.Models.RS_Assign_OperatorToSupervisor

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/admin/_Layout.cshtml";
    var globalData = (REIN_MES_System.Models.GlobalData)ViewData["GlobalDataModel"];
}

<style>
     #testy {
        z-index: 99999;
    }
</style>

<div class="manager_Line">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div id="testy"></div>
            @Html.ValidationSummary(true)
            @*<div class=" col-md-2 manager_Line">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Plant_ID, "Plant Name", htmlAttributes: new { @class = "" })

                        @Html.DropDownList("Plant_ID", null, "-Select Plant-", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Plant_ID, null, new { @class = "validation_error" })

                    </div>
                </div>*@
            <div class=" row">
                <div class="col-sm-3">

                    @Html.LabelFor(model => model.Type, "Relationship Assignment", htmlAttributes: new { @class = "" })
                    @Html.DropDownListFor(model => model.Type, new SelectList(new List<object> { new { value = "0", text = "Cell member to officer" }, new { value = "1", text = "Officer to manager" } }, "value", "text", 2), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Type, null, new { @class = "validation_error" })


                </div>
                <div class="col-sm-3">

                    @Html.LabelFor(model => model.Shop_ID, "Shop Name", htmlAttributes: new { @class = "" })

                    @Html.DropDownList("Shop_ID", null, "Select Shop", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Shop_ID, null, new { @class = "validation_error shop" })


                </div>
                <div class="col-sm-3">

                    @Html.LabelFor(model => model.Line_ID, "Line Name", htmlAttributes: new { @class = "" })

                    @Html.DropDownList("Line_ID", null, "Select Line", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Line_ID, null, new { @class = "validation_error line" })


                </div>
                <div class="col-sm-3">

                    @Html.LabelFor(model => model.Supervisor_ID, "Officer Name", htmlAttributes: new { @class = "" })

                    @Html.DropDownList("Supervisor_ID", null, "Select Officer", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Supervisor_ID, null, new { @class = "validation_error officer" })


                </div>
            </div>
            <br /><br />
            @*<div class="form-group">
                    @Html.LabelFor(model => model.AssignedOperator_ID, htmlAttributes: new { @class = "" })

                    @Html.EditorFor(model => model.AssignedOperator_ID)
                    @Html.ValidationMessageFor(model => model.AssignedOperator_ID)

                </div>*@







            <div class="row">
                <div class=" col-sm-5">
                    <div class="box box-primary">
                        <div class="box-body">
                            <label class="" for="divListofOperator">Cell Member List</label>
                            <div id="divListofOperator" style="height: 400px; overflow: auto;border: 1px solid #cccccc; padding: 10px;">
                            </div>
                            <label class="" for="divselectedOperators">Search:</label>
                            @Html.TextBoxFor(model => model.AssignedOperator_ID, htmlAttributes: new { @class = "form-control" })
                            @*@Html.LabelFor(model => model.AssignedOperator_ID, "Cell Member List", htmlAttributes: new { @class = "" })
                                @Html.DropDownList("ListofOperator", Enumerable.Empty<SelectListItem>(), String.Empty, new { multiple = "multiple", @class = "form-control", @style = "min-height: 400px" })
                                @Html.ValidationMessageFor(model => model.AssignedOperator_ID, null, new { @class = "validation_error" })*@

                        </div>
                    </div>
                </div>
                <div class=" col-sm-2">
                    <div class="box box-primary">
                        <form role="form">
                            <div class="box-body" style="text-align: center;">
                                <br /><br /><br /><br /><br /><br />
                                <div class="btn-group-vertical">
                                    <button class="swapbtn btn btn-info" type="button" onclick="swapItemLeftAll();" style="font-size: 20px;font-weight: bold;">>></button><br />
                                    <button class="swapbtn btn btn-info" type="button" onclick="swapItemLeft();" style="font-size: 20px;font-weight: bold;">></button><br />
                                    <button class="swapbtn btn btn-info" type="button" onclick="swapItemRight();" style="font-size: 20px;font-weight: bold;"><</button><br />
                                    @*<button class="btn btn-info" type="button" onclick="swapValue('ListofOperator', 'selectedOperators', '>');" style="font-size: 20px;font-weight: bold;">></button><br />
                                        <button class="btn btn-info" type="button" onclick="swapValue('selectedOperators', 'ListofOperator', '>');" style="font-size: 20px;font-weight: bold;"><</button><br />*@
                                    <button class="swapbtn btn btn-info" type="button" onclick="swapItemRightAll();" style="font-size: 20px;font-weight: bold;"><<</button>
                                </div>
                                <br /><br /><br /><br /><br />
                            </div>
                        </form>
                    </div>
                </div>
                <div class=" col-sm-5">
                    <div class="box box-primary">
                        <div class="box-body">
                            <label class="" for="divselectedOperators">Assigned Cell Member List</label>
                            <div id="divselectedOperators" style="height: 400px; overflow: auto;border: 1px solid #cccccc; padding: 10px;">
                            </div>
                            <label class="" for="divselectedOperators">Search:</label>
                            @Html.TextBoxFor(model => model.selectedOperators, htmlAttributes: new { @class = "form-control" })
                            @*@Html.LabelFor(model => model.AssignedOperator_ID, "Assigned Cell Member List", htmlAttributes: new { @class = "" })
                                @Html.DropDownList("selectedOperators", Enumerable.Empty<SelectListItem>(), String.Empty, new { multiple = "multiple", @class = "form-control", @style = "min-height: 400px" })
                                @Html.ValidationMessageFor(model => model.AssignedOperator_ID, null, new { @class = "validation_error" })*@

                        </div>
                    </div>
                </div>

            </div>



            <div class="">
                <div class="">
                    <input type="button" value="Save" onclick="save();" class="btn btn-primary select_defect" /> @*@Html.ActionLink("Show All", "Index", null, new { @class = "btn btn-primary" })*@
                </div>
            </div>

        </div>
    }
</div>
@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/OperatorToSupervisorManagement_file")
    @Scripts.Render("~/bundles/Select2scripts")
@Scripts.Render("~/fdtheme/notification_js")
@Styles.Render("~/fdtheme/notification_css");
}
@section Styles {

    @Styles.Render("~/Content/Select2styles")
}






