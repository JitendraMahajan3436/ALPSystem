@model REIN_MES_System.Models.RS_MT_BreakDown_Target
@using REIN_MES_System.App_LocalResources;
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/admin/_Layout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="col-md-12">
        @Html.ValidationSummary(true)
        <div class="row">
            <div style="display:none">
                @Html.LabelFor(model => model.Plant_ID, "Plant Name *", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.DropDownList("Plant_ID", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Plant_ID)
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Type,null, new { @class = "" }) *
                @Html.DropDownListFor(model => model.Type, new List<SelectListItem>

                 {

                    new SelectListItem{ Text="plant wise", Value = "PlantWise" },
                    new SelectListItem{ Text="shop wise", Value = "ShopWise" },
                 }, "--Slect Mode--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Type)

            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.Shop_ID, null, new { @class = "" }) *

                @Html.DropDownListFor(model => model.Shop_ID, null, "select shop", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Shop_ID)

            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.Value_Type,null, new { @class = "" })

                @Html.DropDownListFor(model => model.Value_Type, new List<SelectListItem>

                 {

                    new SelectListItem{ Text="Incidences", Value = "Incidences" },
                    new SelectListItem{ Text="Hours", Value = "Hours" },
                 }, "--BreakDown Type--", new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.Value_Type)

            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Module, new { @class = "" })
                @Html.DropDownListFor(model => model.Module, new List<SelectListItem>
                   {
                    new SelectListItem{ Text="Break Down Hours", Value = "Hours" },
                    new SelectListItem{ Text="Break Down Incidences", Value = "Incidences" },
                    new SelectListItem{ Text="MTTR", Value = "MTTR" },
                    new SelectListItem{ Text="MTBF", Value = "MTBF" },
                 }, "--Slect Value Type--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Module)
            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.Target_Value, new { @class = "" })
                @Html.TextBoxFor(model => model.Target_Value, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Target_Value)

            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Year, new { @class = "" })
                @Html.DropDownListFor(model => model.Year, new List<SelectListItem>
                       {
                    new SelectListItem{ Text="2015", Value = "2015" },
                    new SelectListItem{ Text="2016", Value = "2016" },
                    new SelectListItem{ Text="2017", Value = "2017" },
                    new SelectListItem{ Text="2018", Value = "2018" },
                    new SelectListItem{ Text="2019", Value = "2019" },
                    new SelectListItem{ Text="2020", Value = "2020" },
                    new SelectListItem{ Text="2021", Value = "2021" },
                    new SelectListItem{ Text="2022", Value = "2022" },
                    new SelectListItem{ Text="2023", Value = "2023" },
                    new SelectListItem{ Text="2024", Value = "2024" },
                    new SelectListItem{ Text="2025", Value = "2025" },
                 }, "--Slect Year--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Year)
            </div>
        </div>
        <br />
        <div class="row">
            <div id="months">

            </div>
        </div><br />
        <div class="row">
            <div class="col-md-6">
                <input type="submit" value="Save" class="btn btn-primary" />  @Html.ActionLink(ResourceGlobal.Show_All, "Index", null, new { @class = "btn btn-primary" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*@Scripts.Render("~/bundles/QualityReportManagement_file")*@
    @Scripts.Render("~/bundles/Select2scripts")
}
@section Styles {
@Styles.Render("~/Content/DZstyles")
<link href="~/Content/theme/ManifestCSS.css" rel="stylesheet" />
    @Styles.Render("~/Content/Select2styles")

}
<script type="text/javascript">
    $(document).ready(function () {

        $('#Year').change(function () {
            
            $.getJSON('/BreakDownTarget/getMonthCheckBoxList', "", function (data) {

                // Ajax success callback function.
                // Populate dropdown from Json data returned from server.
                $('#months').html("");
                $.each(data, function (index, obj) {
                    $('#months').append('<div class="monthCheckboxList col-xs-2 col-md-2" Style="Background-color:#6eead9;Border:1px solid black;margin:2px">' +
                                            '<input type="checkbox" id="Month' + obj.MonthNo + '" name="months" value="' + obj.MonthNo + '"/><label for="Month' + index + '">' + obj.MonthName + '</label>' +
                                            '</div>');
                });

            });
            FillMonths();
        });
    });
   
    function FillMonths()
    {
        var shopId = $("#Shop_ID :selected").val();
        var type = $("#Type :selected").val();
        var module = $("#Module :selected").val();
        var year = $("#Year :selected").val();
        var valuetype = $("#Value_Type :selected").val();
        url = "/BreakDownTarget/FillMonths";
        ajaxpack.getAjaxRequest(url, "year="+year+"&shopid="+shopId+"&module="+module+"&valuetype="+valuetype+"&type="+type, CheckMonths, "json");
    }
   
    function CheckMonths() {
        var myajax = ajaxpack.ajaxobj
        var myfiletype = ajaxpack.filetype
        if (myajax.readyState == 4) {
            if (myajax.status == 200 || window.location.href.indexOf("http") == -1) { //if request was successful or running script locally

                var jsonRes = $.parseJSON(myajax.responseText);
               
                for (var i = 0; i < jsonRes.length; i++) {
                   
                    $("#Month" + jsonRes[i].monthNo).prop("checked", true);
                   
                    $("#Month" + jsonRes[i].monthNo).prop("disabled", true);
                }
               
            }
        }
    }

</script>