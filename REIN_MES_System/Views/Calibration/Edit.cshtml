@model REIN_MES_System.Models.RS_MT_Calibration

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/admin/_Layout.cshtml";
}



<div class="col-md-12">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="row">

            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.C_Tool_ID)

            @*<div class="col-md-4">
                @Html.LabelFor(model => model.Plant_ID, "Plant Name", htmlAttributes: new { @class = "" })
                @Html.DropDownListFor(model => model.Plant_ID, null, "--Select Plant--", htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.Plant_ID, null, new { @class = "Validation-error" })

            </div>*@

            <div class="col-md-4">
                @Html.LabelFor(model => model.Shop_ID, "Shop Name", htmlAttributes: new { @class = "" })
                @Html.DropDownListFor(model => model.Shop_ID, null, "--Select Shop", htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.Shop_ID, null, new { @class = "Validation-error" })

            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.Line_ID, "Line Name", htmlAttributes: new { @class = "" })
                @Html.DropDownListFor(model => model.Line_ID, null, "-Select Line--", htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.Line_ID, null, new { @class = "Validation-error" })

            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Station_ID, "Station Name", htmlAttributes: new { @class = "" })
                @Html.DropDownListFor(model => model.Station_ID, null, "--Select Station--", htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.Station_ID, null, new { @class = "Validation-error" })
            </div>

        </div>

        <div class="row">
         
            <div class="col-md-4">
                @Html.LabelFor(model => model.Calibration_Tool, htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(model => model.Calibration_Tool, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Calibration_Tool, null, new { @class = "Validation-error" })

            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.Calibration_Description, htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(model => model.Calibration_Description, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Calibration_Description)

            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Scheduled_Date, htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(model => model.Scheduled_Date, "{0:yyyy/MM/dd}", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Scheduled_Date, null, new { @class = "Validation-error" })
            </div>
        </div>
        <div class="row">

          


            @*<div class="form-group">
                    @Html.LabelFor(model => model.Last_Maintenance_Date, htmlAttributes: new { @class = "" })

                        @Html.EditorFor(model => model.Last_Maintenance_Date)
                        @Html.ValidationMessageFor(model => model.Last_Maintenance_Date, null, new { @class = "Validation-error" })

                </div>*@



            <div class="col-md-4">
                @Html.LabelFor(model => model.Cycle_Period, "Cycle(Months)", htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(model => model.Cycle_Period, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Cycle_Period, null, new { @class = "Validation-error" })

            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.users, "Maintenance User", htmlAttributes: new { @class = "" })
                @Html.DropDownListFor(model => model.users, null,  htmlAttributes: new { @class = "form-control", multiple = "true" })
                @Html.ValidationMessageFor(model => model.users, null, new { @class = "Validation-error" })

            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.mails, "Recipient Email", htmlAttributes: new { @class = "" })
                @Html.DropDownListFor(model => model.mails, null, htmlAttributes: new { @class = "form-control", multiple = "true" })
                @Html.ValidationMessageFor(model => model.mails, null, new { @class = "Validation-error" })
            </div>
        </div>

     

        <br />
        <div class="row">
            <div class="col-md-offset-0 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" /> @Html.ActionLink("Show All", "Index", null, new { @class = "btn btn-primary" })
            </div>
        </div>

    }
</div>
@*<div>
        @Html.ActionLink("Show All", "Index", null, new { @class="btn btn-primary"})
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/Select2scripts")
    <link href="~/Content/theme/plugins/datepicker/datepicker3.css" rel="stylesheet" />
    <script src="~/Content/theme/plugins/datepicker/bootstrap-datepicker.js"></script>
   

    <script>
        $(document).ready(function () {

           
            $('#mails').keydown(function (e) {
                if (e.keyCode == 13) {
                    var t = $("#mails").select2('val');
                    valid(t);
                }
            });

            $("#mails").select2({
                allowClear: true,
                multiple: 'multiple',
                tags: true,
                placeholder: 'select an email',
                tokenSeparators: [',', ';']

            });

            $("#users").select2({
                allowClear: true,
                placeholder: 'select a user',
                multiple: 'multiple'
            });

            $("#Scheduled_Date").datepicker({ format: 'yyyy/mm/dd' });



            $("#Plant_ID").on("change", function () {
                $("#Shop_ID").html("");
                // $("#Line_ID").html("");
                var Plant_ID = $('#Plant_ID').val();
                if (Plant_ID.length > 0) {
                    //  alert(Plant_ID);
                    $.getJSON('/Calibration/GetShopByPlantID', { plantid: Plant_ID }, function (data) {
                        // alert(data);
                        if (data.length > 0) {
                            $('#Shop_ID option').remove();
                            $('#Shop_ID').append('<option value=""></option>');
                            for (var i = 0; i < data.length; i++) {
                                $('#Shop_ID').append('<option value="' +
                                           data[i].Shop_ID + '">' + data[i].Shop_Name + '</option>');
                            }
                        }
                        else {
                            alert("Shops are not present in current plant")
                        }
                    });
                }
            });

            $("#Shop_ID").on("change", function () {
                $("#Line_ID").html("");
                var Shop_ID = $('#Shop_ID').val();
                if (Shop_ID.length > 0) {
                    //alert(Shop_ID);
                    $.getJSON('/Calibration/GetLineByShopID', { shopid: Shop_ID }, function (data) {
                        //  alert(data);
                        if (data.length > 0) {
                            $('#Line_ID option').remove();
                            $('#Line_ID').append('<option value=""></option>');
                            for (var i = 0; i < data.length; i++) {
                                $('#Line_ID').append('<option value="' +
                                           data[i].Line_ID + '">' + data[i].Line_Name + '</option>');
                            }
                        }
                        else {
                            alert("Line are not present in current Shop")
                        }
                    });
                }
            });

            $("#Line_ID").on("change", function () {
                $("#Station_ID").html("");
                var Shop_ID = $('#Line_ID').val();
                if (Shop_ID.length > 0) {
                    //alert(Shop_ID);
                    $.getJSON('/Calibration/GetStationByLineID', { lineid: Shop_ID }, function (data) {
                        //  alert(data);
                        if (data.length > 0) {
                            $('#Station_ID option').remove();
                            $('#Station_ID').append('<option value=""></option>');
                            for (var i = 0; i < data.length; i++) {
                                $('#Station_ID').append('<option value="' +
                                           data[i].Station_ID + '">' + data[i].Station_Name + '</option>');
                            }
                        }
                        else {
                            alert("Stations are not present in current Line")
                        }
                    });
                }
            });

            //$("#Station_ID").on("change", function () {
            //    $("#Machine_ID").html("");
            //    var Shop_ID = $('#Station_ID').val();
            //    if (Shop_ID.length > 0) {
            //        //alert(Shop_ID);
            //        $.getJSON('/Clita/GetMachineByShopID', { shopid: Shop_ID }, function (data) {
            //            //  alert(data);
            //            if (data.length > 0) {
            //                $('#Machine_ID option').remove();
            //                $('#Machine_ID').append('<option value=""></option>');
            //                for (var i = 0; i < data.length; i++) {
            //                    $('#Machine_ID').append('<option value="' +
            //                               data[i].Value + '">' + data[i].Text + '</option>');
            //                }
            //            }
            //            else {
            //                alert("Machines are not present in current Station")
            //            }
            //        });
            //    }
            //});


        });
    </script>
}
@section Styles {
    @Styles.Render("~/Content/Select2styles")
}