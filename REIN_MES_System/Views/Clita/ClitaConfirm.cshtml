@model REIN_MES_System.Models.RS_MT_Clita

@{
    ViewBag.Title = "ClitaConfirm";
    Layout = "~/Views/Shared/WithoutSideBar/_Layout.cshtml";
    var globalData = (REIN_MES_System.Models.GlobalData)ViewData["GlobalDataModel"];
}

<h2>Clita Items Check List</h2>
<div class="box">
    <div class="box-header with-border">
        @{
            if (globalData != null)
            {
                <h3 class="box-title">@globalData.contentTitle</h3>
            }
        }
        <div class="box-tools pull-right">
            @*<button class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse"><i class="fa fa-minus"></i></button>
                <button class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove"><i class="fa fa-times"></i></button>*@
        </div>
    </div>
    <div class="box-body">
        <div>
            <div class="col-md-12">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="row">
                        @*<div class="col-md-4 manager_Line">*@
                        @*<div class="form-horizontal">*@
                        @Html.ValidationSummary(true)
                        @Html.HiddenFor(model => model.Clita_ID)

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Plant_ID, "Plant_ID", htmlAttributes: new { @class = "" })
                            @Html.DropDownListFor(model => model.Plant_ID, (IEnumerable<SelectListItem>)ViewBag.Plant_ID, String.Empty, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Plant_ID, null, new { @class = "validation_error" })
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Shop_ID, "Shop_ID", htmlAttributes: new { @class = "" })
                            @Html.DropDownListFor(model => model.Shop_ID, Enumerable.Empty<SelectListItem>(), String.Empty, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Shop_ID, null, new { @class = "validation_error" })
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Line_ID, "Line_ID", htmlAttributes: new { @class = "" })
                            @Html.DropDownListFor(model => model.Line_ID, Enumerable.Empty<SelectListItem>(), String.Empty, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Line_ID, null, new { @class = "validation_error" })
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Station_ID, "Station_ID", htmlAttributes: new { @class = "" })
                            @Html.DropDownListFor(model => model.Station_ID, Enumerable.Empty<SelectListItem>(), String.Empty, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Station_ID, null, new { @class = "validation_error" })
                        </div>

                        @*</div>*@
                        @*</div>*@

                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Machine_ID, "Machine_ID", htmlAttributes: new { @class = "" })
                            @Html.DropDownListFor(model => model.Machine_ID, Enumerable.Empty<SelectListItem>(), htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Machine_ID, null, new { @class = "validation_error" })
                        </div>
                    </div>
                   
                    <div class="col-md-12 manager_Line">
                       
                        <div class="col-md-5">
                            @Html.LabelFor(model => model.Clita_Item, "Clita Items", htmlAttributes: new { @class = "" })
                            @Html.ListBoxFor(model => model.Clita_Item, Enumerable.Empty<SelectListItem>(), htmlAttributes: new { multiple = "multiple", @class = "form-control", @style = "min-height: 300px", })
                            @Html.ValidationMessageFor(model => model.Clita_Item, null, new { @class = "validation_error" })
                        </div>

                        <div class="col-md-2">
                            <button class="btn btn-info" type="button" onclick="swapValue('Clita_Item', 'myListBox1', '>');">>></button><br />
                            <button class="btn btn-info" type="button" onclick="swapValue('myListBox1', 'Clita_Item', '>');"><<</button>
                        </div>

                        <div class="col-md-5">
                            @Html.LabelFor(model => model.myListBox1, "Clita Items", htmlAttributes: new { @class = "" })
                            @*@Html.DropDownList("myListBox1", null, String.Empty, new { multiple = "multiple", @class = "form-control", @style = "min-height: 400px" })*@
                            @Html.ListBoxFor(model => model.myListBox1, null, new { multiple = "multiple", @class = "form-control", @style = "min-height: 300px" })
                            @Html.ValidationMessageFor(model => model.myListBox1, null, new { @class = "validation_error" })

                        </div>
                    </div>
                 
                    <br />
                    <div class="row">
                        @*<div class="form-group">*@
                            <div class="col-md-offset-0 col-md-10">
                                <input type="submit" value="Save" class="btn btn-primary select_defect" /> @Html.ActionLink("Show All", "Index", null, htmlAttributes: new { @class = "btn btn-primary" })
                            </div>
                        @*</div>*@
                    </div>

                }
            </div>
        </div>
    </div><!-- /.box-body -->
    <br /><br />
</div><!-- /.box -->

@*<div>
    @Html.ActionLink("Show All", "Index")
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/quality_configuration")
    <script>

        $(document).ready(function () {

            $("#Plant_ID").on("change", function () {
                $("#Shop_ID").html("");
                $("#Line_ID").html("");
                var Plant_ID = $('#Plant_ID').val();
                if (Plant_ID.length > 0) {
                    //  alert(Plant_ID);
                    $.getJSON('/ClitaStationMachines/GetShopByPlantID', { plantid: Plant_ID }, function (data) {
                        // alert(data);
                        if (data.length > 0) {
                            $('#Shop_ID option').remove();
                            $('#Shop_ID').append('<option value=""></option>');
                            for (var i = 0; i < data.length; i++) {
                                $('#Shop_ID').append('<option value="' +
                                           data[i].Shop_ID + '">' + data[i].Shop_Name + '</option>');
                            }
                        }
                        else {
                            alert("Shops are not present in current plant")
                        }
                    });
                }
            });

            $("#Shop_ID").on("change", function () {
                $("#Line_ID").html("");
                var Shop_ID = $('#Shop_ID').val();
                if (Shop_ID.length > 0) {
                    //alert(Shop_ID);
                    $.getJSON('/Clita/GetLineByShopID', { shopid: Shop_ID }, function (data) {
                        //  alert(data);
                        if (data.length > 0) {
                            $('#Line_ID option').remove();
                            $('#Line_ID').append('<option value=""></option>');
                            for (var i = 0; i < data.length; i++) {
                                $('#Line_ID').append('<option value="' +
                                           data[i].Line_ID + '">' + data[i].Line_Name + '</option>');
                            }
                        }
                        else {
                            alert("Line are not present in current Shop")
                        }
                    });
                }
            });

            $("#Line_ID").on("change", function () {
                $("#Station_ID").html("");
                var Shop_ID = $('#Line_ID').val();
                if (Shop_ID.length > 0) {
                    //alert(Shop_ID);
                    $.getJSON('/Clita/GetStationByLineID', { lineid: Shop_ID }, function (data) {
                        //  alert(data);
                        if (data.length > 0) {
                            $('#Station_ID option').remove();
                            $('#Station_ID').append('<option value=""></option>');
                            for (var i = 0; i < data.length; i++) {
                                $('#Station_ID').append('<option value="' +
                                           data[i].Station_ID + '">' + data[i].Station_Name + '</option>');
                            }
                        }
                        else {
                            alert("Stations are not present in current Line")
                        }
                    });
                }
            });

            $("#Station_ID").on("change", function () {
                $("#Machine_ID").html("");
                var Shop_ID = $('#Station_ID').val();
                if (Shop_ID.length > 0) {
                    //alert(Shop_ID);
                    $.getJSON('/Clita/GetMachineByShopID', { shopid: Shop_ID }, function (data) {
                        //  alert(data);
                        if (data.length > 0) {
                            $('#Machine_ID option').remove();
                            $('#Machine_ID').append('<option value=""></option>');
                            for (var i = 0; i < data.length; i++) {
                                $('#Machine_ID').append('<option value="' +
                                           data[i].Value + '">' + data[i].Text + '</option>');
                            }
                        }
                        else {
                            alert("Machines are not present in current Station")
                        }
                    });
                }
            });

            $("#Machine_ID").on("change", function () {
                $("#Clita_Item").html("");
                var Shop_ID = $('#Machine_ID').val();
                if (Shop_ID.length > 0) {
                    //alert(Shop_ID);
                    $.getJSON('/Clita/FillClitaItems', { machineid: Shop_ID }, function (data) {
                        //  alert(data);
                        if (data.length > 0) {
                            $('#Clita_Item option').remove();
                            $('#Clita_Item').append('<option value=""></option>');
                            for (var i = 0; i < data.length; i++) {
                                $('#Clita_Item').append('<option value="' +
                                           data[i].Clita_Item + '">' + data[i].Clita_Item + '</option>');
                            }
                        }
                        else {
                            alert("Machines are not present in current Station")
                        }
                    });
                }
            });


        });

        function swapValue(sourceId, targetId, direction) {
            if (direction == ">") {
                // source to target
                $("#" + sourceId + " :selected").each(function (i, selected) {
                    if ($(selected).val() == "" || $(selected).val() == null) {
                        alert("Please select to add machines machines");
                    }
                    else {
                        $("#" + targetId).append($('<option>', {
                            value: $(selected).val(),
                            text: $(selected).text()
                        }));
                        //foo[i] = $(selected).text();

                        // remove item from source
                        $("#" + sourceId + " option[value='" + $(selected).val() + "']").remove();
                    }

                });
            }
            else {
                // target to source
            }
        }


    </script>
}
