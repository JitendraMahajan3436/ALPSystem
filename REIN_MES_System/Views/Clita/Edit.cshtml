@model REIN_MES_System.Models.RS_MT_Clita

@{
                /**/

                ViewBag.Title = "Edit";
                Layout = "~/Views/Shared/admin/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Clita_ID)

        <div class="col-md-4">
            @Html.LabelFor(model => model.Shop_ID, "Shop Name", htmlAttributes: new { @class = "" })<i style="color:red">*</i>
            @Html.DropDownListFor(model => model.Shop_ID, null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
            @Html.ValidationMessageFor(model => model.Shop_ID, null, new { @class = "validation_error" })
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.Machine_ID, "Machine Name", htmlAttributes: new { @class = "" })<i style="color:red">*</i>
            @Html.TextBoxFor(model => model.MM_MT_MTTUW_Machines.Machine_Name, null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
            @Html.ValidationMessageFor(model => model.Machine_ID, null, new { @class = "validation_error" })
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.Clita_Item, "CLITA Item", htmlAttributes: new { @class = "" })<i style="color:red">*</i>
            @Html.TextBoxFor(model => model.Clita_Item, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Clita_Item, null, new { @class = "validation_error" })
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.Clita_Classification, "Classification", htmlAttributes: new { @class = "" })<i style="color:red">*</i>
            @Html.DropDownListFor(model => model.Clita_Classification, null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Clita_Classification, null, new { @class = "validation_error" })
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.Clita_Standard, "Standards", htmlAttributes: new { @class = "" })<i style="color:red">*</i>
            @Html.DropDownListFor(model => model.Clita_Standard, null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Clita_Standard, null, new { @class = "validation_error" })
        </div>
        <div class="col-md-4">
            @*@Html.LabelFor(model => model.Clita_Tools, "CLITA Tool", htmlAttributes: new { @class = "" })<i style="color:red">*</i>*@
            @*@Html.DropDownList("Clita_Tools", null, htmlAttributes: new { @class = "form-control", multiple = "true" })*@
            @*@Html.DropDownListFor(model => model.Clita_Tools, null, "--Select CLITA Tool--", htmlAttributes: new { @class = "form-control", multiple = "true" })
                @Html.ValidationMessageFor(model => model.Clita_Tools, null, new { @class = "validation_error" })*@


            @Html.LabelFor(model => model.Clita_Tools, "CLITA Tool", htmlAttributes: new { @class = "" })<i style="color:red">*</i>
            @Html.DropDownList("Clita_Tools", null, htmlAttributes: new { @class = "form-control", multiple = "true" })
            @Html.ValidationMessageFor(model => model.Clita_Tools, null, new { @class = "validation_error" })

        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.Clita_Method_ID, "Method", htmlAttributes: new { @class = "" })
            @Html.DropDownListFor(model => model.Clita_Method_ID, null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Clita_Method_ID, null, new { @class = "validation_error" })
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.Is_Value_Based, "Is Value Based", htmlAttributes: new { @class = "" })
            <div>
                @Html.DropDownListFor(model => model.Is_Value_Based, new SelectList(new List<object> { new { value = "false", text = "False" }, new { value = "true", text = "True" } }, "value", "text", 2), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Is_Value_Based, null, new { @class = "validation_error" })
            </div>
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.Cycle, "Frequency(In Days)", htmlAttributes: new { @class = "" })<i style="color:red">*</i>
            @Html.TextBoxFor(model => model.Cycle, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Cycle, null, new { @class = "validation_error" })
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.Maintenance_Time_TACT, "Expected Time", htmlAttributes: new { @class = "" })<i style="color:red">*</i>
            @Html.TextBoxFor(model => model.Maintenance_Time_TACT, new { @class = "form-control" }) E.g. : 00:00:00
            @Html.ValidationMessageFor(model => model.Maintenance_Time_TACT, null, new { @class = "validation_error" })
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.Sequence_No, "Sequence No", htmlAttributes: new { @class = "" })<i style="color:red">*</i>
            @Html.TextBoxFor(model => model.Sequence_No, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Sequence_No, null, new { @class = "validation_error" })
        </div>
        <div class="col-md-4">
            @Html.CheckBoxFor(model => model.IsActive)
            @Html.LabelFor(model => model.IsActive, "Active", htmlAttributes: new { @class = "" })
            @Html.ValidationMessageFor(model => model.IsActive)
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.Data_Retention_Period, "Data Retention Period (In Months)", htmlAttributes: new { @class = "" })<i style="color:red"></i>
            @Html.TextBoxFor(model => model.Data_Retention_Period, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Data_Retention_Period, null, new { @class = "validation_error" })
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-offset-0 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" /> @Html.ActionLink("Show All", "Index", null, htmlAttributes: new { @class = "btn btn-primary" })
            </div>
        </div>
    </div>
}
<div id="dialog" title="Error"></div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/Select2scripts")
    @Scripts.Render("~/fdtheme/tinytoggel_js")
    <script src="~/Content/theme/plugins/jQueryUI/jquery-ui.min.js"></script>
    <link href="~/Content/theme/plugins/jQueryUI/jquery-ui.css" rel="stylesheet" />
    <link href="~/Content/theme/plugins/datepicker/datepicker3.css" rel="stylesheet" />
    <script src="~/Content/theme/plugins/datepicker/bootstrap-datepicker.js"></script>
    <script>
        $(document).ready(function () {
            $('.tiny-toggle').tinyToggle();

            $("#Clita_Tools").select2({
                //tags: true,
                maximumSelectionLength: 4,
                allowClear: true,
                multiple: 'multiple',
                tokenSeparators: [',', ' ']
            });
            $("#Clita_Standard").select2({
                tags: true
            });
            $("#Clita_Classification").select2({
                tags: true
            });

            //$('#mails').keydown(function (e) {
            //    if (e.keyCode == 13) {
            //        var t = $("#mails").select2('val');
            //        valid(t);
            //    }
            //});

            //$("#mails").select2({
            //    allowClear: true,
            //    multiple: 'multiple',
            //    tags: true,
            //    placeholder: 'select an email',
            //    tokenSeparators: [',', ';']

            //});

            //$("#users").select2({
            //    allowClear: true,
            //    placeholder: 'select a user',
            //    multiple: 'multiple'
            //});

            //$('#Maintenance_Time_TACT').val("00:00:00");

            $("#Start_Date").datepicker({ format: 'yyyy/mm/dd' });

            $("#End_Date").datepicker({ format: 'yyyy/mm/dd' });

            //$("#Plant_ID").on("change", function () {
            //    $("#Shop_ID").html("");
            //    $("#Line_ID").html("");
            //    var Plant_ID = $('#Plant_ID').val();
            //    if (Plant_ID.length > 0) {
            //        //  alert(Plant_ID);
            //        $.getJSON('/Clita/FillShop', { plantid: Plant_ID }, function (data) {
            //            // alert(data);
            //            if (data.length > 0) {
            //                $('#Shop_ID option').remove();
            //                $('#Shop_ID').append('<option value=""></option>');
            //                for (var i = 0; i < data.length; i++) {
            //                    $('#Shop_ID').append('<option value="' +
            //                               data[i].Shop_ID + '">' + data[i].Shop_Name + '</option>');
            //                }
            //            }
            //            else {
            //                alert("Shops are not present in current plant")
            //            }
            //        });
            //    }
            //});

            $("#Shop_ID").on("change", function () {
                $("#Line_ID").html("");
                var Shop_ID = $('#Shop_ID').val();
                if (Shop_ID.length > 0) {
                    //alert(Shop_ID);
                    $.getJSON('/Clita/FillLine', { shopid: Shop_ID }, function (data) {
                        //  alert(data);
                        if (data.length > 0) {
                            $('#Line_ID option').remove();
                            $('#Line_ID').append('<option value=""></option>');
                            for (var i = 0; i < data.length; i++) {
                                $('#Line_ID').append('<option value="' +
                                    data[i].Line_ID + '">' + data[i].Line_Name + '</option>');
                            }
                        }

                    });
                }
            });

            $("#Line_ID").on("change", function () {
                $("#Station_ID").html("");
                var Shop_ID = $('#Line_ID').val();
                if (Shop_ID.length > 0) {
                    //alert(Shop_ID);
                    $.getJSON('/Clita/FillSations', { lineid: Shop_ID }, function (data) {
                        //  alert(data);
                        if (data.length > 0) {
                            $('#Station_ID option').remove();
                            $('#Station_ID').append('<option value=""></option>');
                            for (var i = 0; i < data.length; i++) {
                                $('#Station_ID').append('<option value="' +
                                    data[i].Station_ID + '">' + data[i].Station_Name + '</option>');
                            }
                        }

                    });
                }
            });

            $("#Station_ID").on("change", function () {
                $("#Machine_ID").html("");
                var Shop_ID = $('#Station_ID').val();
                if (Shop_ID.length > 0) {
                    //alert(Shop_ID);
                    $.getJSON('/Clita/FillMachines', { shopid: Shop_ID }, function (data) {
                        //  alert(data);
                        if (data.length > 0) {
                            $('#Machine_ID option').remove();
                            $('#Machine_ID').append('<option value=""></option>');
                            for (var i = 0; i < data.length; i++) {
                                $('#Machine_ID').append('<option value="' +
                                    data[i].Value + '">' + data[i].Text + '</option>');
                            }
                        }
                    });
                }
            });

        });
    </script>
}
@section Styles {
    @Styles.Render("~/Content/Select2styles")
    @Styles.Render("~/fdtheme/tinytoggel_css")
}
