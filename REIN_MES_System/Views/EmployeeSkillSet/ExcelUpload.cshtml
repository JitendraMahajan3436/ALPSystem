@model REIN_MES_System.Models.ExcelSkillSetAllocation
@using REIN_MES_System.Models;
@using REIN_MES_System.App_LocalResources;
@{
    ViewBag.Title = "ExcelUpload";
    Layout = "~/Views/Shared/admin/_Layout.cshtml";
}

<div class="col-md-6 show_family_quality plant_line_configuration">
    @using (Ajax.BeginForm("ExcelUpload", "EmployeeSkillSet", new AjaxOptions
    {//GetPatients is name of method in PatientController
        InsertionMode = InsertionMode.Replace, //target element(#patientList) will be replaced

        UpdateTargetId = "QualityChecklist",
        LoadingElementId = "loader" // div with .gif loader - that is shown when data are loading
    }, new { @class = "", id = "upload_bom_form", enctype = "multipart/form-data" }))
    {
        <div class="form-group" style="display:none;">
            @Html.LabelFor(model => model.Plant_ID, ResourceDisplayName.Plant_Name, new { @class = "" }) *

            @Html.DropDownList("Plant_ID", null, ResourceDisplayName.Plant_Name, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Plant_ID, null, new { @class = "validation_error" })

        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Shop_ID, "Shop", new { @class = "" }) *
            @Html.DropDownList("Shop_ID", null, "Shop", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Shop_ID, null, new { @class = "validation_error" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Line_ID, ResourceDisplayName.Line_Name, htmlAttributes: new { @class = "" })*
            @Html.DropDownListFor(model => model.Line_ID, null, ResourceDisplayName.select_Line, new { @class = "form-control" })
            <span class="validation_error" id="lblLine_ID"></span>
        </div>
        
        <div class="form-group">
            @Html.AntiForgeryToken()
            @Html.TextBoxFor(m => m.Excel_File, new { type = "file", @onchange = "checkfile(this);", @id = "file" })@*<input type="file" name="Excel_File" />*@
            @Html.ValidationMessage("Excel_File", null, new { @class = "validation_error", @id = "excelReq" })
            <span id="lblExcelmsg" style="color:red;"></span>
        </div>

        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-primary" />
            @Html.ActionLink(ResourceGlobal.Show_All, "Index", null, new { @class = "btn btn-primary" })
            @*<a href="/OrderCreation/Download" download class="btn btn-primary">
                    Download Sample
                </a>*@
        </div>
    }

    <div id="QualityChecklist"></div>
</div>

<div class="clearfix"></div>
@{
    EmployeeSkillSetUploadRecords[] orderUploadRecords = (EmployeeSkillSetUploadRecords[])ViewBag.OrderUploadRecords;

    if (ViewBag.OrderUploadRecords != null)
    {
        <table class="table table-bordered table-striped datatable_completes">
            <thead>
                <tr>
                    <th>Station Name</th>
                    <th>Operator Token Number</th>
                    <th>SkillSet</th>
                    <th>Error/Success</th>
                </tr>
            </thead>

            @foreach (var item in (IEnumerable<REIN_MES_System.Models.EmployeeSkillSetUploadRecords>)ViewBag.OrderUploadRecords)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.StationName)</td>
                    <td>@Html.DisplayFor(modelItem => item.OperatorTokenNumber)</td>
                    <td>@Html.DisplayFor(modelItem => item.SkillSet)</td>
                    <td>@Html.DisplayFor(modelItem => item.SS_Error_Sucess)</td>
                </tr>
            }
        </table>
    }
}




@section scripts {
    @Scripts.Render("~/Content/theme/plugins/datatables/js")
    @Styles.Render("~/Content/theme/plugins/datatables/css")
    @Scripts.Render("~/bundles/plant_line_configuration")
    @*@Scripts.Render("~/Scripts/user_datatable")*@
}


<script type="text/javascript" language="javascript">
    function checkfile(sender) {
        var validExts = new Array(".xlsx", ".xls");
        var fileExt = sender.value;
        fileExt = fileExt.substring(fileExt.lastIndexOf('.'));
        if (validExts.indexOf(fileExt) < 0) {
            //alert("Invalid file selected, valid files are of " +
            //         validExts.toString() + " types.");
            $('#lblExcelmsg').html("Invalid file selected, valid files are of " +
                     validExts.toString() + " types.");
            $('#excelReq').hide();
            $('#file').val('');
            return false;
        }
        else {
            $('#lblExcelmsg').html('');
            return true;
        }
    }
</script>







