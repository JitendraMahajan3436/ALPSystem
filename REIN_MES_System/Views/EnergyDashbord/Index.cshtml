
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Admin/_Layout.cshtml";
}



<link href="~/Content/theme/plugins/select2/select2.min.css" rel="stylesheet" />
<link href="~/Content/theme/plugins/timepicker1/timepickerCSS.css" rel="stylesheet" />
<style>
    /*.boxshadow {
        box-shadow: 0 1px 0px rgba(0,0,0,0.12), 3px 4px 1px rgba(66,59,59,0.24);
        border-radius: 14px;
    }*/


    .shopchartbtn:hover {
        background-color: darkgreen;
        color: white;
    }

    .shopchartbtn {
        background-color: darkcyan;
        border-color: black;
        color: black;
    }

    table.table1 {
        font-family: "Trebuchet MS", sans-serif;
        font-size: 16px;
        font-weight: bold;
        line-height: 1.4em;
        font-style: normal;
        border-collapse: separate;
    }

    .table1 thead th {
        padding: 15px;
        color: #fff;
        text-shadow: 1px 1px 1px #568F23;
        border: 1px solid #93CE37;
        border-bottom: 3px solid #9ED929;
        background-color: #9DD929;
        background: -webkit-gradient( linear, left bottom, left top, color-stop(0.02, rgb(123,192,67)), color-stop(0.51, rgb(139,198,66)), color-stop(0.87, rgb(158,217,41)) );
        background: -moz-linear-gradient( center bottom, rgb(123,192,67) 2%, rgb(139,198,66) 51%, rgb(158,217,41) 87% );
        -webkit-border-top-left-radius: 5px;
        -webkit-border-top-right-radius: 5px;
        -moz-border-radius: 5px 5px 0px 0px;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
    }

    .lebal-font {
        font-size: 12px;
    }
</style>
<style>
    .chartContainer {
    }

    .pannelfont {
        font-size: 14px;
        height: 20px;
        text-align: center;
        background-color: black;
        color: white
    }

    .boxshadow {
        box-shadow: 0 1px 0px rgba(0,0,0,0.12), 2px 0px 1px rgba(66,59,59,0.24);
        border-radius: 14px;
        font-size: 12px;
        margin-top: 1%;
        /*height: 28px*/
    }
</style>


<div class="row">
    <div class="col-md-12 col-lg-12 col-md-12">

        <div class="col-md-3 col-lg-3 col-sm-3">
            <div class="box-body" style="padding:0%">



                <div class="panel">
                    <div class="pannelfont" style="height:44px">
                        <div>
                            <b>Today's Data </b>
                        </div>
                        <div style="font-size:12px">
                            @ViewBag.startt To @ViewBag.endt
                        </div>


                    </div>

                    <div class="table-responsive">
                        <table class="table table-bordered table-striped table-condensed datatable_completes">
                            <thead>
                                <tr>
                                    <th>

                                    </th>
                                    <th>

                                        Value
                                    </th>
                                    <th>
                                        Unit
                                    </th>

                                </tr>
                            </thead>
                            <tbody>

                                <tr>
                                    <td>Consumption </td>
                                    <td id="todayData">
                                        @ViewBag.todayData
                                    </td>

                                    <td> kWh</td>
                                </tr>
                                <tr>
                                    <td> Specfic Consumption</td>
                                    <td id="yesterdaycons">@ViewBag.Todaycons</td>
                                    <td>kWh/veh</td>

                                </tr>
                                <tr>
                                    <td> Production</td>
                                    <td id="todayPro">
                                        @ViewBag.todayPro
                                    </td>
                                    <td>
                                        veh
                                    </td>


                                </tr>

                            </tbody>
                        </table>
                    </div>

                </div>

            </div>
        </div>

        <div class="col-md-3 col-lg-3 col-sm-3">
            <div class="box-body" style="padding:0%">



                <div class="panel">
                    <div class="pannelfont" style="height:44px">
                        <div>
                            <b>Yesterday's Data </b>
                        </div>
                        <div style="font-size:12px">
                            @ViewBag.starty  To @ViewBag.endy
                        </div>


                    </div>

                    <div class="table-responsive">
                        <table class="table table-bordered table-striped table-condensed datatable_completes">
                            <thead>
                                <tr>
                                    <th>

                                    </th>
                                    <th>

                                        Value
                                    </th>
                                    <th>
                                        Unit
                                    </th>

                                </tr>
                            </thead>
                            <tbody>

                                <tr>
                                    <td>Consumption </td>
                                    <td id="yesterdayt">
                                        @ViewBag.Yesterday
                                    </td>

                                    <td> kWh</td>
                                </tr>
                                <tr>
                                    <td> Specfic Consumption</td>
                                    <td id="yesterdaycons">@ViewBag.Yesterdaycons</td>
                                    <td>kWh/veh</td>

                                </tr>
                                <tr>
                                    <td> Production</td>
                                    <td id="yesterdayp">
                                        @ViewBag.yesterdayPro
                                    </td>
                                    <td>
                                        veh
                                    </td>


                                </tr>

                            </tbody>
                        </table>
                    </div>

                </div>

            </div>
        </div>

        <div class="col-md-3 col-lg-3 col-sm-3">
            <div class="box-body" style="padding:0%">



                <div class="panel">
                    <div class="pannelfont" style="height:44px">
                        <div>
                            <b>Last  week's Data </b>
                        </div>
                        <div style="font-size:12px">
                            @ViewBag.startw  To @ViewBag.endw
                        </div>


                    </div>

                    <div class="table-responsive">
                        <table class="table table-bordered table-striped table-condensed datatable_completes">
                            <thead>
                                <tr>
                                    <th>

                                    </th>
                                    <th>

                                        Value
                                    </th>
                                    <th>
                                        Unit
                                    </th>

                                </tr>
                            </thead>
                            <tbody>

                                <tr>
                                    <td>Consumption </td>
                                    <td id="weekdata">
                                        @ViewBag.weekdata
                                    </td>

                                    <td> kWh</td>
                                </tr>
                                <tr>
                                    <td> Specfic Consumption</td>
                                    <td id="weekcons">@ViewBag.weekcons</td>
                                    <td>kWh/veh</td>

                                </tr>
                                <tr>
                                    <td> Production</td>
                                    <td id="weekPro">
                                        @ViewBag.weekPro
                                    </td>
                                    <td>
                                        veh
                                    </td>


                                </tr>

                            </tbody>
                        </table>
                    </div>

                </div>

            </div>
        </div>
        <div class="col-md-3 col-lg-3 col-sm-3">
            <div class="box-body" style="padding:0%">



                <div class="panel">
                    <div class="pannelfont" style="height:44px">
                        <div>
                            <b> Previous Month Data </b>
                        </div>
                        <div style="font-size:12px">
                            @ViewBag.startm  To @ViewBag.endm
                        </div>


                    </div>

                    <div class="table-responsive">
                        <table class="table table-bordered table-striped table-condensed datatable_completes">
                            <thead>
                                <tr>
                                    <th>

                                    </th>
                                    <th>

                                        Value
                                    </th>
                                    <th>
                                        Unit
                                    </th>

                                </tr>
                            </thead>
                            <tbody>

                                <tr>
                                    <td>Consumption </td>
                                    <td id="Monthdata">
                                        @ViewBag.Monthdata
                                    </td>

                                    <td> kWh</td>
                                </tr>
                                <tr>
                                    <td> Specfic Consumption</td>
                                    <td id="Monthcons">@ViewBag.Monthcons</td>
                                    <td>kWh/veh</td>

                                </tr>
                                <tr>
                                    <td> Production</td>
                                    <td id="MonthPro">
                                        @ViewBag.MonthPro
                                    </td>
                                    <td>
                                        veh
                                    </td>


                                </tr>

                            </tbody>
                        </table>
                    </div>

                </div>

            </div>
        </div>
    </div>
</div>







<div class="col-lg-12 col-md-12 col-sm-12">
    <div class="col-md-3 col-lg-3 col-sm-3">
        <div class="col-md-6 col-lg-6 col-sm-6">
            <div class="form-group">
                <label class="lebal-font">Parameter</label>
                @*@Html.DropDownList("Type", new SelectList(new List<object> { new { value = true, text = "kWh" }, new { value = false, text = "kVAh" } }, "value", "text", true), new { @class = "form-control select2" })
                    ConsumptionType*@
                @Html.DropDownList("Type", null, htmlAttributes: new { @class = "form-control", @style = "max-width:100%" })
            </div>
        </div>
        <div class="col-md-6 col-lg-6 col-sm-6">
            <div class="form-group">
                <label class="lebal-font">Date Range</label>
                @Html.DropDownList("ddlDateRange", null, htmlAttributes: new { @class = "form-control select2", @style = "max-width:100%" })
                <span class="error" id="ddlDateRangeId" style="color:red;display:none">Date Range field is required</span>
            </div>
        </div>

    </div>

    <div class="col-md-4 col-lg-4 col-sm-4" style="margin-left:-4%">
        <div class="col-md-6 col-lg-6 col-sm-6">
            <div class="form-group">
                <label class="lebal-font"> From Date</label>
                @Html.TextBox("StartDate", null, new { @class = "startdate form-control example1", @style = "max-width:100%", ReadOnly = "true", disabled = "false", autocomplete = "off" })
                <span class="error" id="StartDateId" style="color:red;display:none">From Date field is required</span>
            </div>
        </div>
        <div class="col-md-6 col-lg-6 col-sm-6">
            <div class="form-group">
                <label class="lebal-font">To Date</label>
                @Html.TextBox("EndDate", null, new { @class = "enddate form-control example1", @style = "max-width:100%", ReadOnly = "true", disabled = "false", autocomplete = "off" })
                <span class="error" id="EndDateId" style="color:red;display:none">To Date field is required</span>
            </div>
        </div>
    </div>




    <div class="col-md-5" style="margin-left:-1% ;padding: 0px">
        <div class="col-md-3" style="margin-left:0%">
            <div class="form-group">
                <label class="lebal-font">Shift</label>
                @Html.DropDownList("Shiftwise", null, "All", htmlAttributes: new { @class = "form-control", @style = "max-width:100%", })
                <span class="error" id="EndDateId" style="color:red;display:none">To Date field is required</span>
            </div>
        </div>
        <div class="col-md-3" style="margin-left:0%;display:none" id="NOWorkingDay">
            <div class="form-group">
                <label class="lebal-font">No Working Day</label>
                @Html.DropDownList("Reason_ID", null, htmlAttributes: new { @class = "form-control", @style = "max-width:100%", })
                <span class="error" id="EndDateId" style="color:red;display:none">To Date field is required</span>
            </div>
        </div>
        <div class="col-md-3" style="display:none;" id="Minutes">
            <div class="form-group">
                <label class="lebal-font">Grain</label>
                @Html.DropDownList("MinuteRange", null, htmlAttributes: new { @class = "form-control", @style = "max-width:100%", })
                <span class="error" id="EndDateId" style="color:red;display:none">To Date field is required</span>
            </div>
        </div>


        <div class="col-md-3" style="padding:0px">
            <label class="lebal-font" for="Outlier">Similar Production</label>
            <input id="Similar" name="Same" type="checkbox" value="true">
            <input name="Similar" type="hidden" value="false">
            <div class="form-group" style="margin-top:-2%">


                <input type="submit" value="Submit" id="btnSubmit" class="btn btn-primary  generate" />

            </div>



        </div>

    </div>
</div>



<div id="unloading" style="display:none">
    <div class="col-md-12 col-lg-12 col-sm-12" style="padding:0px">
        <div class="nav-tabs-custom">
            <ul class="nav nav-tabs" style="background-color:white">
                <li id="Planttab" class="active"><a href="" class="machine-tab graph-initialised" data-target-tab="" data-toggle="tab" data-machineid="">Plant Consumption</a></li>
                <li id="ForeCasttab"><a href="" class="machine-tab graph-initialised" data-target-tab="" data-toggle="tab" data-machineid="">Monthly Forecast</a></li>
                <li id="TODtab"><a href="" class="machine-tab graph-initialised" data-target-tab="" data-toggle="tab" data-machineid="">TOD Analysis</a></li>
                <li id="Performancetab"><a href="" class="machine-tab graph-initialised" data-target-tab="" data-toggle="tab" data-machineid="">Performance Indices</a></li>
            </ul>

            <div class="tab-content" id="Normal">

                <button id="btnshoplabel" class="boxshadow">data label </button>
                <br />
                <div class="col-md-9 col-lg-9 col-sm-9" style="padding:0px">


                    <div id="Plantwisechart" class="Plantwisechart" style="height:365px;width:100%">

                    </div>
                </div>

                <div class="col-md-3 col-lg-3 col-sm-3" style="padding:0px">
                    <div class="box-body" style="padding:0%">



                        <div class="panel">
                            <div class="pannelfont" style="height:44px">
                                <div>
                                    <b>Summary  </b>
                                </div>
                                <div style="font-size:12px">
                                    <label style="font-size:12px" id="starts">@ViewBag.starty</label>  To <label style="font-size:12px" id="ends">@ViewBag.endy</label>
                                </div>


                            </div>

                            <div class="table-responsive">
                                <table class="table table-bordered table-striped table-condensed datatable_completes">

                                    <tr>
                                        <td>
                                            Total Consumption:
                                        </td>
                                        <td colspan="3" id="tbl_total">@ViewBag.totalconsume</td>
                                    </tr>
                                    <tr>
                                        <td>
                                            Daily Avg. Consumption:
                                        </td>
                                        <td colspan="3" id="tbl_totalavg">@ViewBag.totalavg</td>
                                    </tr>
                                    <tr>
                                        <td>
                                            Total Production:
                                        </td>
                                        <td colspan="3" id="tbl_totalpro">@ViewBag.totalprod</td>
                                    </tr>
                                    <tr>
                                        <td>
                                            Avg. SEC:
                                        </td>

                                        <td colspan="3" id="tbl_totalAvgsec">@ViewBag.totalavgsec</td>
                                    </tr>

                                    <tr>
                                        <td>
                                            Best Consumption:
                                        </td>
                                        <td id="tbl_best">@ViewBag.best</td>
                                        <td>Achieved on :</td>
                                        <td id="tbl_bestdate">@ViewBag.bestdate</td>

                                    </tr>
                                    <tr>
                                        <td>
                                            Total Power on Best day
                                        </td>
                                        <td id="tbl_bestpower">@ViewBag.bestpower</td>
                                        <td>Production on Best Day</td>
                                        <td id="tbl_bestpro">@ViewBag.bestprod</td>

                                    </tr>
                                    <tr>
                                        <td>
                                            Max Consumption:
                                        </td>
                                        <td id="tbl_max">@ViewBag.maxpower</td>
                                        <td>Consumed on:</td>
                                        <td id="tbl_maxdate">@ViewBag.maxdate</td>

                                    </tr>
                                </table>
                            </div>

                        </div>

                    </div>
                </div>

                @*</div>*@
            </div>

            <div class="tab-content" id="analyze">

                <div class="col-md-12 col-lg-12 col-sm-12" style="padding:0px">


                    <div id="Plantanalyzehart" class="Plantanalyzehart" style="width:100%">

                    </div>
                </div>
            </div>

            <div class="tab-content" id="Todtbl">

                <div class="col-md-12 col-lg-12 col-sm-12" style="padding:0px">




                    <div class="box-body" style="padding:0px">
                        <div class="table-responsive" style="height:300px" id="Planttod_tbl">
                            <table class="table table-striped table-condensed datatable_completes">
                                <thead>
                                    <tr>
                                        <th rowspan="2">
                                            Value for
                                        </th>
                                        @*<th>
                                                Date From
                                            </th>
                                            <th>
                                                To Date
                                            </th>*@
                                        <th rowspan="2">
                                            Total
                                        </th>
                                        @foreach (var item in ViewData["TOD"] as IList<REIN_MES_System.Models.MM_Tod>)
                                        {
                                            TimeSpan start = @item.Tod_Start_Time;
                                            TimeSpan end = @item.Tod_End_Time; ;

                                            <th rowspan="2">
                                                @item.Tod_Name <br />

                                                (@start.ToString(@"hh\:mm")  to @end.ToString(@"hh\:mm"))


                                            </th>
                                        }
                                        @*<th>
                                                @ViewBag.ShiftB
                                            </th>
                                            <th>
                                                @ViewBag.ShiftC
                                            </th>*@
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>

                    </div>

                </div>
            </div>

            <div class="tab-content" id="Performance">
                <div class="col-md-12 col-lg-12 col-sm-12" style="padding:0px">




                    <div class="box-body" style="padding:0px">
                        <div class="table-responsive" style="height:300px" id="Performance_tbl">
                            <table class="table table-striped table-condensed datatable_completes">
                                <thead>
                                    <tr>
                                        <th>
                                            Area
                                        </th>
                                        <th>
                                            Yesterday Specific Consumption
                                        </th>

                                        <th>
                                            Current Month's Best
                                        </th>

                                        <th>
                                            Current Month's  Average
                                        </th>

                                        <th>
                                            Yesterday's Efficiency
                                        </th>


                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>

                    </div>

                </div>
            </div>
        </div>





    </div>

    <div id="subShopsload">
        <div class="col-md-12 col-lg-12 col-sm-12">
            <div class="col-md-12 col-lg-12 col-sm-12">
                <div class="box-body">

                    <div class="pannelfont">
                        <b>Plant Energy Consumption Analysis  </b>

                    </div>
                    <br />

                    <button class="boxshadow btn btn-success " id="btnProcesswise" value="Pareto">Process Group</button>
                    <button class="boxshadow btn btn-default" id="btnSpecificwise" value="Pareto">Shop Wise SEC</button>
                    <button class="boxshadow btn btn-default" id="btnShopwise" value="Pareto">Shop Wise Total Consumption</button>
                    <button class="boxshadow btn btn-default" id="btnCategoryChart" value="Pareto">Load Category Wise</button>
                    <button class="boxshadow btn btn-default" id="btnBarChart" value="Feederwise">Business Wise</button>




                    <br />
                    <div id="containerCategory" style="display:none">
                        <div class="col-md-8" id="containerCategory1" style="padding:0px">

                        </div>

                        <div class="col-md-4" style="padding:0px; margin-top:1%">
                            <div class="pannelfont">
                                <b>Rated Load %</b>
                            </div>
                            <div class="box-body" style="padding:0px">
                                <div class="table-responsive" style="height:300px" id="feederwiseConsumptiontbl">
                                    <table class="table table-striped table-condensed datatable_completes">
                                        <thead>
                                            <tr>
                                                <th>
                                                    Name
                                                </th>
                                                <th>
                                                    Percentage
                                                </th>


                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (ViewData["CategoryRatedLoad"] as IList<REIN_MES_System.Models.Barchart> != null)
                                            {
                                                foreach (var item in ViewData["CategoryRatedLoad"] as IList<REIN_MES_System.Models.Barchart>)
                                                {
                                                    <tr>
                                                        <td>
                                                            @item.Label
                                                        </td>
                                                        <td>
                                                            <b>@item.Y</b>
                                                        </td>

                                                    </tr>
                                                }
                                            }
                                            else

                                            {
                                                <h3>no data available</h3>
                                            }

                                        </tbody>
                                    </table>
                                </div>

                            </div>
                        </div>
                    </div>
                    <div id="Plantwise_Business" class="Plantwise_Business" style="display:none">

                    </div>

                    <div id="Plantwise_Process" class="Plantwise_Process" style="display:block" ;>

                    </div>


                    <div id="chartContainer" class="chartContainer" style="display:none" ;>
                        <br />
                        <div style="display:flex" id="rdoName">
                            <input type="radio" name="rdoShopGraph" value="1" id="rdoHistogram" checked />Histogram
                            <input type="radio" name="rdoShopGraph" value="0" id="rdoTrend" />Trend
                        </div>

                        <div id="HistogramChart" class="HistogramChart" style="display:none"></div>
                        <div id="TrendChart" class="TrendChart" style="display:none"></div>
                    </div>
                    <div id="chartContainerKWH" class="chartContainerKWH" style="display:none" ;>

                    </div>
                </div>
            </div>

        </div>
        <div class="col-md-12 col-lg-12 col-sm-12">
            <div id="SubProcessData" style="display:none">

                <div class="pannelfont" id="ProcessName">
                    <b>ProcessName</b>
                </div>
                <div class="col-md-8" id="subProccess_cht" style="padding:0px">

                </div>

                <div class="col-md-4" style="padding:0px; margin-top:1%">
                    <div class="box-body" style="padding:0px">
                        <div class="pannelfont">
                            <b>Sub Process Consumption</b>
                        </div>
                        <div class="table-responsive" style="height:300px">
                            <table class="table table-striped table-condensed datatable_completes" id="subProccess_tbl">
                                <thead>
                                    <tr>
                                        <th>
                                            Shop Name
                                        </th>
                                        <th>
                                            Consumption
                                        </th>


                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="subloading" class="col-md-offset-4 col-sm-offset-4 col-lg-offset-4" style="display:none">
        <div class="center-block">
            <img src="~/content/images/loader/gears.gif" style="height:200px;" />
        </div>
    </div>

</div>



<div class="row">


</div>
<div id="loading" class="col-md-offset-4 col-sm-offset-4 col-lg-offset-4">
    <div class="center-block">
        <img src="~/content/images/loader/gears.gif" style="height:200px;" />
    </div>
</div>
<div class="modal fade" id="feederwiseHistory" tabindex="-1" role="dialog" aria-labelledby="feederwiseHistory">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title text-center" id="MinorStoppagesModal" style="margin-top: -2%; margin-bottom: -2%;height: 26px;font-family:'Times New Roman', Times, serif">Performance Indices Energy</h4>
            </div>
            <div class="modal-body no-padding table-responsive table table-bordered table-striped table-condensed datatable_completes" id="FeederwiseModalsdetail">

            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*@Scripts.Render("~/bundles/highchart")*@
    @*@Scripts.Render("~/bundles/PDFHighchart")*@
    <script src="~/Scripts/ParteoHighchart/highcharts.js"></script>
    <script src="~/Scripts/ParteoHighchart/pareto.js"></script>
    <script src="~/Content/theme/plugins/select2/select2.full.js"></script>
    <link href="~/Content/theme/plugins/datepicker/datepicker3.css" rel="stylesheet" />
    <script src="~/Content/theme/plugins/datepicker/bootstrap-datepicker.js"></script>
    <script src="~/Content/theme/plugins/daterangepicker/moment.min.js"></script>
    <script src="~/Content/theme/plugins/DateTimePicker/jquery.datetimepicker.min.js"></script>
    <script src="~/Content/theme/plugins/DateTimePicker/jquery.datetimepicker.full.min.js"></script>
    <link href="~/Content/theme/plugins/DateTimePicker/jquery.datetimepicker.min.css" rel="stylesheet" />


}





<script>

    window.onload = function () {
        debugger;


        getPlantdata();
        $('#Minutes').show();
        //getshopgroup();

        $("#analyze").hide();
        $("#Normal").show();
        $("#Todtbl").hide();
        $("#Performance").hide();
        $("#bodyid").addClass('sidebar-collapse');


    }

    function getPlantdata()
    {

        $("#loading").hide();
        $("#unloading").show();
        var plantdata = JSON.parse('@Html.Raw(Json.Encode(ViewData["Plantwise_Data"]))');
        var cumulativedata = JSON.parse('@Html.Raw(Json.Encode(ViewData["cumulative"]))');
        var avergedata = JSON.parse('@Html.Raw(Json.Encode(ViewData["Averge"]))');

        var Shopdata = JSON.parse('@Html.Raw(Json.Encode(ViewData["Performance_Shopwise"]))');
        var Targetdata = JSON.parse('@Html.Raw(Json.Encode(ViewData["Target"]))');

        var Busniesswise =JSON.parse('@Html.Raw(Json.Encode(ViewData["Business_Wise"]))');
        var Processwise = JSON.parse('@Html.Raw(Json.Encode(ViewData["Processwise_Data"]))');
        var Planttimeseries = JSON.parse('@Html.Raw(Json.Encode(ViewData["Plant_timeseries"]))');
        var Consumeunit = '@ViewBag.Consumeunit';
        Date1 = new Array();
        plantkwh = new Array();
        daywiseData = new Array();
        Production = new Array();
        Shop_kwh = new Array();
        Shop_Sec = new Array();
        Shopkwh = new Array();
        speeficedata = new Array();
        kwhdata = new Array();
        target = new Array();
        cumulative = new Array();
        averge = new Array();
        debugger;
        $.each(plantdata, function (index, item) {

            daywiseData.push(item.Consumption);
            plantkwh.push(item.TotalConsumption);
            Production.push(item.Production);
        })
        $.each(cumulativedata, function (index, item) {


            cumulative.push(item);
        })
        $.each(avergedata, function (index, item) {


            averge.push(item);
        })
        $.each(Planttimeseries, function (index, item) {
            Date1.push(item);

        })

        $.each(Shopdata, function (index, item) {
            if (item.Generation == true) {
                kwhdata.push(item.TotalConsumtion);
                Shop_kwh.push(item.Shopname);
            }
            if (item.Is_Production == true) {
                Shop_Sec.push(item.Shopname);
                speeficedata.push(item.ConsumptionperEngine);
            }


        })
        $.each(Targetdata, function (index, item) {
            target.push(item);
        })
        ShowPlantChart(daywiseData, Date1, plantkwh, Consumeunit, Production, cumulative, averge);
        ShowCellGraph(speeficedata, target, Shop_Sec, Consumeunit)
        ShowKwhChart(kwhdata, Shop_kwh)

        // Business
        busines_data = new Array();
        busines = new Array();
        busines_spec = new Array();
        $.each(Busniesswise, function (index, item) {

            busines.push(item.DataName);
            busines_data.push(item.totalconsumption);
            busines_spec.push(item.specconsumption);
        })
        BusniesswiseChart(busines_data, busines, busines_spec, Consumeunit)

        // Process wise
        process_data = new Array();
        Pro_Name = new Array();
        Pro_spec = new Array();
        $.each(Processwise, function (index, item) {
            Pro_Name.push(item.DataName);
            process_data.push(item.totalconsumption);
            Pro_spec.push(item.specconsumption);
        })
        ProcesswiseChart(process_data, Pro_Name, Pro_spec, Consumeunit)

    }

    function ShowPlantChart(daywiseData, Date1, plantkwh, unit, Production, cumulative,avg) {

        var chart = $('#Plantwisechart').highcharts({
            chart: {
                zoomType: 'xy',
                exportChart: {
                    type: 'application/pdf',
                    filename: 'my-pdf'
                }
            },
            title: {
                text: null,
                style: {
                    class: 'HighTitle'
                }
            },
            credits: {
                enabled: false
            },
            xAxis: {
                title: {
                    //text: Date1,
                    //style: {
                    //    fontWeight: 'bold'
                    //}
                },
                dataLabels: {
                    //rotation: -45,
                    //rotation: -90,
                    //allowOverlap:true,
                    enabled: true,

                },
                categories: Date1,
                labels:
                {
                    rotation: -45,

                },
                //
                crosshair: true
            },
            yAxis:[ {
                title: {
                    text: unit + "/veh",

                },
                gridLineWidth: 0
                //opposite: true,
                //type: 'logarithmic',
                //minorTickInterval: 'auto'
            },
                {
                    title: {
                    text: unit,



                    },
                    opposite: true,
                    type: 'logarithmic',
                    //minorTickInterval: 'auto'
                    gridLineWidth:0
                },
                {
                    title: {
                        text: 'Production',



                    },
                    //opposite: true,
                    //type: 'logarithmic',
                    //minorTickInterval: 'auto',
                    gridLineWidth: 0
                },

            ],
            tooltip: {
                shared: true
            },
            series: [
                {
                    name: unit + "/veh",
                    data: daywiseData,
                    type: 'spline',
                    yAxis: 0,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,
                        //rotation: -90,
                        //color: '#FFFFFF',
                        //align: 'right',
                        //format: '{point.y:.1f}', // one decimal
                        //y: 10, // 10 pixels down from the top
                        //style: {
                        //    fontSize: '10px',
                        //    fontFamily: 'Verdana, sans-serif'
                        //}
                    }
                },
                {
                    name: unit,
                    data: plantkwh,
                    type: 'spline',

                    yAxis: 1,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    }
                },
                {
                    name: 'Production',
                    data: Production,
                    type: 'spline',

                    yAxis: 2,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    }
                },
                {
                    name: 'Cumulative',
                    data: cumulative,
                    type: 'spline',

                    yAxis: 1,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    }
                },
                {
                    name: 'Averge',
                    data: avg,
                    type: 'spline',
                    yAxis: 1,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    }
                },
                ],
            exporting: {
                enabled: true
            }
        });




    }

    function ShowPlantChart1(daywiseData, Date1, plantkwh, Production, Best, Target, unit, cumulative, avg) {

        var chart = $('#Plantwisechart').highcharts({
            chart: {
                zoomType: 'xy',
                exportChart: {
                    type: 'application/pdf',
                    filename: 'my-pdf'
                }
            },
            title: {
                text: null,
                style: {
                    class: 'HighTitle'
                }
            },
            credits: {
                enabled: false
            },
            xAxis: {
                title: {
                    //text: Date1,
                    //style: {
                    //    fontWeight: 'bold'
                    //}
                },
                dataLabels: {
                    //rotation: -45,
                    //rotation: -90,
                    //allowOverlap:true,
                    enabled: true,

                },
                categories: Date1,
                labels:
                {
                    rotation: -45,

                },
                //
                crosshair: true
            },
            yAxis: [{
                title: {
                    text: unit + '/veh',
                    //style: {
                    //    fontWeight: 'bold'
                    //}
                },
                //type: 'logarithmic',
                //minorTickInterval: 'auto',
            },
            {
                title: {
                    text: unit,
                    //style: {
                    //    fontWeight: 'bold'
                    //}
                },
                //opposite: true,
                type: 'logarithmic',
                //minorTickInterval: 'auto',
                gridLineWidth:0
                },
                {
                    title: {
                        text: 'veh',
                        //style: {
                        //    fontWeight: 'bold'
                        //}
                    },
                    //opposite: true,
                    //type: 'logarithmic',
                    //minorTickInterval: 'auto',
                },
            ],
            tooltip: {
                shared: true
            },
            series: [
                {
                    name: unit + "/veh",
                    data: daywiseData,
                    type: 'spline',
                    yAxis: 0,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    },
                    cursor: 'pointer',
                    point: {
                        events: {
                            click: function () {

                                Subshopwisechart(this.category)
                            }
                        }
                    }
                },
                {
                    name: 'Best',
                    data: Best,
                    type: 'spline',
                    yAxis: 0,
                    connectNulls: true,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    },
                    cursor: 'pointer',
                    point: {
                        events: {
                            click: function () {

                                Subshopwisechart(this.category)
                            }
                        }
                    }
                },
                {
                    name: 'Target',
                    data: Target,
                    type: 'spline',
                    yAxis: 0,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    },
                    cursor: 'pointer',
                    point: {
                        events: {
                            click: function () {

                                Subshopwisechart(this.category)
                            }
                        }
                    }
                },
                {
                    name: unit,
                    data: plantkwh,
                    dashStyle: 'spline',
                   ///* color: "chocolate"*/,
                     yAxis: 1,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    },
                     cursor: 'pointer',
                    point: {
                        events: {
                            click: function () {

                                Subshopwisechart(this.category)
                            }
                        }
                    }
                },
                {
                    name: 'veh',
                    data: Production,
                    dashStyle: 'spline',
                    //color: "chocolate",
                    yAxis: 2,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    },
                    cursor: 'pointer',
                    point: {
                        events: {
                            click: function () {

                                Subshopwisechart(this.category)
                            }
                        }
                    }
                },
                {
                    name: 'Cumulative',
                    data: cumulative,
                    type: 'spline',

                    yAxis: 1,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    },
                    cursor: 'pointer',
                    point: {
                        events: {
                            click: function () {

                                Subshopwisechart(this.category)
                            }
                        }
                    }
                },
                {
                    name: 'Averge',
                    data: avg,
                    type: 'spline',
                    yAxis: 1,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    },
                    cursor: 'pointer',
                    point: {
                        events: {
                            click: function () {

                                Subshopwisechart(this.category)
                            }
                        }
                    }
                },
            ],
            exporting: {
                enabled: true
            }
        });




    }
    function Subshopwisechart(category) {
        $("#subloading").show();
        $("#subShopsload").hide();
        var type = $("#Type").val();
        $.ajax({
            url: "/EnergyDashbord/SubShopwisedata",
            data: "{ 'startdate': '" + category + "', 'ConsumptionId': '" + type + "'}",
            dataType: "json",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                $("#subloading").hide();
                $("#subShopsload").show();
                // Plantwise
                Date1 = new Array();
                plantkwh = new Array();
                daywiseData = new Array();
                Shop = new Array();
                Shopkwh = new Array();
                speeficedata = new Array();
                kwhdata = new Array();
                target = new Array();
                Prodution = new Array();
                Best = new Array();
                PlantTarget = new Array();
                Cumulative = new Array();
                Averge = new Array();

                //shopwise

                Shop_kwh = new Array();
                Shop_Sec = new Array();
                for (var i = 0; i < data.ShopwisePerformace.length; i++) {

                    if (data.ShopwisePerformace[i].Generation == true) {
                        kwhdata.push(data.ShopwisePerformace[i].TotalConsumtion);
                        Shop_kwh.push(data.ShopwisePerformace[i].Shopname);
                    }
                    if (data.ShopwisePerformace[i].Is_Production == true) {
                        speeficedata.push(data.ShopwisePerformace[i].ConsumptionperEngine);
                        Shop_Sec.push(data.ShopwisePerformace[i].Shopname);
                    }


                }

                debugger;
                ShowCellGraph(speeficedata, target, Shop_Sec, data.Consumeunit)
                ShowKwhChart(kwhdata, Shop_kwh)

                //Busniess Wise
                busines_data = new Array();
                busines = new Array();
                busines_spec = new Array();
                for (var i = 0; i < data.Business_data.length; i++) {

                    busines_data.push(data.Business_data[i].totalconsumption)
                    busines.push(data.Business_data[i].DataName);
                    busines_spec.push(data.Business_data[i].specconsumption);

                }
                debugger;
                BusniesswiseChart(busines_data, busines, busines_spec, data.Consumeunit);

                // Process wise
                process_data = new Array();
                Pro_Name = new Array();
                Pro_spec = new Array();
                debugger;
                for (var i = 0; i < data.Process_data.length; i++) {

                    Pro_Name.push(data.Process_data[i].DataName);
                    process_data.push(data.Process_data[i].totalconsumption);
                    Pro_spec.push(data.Process_data[i].specconsumption);

                }
                debugger;
                ProcesswiseChart(process_data, Pro_Name, Pro_spec, data.Consumeunit);

                // Category Wise
                var Category_data = []
                for (var i = 0; i < data.CategoryData.length; i++) {
                    debugger;
                    Category_data.push({ "Name": data.CategoryData[i].Label, "y": data.CategoryData[i].Y });
                }
                ShowCategoryChart(Category_data);
            }
        });
    }

    function getshopgroup() {
        //var plantid = $("#Plant_ID").val();

        $.ajax({
            url: "/EnergyDashbord/showchart",
            //data: "{ }",
            dataType: "json",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                $("#loading").hide();
                $("#unloading").show();
                Shop = new Array();
                Shopkwh = new Array();
                yesturday = new Array();
                yesterday = new Array();
                //today = new Array();
                //live = new Array()
                target = new Array();
                for (var i = 0; i < data.Yesterdaydata.length; i++) {
                    yesturday.push(data.Yesterdaydata[i]);
                }
                for (var i = 0; i < data.PrivousKWHdata.length; i++) {
                    yesterday.push(data.PrivousKWHdata[i]);
                }
                for (var i = 0; i < data.Target.length; i++) {
                    target.push(data.Target[i]);
                }
                for (var i = 0; i < data.ShopName.length; i++) {
                    Shop.push(data.ShopName[i]);
                }
                for (var i = 0; i < data.KWHShopName.length; i++) {
                    Shopkwh.push(data.KWHShopName[i]);
                }
                ShowCellGraph(yesturday, target, Shop)
                ShowCraph(yesterday, Shopkwh)
            }
        });
    }
    function ShowCellGraph(yesturday, target, Shop,unit) {
        $("#bodyid").addClass('sidebar-collapse');
        $("#userDeatail").addClass('user-name-collapse');

        var chart = Highcharts.chart('HistogramChart', {

            chart: {
                type: 'column'
            },
            title: {
                text: '',

            },

            credits: {
                enabled: false
            },
            xAxis: {
                categories: Shop,
                labels: {
                    //rotation: -90,
                    style: {
                        fontSize: '9px',
                        fontFamily: 'Verdana, sans-serif'
                    }
                }
            },
            yAxis:
            { // Primary yAxis
                // allowDecimals: false,
                title: {
                    text: unit + "/veh",
                },
                labels: {
                    enabled: true
                },
                type: 'logarithmic',
                //minorTickInterval: 'auto',
                gridLineWidth: 0

            },


            plotOptions: {

            },

            series: [
                {
                    name: 'Actual ',
                    type: 'column',
                    data: yesturday,
                   // pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    }
                },

                //{
                //    name: 'Target',
                //    data: target,
                //    type: 'column',
                //   // pointWidth: 10,
                //    dataLabels: {
                //        enabled: false,

                //    }
                //}
            ],

            responsive: {
                rules: [{
                    condition: {
                        maxWidth: 500
                    },
                    chartOptions: {
                        legend: {
                            align: 'center',
                            verticalAlgin: 'bottom',
                            layout: 'horizontal'
                        },
                        yAxis: {
                            labels: {
                                algin: 'left',
                                x: 0,
                                y: -5
                            },
                            title: {
                                text: null
                            }
                        },
                        subtitle: {
                            text: null
                        },
                        credits: {
                            enabled: false
                        }
                    }
                }]
            }

        });

    }
    function ShowKwhChart(yesterday, Shopkwh) {



        Highcharts.chart('chartContainerKWH', {
            chart: {
                zoomType: 'xy',
                renderTo: 'chartContainerKWH',
                type: 'column'
            },
            title: {
                text: ''
            },
            tooltip: {
                shared: true
            },
            xAxis: {
                categories: Shopkwh,
                crosshair: true,
                labels: {
                    //rotation: -90,
                    style: {
                        fontSize: '9px',
                        fontFamily: 'Verdana, sans-serif'
                    }
                },
            },
            yAxis: [{
                //title: {
                //    text: ''
                //},
                type: 'logarithmic',
                //minorTickInterval: 'auto',
                gridLineWidth: 0
            }, {
                title: {
                    text: ''
                },
                minPadding: 0,
                maxPadding: 0,
                max: 100,
                min: 0,
                opposite: true,
                labels: {
                    format: "{value}%"
                    },
                    //type: 'logarithmic',
                    //minorTickInterval: 'auto',
            }],
            series: [{
                type: 'pareto',
                name: 'Pareto',
                yAxis: 1,
                zIndex: 10,
                baseSeries: 1,
                tooltip: {
                    valueDecimals: 2,
                    valueSuffix: '%'
                }
            }, {
                name: 'Shops',
                type: 'column',
                zIndex: 2,
                pointWidth: 10,
                    data: yesterday
            }],
            credits: {
                enabled: false
            },
        });





    }
    function realtime(shopID) {

        var path = "/RealTimeParameter/Index?Shop_ID=" + shopID;
        window.location.href = path;
    }
    function BusniesswiseChart(busines_data, busines, busines_spec, unit) {


        var chart = $('#Plantwise_Business').highcharts({
            chart: {
                zoomType: 'xy',
                exportChart: {
                    type: 'application/pdf',
                    filename: 'my-pdf'
                }
            },
            title: {
                text: null,
                style: {
                    class: 'HighTitle'
                }
            },
            credits: {
                enabled: false
            },
            xAxis: {
                title: {

                },
                dataLabels: {
                    enabled: true,

                },
                categories: busines,
                crosshair: true,
                labels: {
                    rotation: -45
                },
            },
            yAxis: [{
                title: {
                    text: unit + '/veh',

                },
                type: 'logarithmic',
                //minorTickInterval: 'auto'
                gridLineWidth: 0
            },
            {
                title: {
                    text: unit,

                },
                opposite: true,
                 type: 'logarithmic',
                //minorTickInterval: 'auto'
                gridLineWidth: 0
            },
            ],
            tooltip: {
                shared: true
            },
            series: [
                {
                    name: unit + '/veh',
                    data: busines_spec,
                    type: 'column',
                    yAxis: 0,
                   // pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    }
                },
                {
                    name: unit ,
                    data: busines_data,
                    type: 'column',
                    color: "chocolate",
                    yAxis: 1,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    }
                },
            ],
            exporting: {
                enabled: true
            }
        });
    }
    function ProcesswiseChart(process_data, Pro_Name, Pro_spec, unit) {



        var chart = $('#Plantwise_Process').highcharts({
            chart: {
                zoomType: 'xy',
                exportChart: {
                    type: 'application/pdf',
                    filename: 'my-pdf'
                }
            },
            title: {
                text: null,
                style: {
                    class: 'HighTitle'
                }
            },
            credits: {
                enabled: false
            },
            xAxis: {
                title: {

                },
                dataLabels: {
                    enabled: true,

                },
                categories: Pro_Name,
                crosshair: true
            },
            yAxis: [{
                title: {
                    text: unit + '/veh',

                },
                type: 'logarithmic',
                //minorTickInterval: 'auto'
                gridLineWidth: 0
            },
            {
                title: {
                    text: unit,

                },
                opposite: true,
                type: 'logarithmic',
                //minorTickInterval: 'auto'
                gridLineWidth: 0
            },
            ],
            tooltip: {
                shared: true
            },
            series: [
                {
                    name: unit + '/veh',
                    data: Pro_spec,
                    type: 'column',
                    yAxis: 0,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    }

                },
                {
                    name: unit,
                    data: process_data,
                    type: 'column',
                    color: "chocolate",
                    yAxis: 1,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    }
                },
            ],
            plotOptions: {
                series: {


                    cursor: 'pointer',
                    point: {
                        events: {
                            click: function () {

                                SubProcess(this.category)
                            }
                        }
                    }

                }
            },
            exporting: {
                enabled: true
            }
        });

    }
    function  SubProcess(Procces)
     {
         $("#SubProcessData").show();
         $("#ProcessName").html(Procces);
         $("#subProccess_cht").html("");
         $("#subProccess_tbl tbody").html("");

         var Formdate = $("#StartDate").val();
         var Todate = $("#EndDate").val();
         var ddlformat = $("#ddlDateRange").val();
         var Shift = $('#Shiftwise').val();
         var Minute = $('#MinuteRange').val()

        var type = $("#Type").val();
        var holidayarry = new Array();
        var holiday = $.map($('#Reason_ID'), function (e) {

            return $(e).val();
        });
        for (var i = 0; i < holiday.length; i++) {

            holidayarry.push(holiday[i]);
        }


        if (ddlformat == "5") {
            debugger;
            dt1 = new Date(Formdate);
            dt2 = new Date(Todate);
            Formdate = moment(Formdate).format("DD/MM/YY HH:mm");
            Todate = moment(Todate).format("DD/MM/YY HH:mm");
            var diff = (dt2.getTime() - dt1.getTime()) / 1000;
            diff /= (60 * 60);
            var diffval = diff;

            if (diffval <= 24) {
                Minute = '60';
            }
        }
        if (Formdate != Todate) {

            Minute = '';

        }
        else {
            holidayarry = new Array();
        }

         //var holiday = $("#Reason_ID").val();

         $.ajax({
             url: '/EnergyDashbord/SubProcess',
             type: 'POST',
             //data: ({ Formdate: Formdate, Todate: Todate, ddlformat: ddlformat, Shiftwise: Shift, Minute: Minute, type: type, holiday: holidayarry, Procces: Procces }),
             data: "{ 'Formdate': '" + Formdate + "', 'Todate': '" + Todate + "',  'ddlformat': '" + ddlformat + "', 'Shiftwise': '" + Shift + "',  'Minute': '" + Minute + "','ConsumptionId': '" + type + "','holiday': '" + holidayarry + "','Procces': '" + Procces + "'}",
             dataType: "json",

             contentType: 'application/json;charset-utf-8',
             success: function (data) {
                 var Process_Data = []
                 var Total = 0;
                 $("#subProccess_tbl tbody").html("");
                 for (var i = 0; i < data.length; i++) {


                     //var markup = "<tr><td>" + data[i].Label + "</td><td>" + data[i].Y + "</td></tr>"
                     var markup = "<tr> <td><button class='boxshadow' id='realtime' value=" + data[i].ShopId + ", onclick ='realtime("+data[i].ShopId+")'>" + data[i].Label + "</button></td><td>" + data[i].Y + "</td></tr>"

                     $("#subProccess_tbl tbody").append(markup)
                     Total += data[i].Y
                     Process_Data.push({ "Name": data[i].Label, "y": data[i].Y });
                 }
                 if (data.length > 0) {


                     var markup = "<tr><td>" + "Total" + "</td><td>" + Total + "</td></tr>"
                     $("#subProccess_tbl tbody").append(markup);
                 }

                 SubProcessChart(Process_Data)
             }


         });
    }
    function realtime(shopId) {
        debugger;
        //var shopId = $(this).val()
        var path = "/RealTimeParameter/Index?Shop_ID=" + shopId;
        window.location.href = path;
    }

</script>
<script type="text/javascript">
    $(document).ready(function () {
        $(".select2").select2();
        $("#Reason_ID").select2({

            allowClear: false,
            multiple: 'multiple',
            width: '-webkit-fill-available'
        });
        $today = new Date();
        $yesterday = new Date($today);
        $yesterday.setDate($today.getDate() - 1);
        var $dd = $yesterday.getDate();
        var $mm = $yesterday.getMonth() + 1;
        var $yyyy = $yesterday.getFullYear();
        if ($dd < 10) { $dd = '0' + $dd } if ($mm < 10) { $mm = '0' + $mm } $yesterday = $dd + '/' + $mm + '/' + $yyyy;
        $("#StartDate").val($yesterday);
        $("#EndDate").val($yesterday);
        var StartDate = $("#StartDate").val();
        var EndDate = $("#EndDate").val();
        CategoryChart();
        $("#ddlDateRange").change(function () {
            debugger;
            if ($("#ddlDateRange").val() == "1") {
                //$("#StartDate").datepicker({ format: 'dd/mm/yyyy' });
                //$("#EndDate").datepicker({ format: 'dd/mm/yyyy' });
                $("#Minutes").show();
                $('#NOWorkingDay').hide();
                $('#Minutes option').prop("selected", true);
                //$('#Reason_ID option').prop("selected", false);
              /*  var elements = document.getElementById("Reason_ID").selectedOptions*/;
                var elements = $.map($('#Reason_ID'), function (e) {

                    return $(e).val();
                });

                for (var i = 0; i < elements.length; i++) {
                    elements[i].selected = false;
                }
                $('#Reason_ID option').prop("selected", false);
                //$("#Reason_ID").select2({

                //    allowClear: true,
                //    multiple: 'multiple',
                //    width: '-webkit-fill-available'
                //});
                $("#StartDate").prop('readonly', true);
                $("#EndDate").prop('readonly', true);
                $today = new Date();
                $yesterday = new Date($today);
                $yesterday.setDate($today.getDate());
                var $dd = $yesterday.getDate();
                var $mm = $yesterday.getMonth() + 1;

                var $yyyy = $yesterday.getFullYear();
                if ($dd < 10) { $dd = '0' + $dd } if ($mm < 10) { $mm = '0' + $mm } $yesterday = $dd + '/' + $mm + '/' + $yyyy;
                $("#StartDate").val($yesterday);
                $("#EndDate").val($yesterday);
                //$("#StartDate").datepicker({ format: 'dd/mm/yyyy' }).datepicker("setDate", new Date());
                //$("#EndDate").datepicker({ format: 'dd/mm/yyyy' }).datepicker("setDate", new Date());

            }
            else if ($("#ddlDateRange").val() == "2") {
                //$("#StartDate").datepicker({ format: 'dd/mm/yyyy' });
                //$("#EndDate").datepicker({ format: 'dd/mm/yyyy' });
                $("#Minutes").show();
                $('#Minutes option').prop("selected", true);
                //('#Reason_ID option').prop("selected", false);
                $('#NOWorkingDay').hide();



                $("#StartDate").prop('readonly', true);
                $("#EndDate").prop('readonly', true);
                $today = new Date();
                $yesterday = new Date($today);
                $yesterday.setDate($today.getDate() - 1);
                var $dd = $yesterday.getDate();
                var $mm = $yesterday.getMonth() + 1;
                var $yyyy = $yesterday.getFullYear();
                if ($dd < 10) { $dd = '0' + $dd } if ($mm < 10) { $mm = '0' + $mm } $yesterday = $dd + '/' + $mm + '/' + $yyyy;
                $("#StartDate").val($yesterday);
                $("#EndDate").val($yesterday);
            }
            else if ($("#ddlDateRange").val() == "3") {
                //$("#StartDate").datepicker({ format: 'dd/mm/yyyy' });
                //$("#EndDate").datepicker({ format: 'dd/mm/yyyy' });
                $("#Minutes").hide();
                $('#NOWorkingDay').show();
                $('#Minutes option').prop("selected", false);
                $("#StartDate").prop('readonly', true);
                $("#EndDate").prop('readonly', true);
                $today = new Date();
                $startDate = new Date($today);
                //$startDate.setDate($today.getDate() - $today.getDay());
                $endDate = new Date($today);
                //$endDate.setDate($startDate.getDate() + 7);


                var $mm = $startDate.getMonth() + 1;
                var $yyyy = $startDate.getFullYear();
                if ($mm < 10) { $mm = '0' + $mm } $startDate = '01' + '/' + $mm + '/' + $yyyy;

                $("#StartDate").val($startDate);


                var $endDate = new Date($endDate.getFullYear(), $endDate.getMonth() + 1, 0);
                var $dd1 = $endDate.getDate();
                var $mm1 = $endDate.getMonth() + 1;
                var $yyyy1 = $endDate.getFullYear();

                if ($dd1 < 10) { $dd1 = '0' + $dd1 } if ($mm1 < 10) { $mm1 = '0' + $mm1 } $endDate = $dd1 + '/' + $mm1 + '/' + $yyyy1;
                $("#EndDate").val($endDate);
            }
            else if ($("#ddlDateRange").val() == "4") {
                //$("#StartDate").datepicker({ format: 'dd/mm/yyyy' });
                //$("#EndDate").datepicker({ format: 'dd/mm/yyyy' });
                $("#Minutes").hide();
                $('#NOWorkingDay').show();
                $('#Minutes option').prop("selected", false);
                $("#StartDate").prop('readonly', true);
                $("#EndDate").prop('readonly', true);
                $today = new Date();
                $startDate = new Date($today);
                $endDate = new Date($today);
                //******************* Added by Ajay 01012019
                var prevDate = new Date($startDate.getFullYear(), $startDate.getMonth() - 1, 1);
                var $mm = prevDate.getMonth() + 1;
                var $yyyy = prevDate.getFullYear();

                if ($mm < 10) { $mm = '0' + $mm } prevDate = '01' + '/' + $mm + '/' + $yyyy;

                $("#StartDate").val(prevDate);
                //******************* Added by Ajay 01012019
                var $endDate = new Date($endDate.getFullYear(), $endDate.getMonth(), 0);
                var $dd1 = $endDate.getDate();
                var $mm1 = $endDate.getMonth() + 1;
                var $yyyy1 = $endDate.getFullYear();

                if ($dd1 < 10) { $dd1 = '0' + $dd1 } if ($mm1 < 10) { $mm1 = '0' + $mm1 } $endDate = $dd1 + '/' + $mm1 + '/' + $yyyy1;
                $("#EndDate").val($endDate);
            }

            else {
                //$("#StartDate").val('');
                //$("#EndDate").val('');
                //$("#StartDate").datepicker({ format: 'dd/mm/yyyy' });
                //$("#EndDate").datepicker({ format: 'dd/mm/yyyy' });
                $("#StartDate").datetimepicker(
                    {
                        format: 'm/d/y H:i',
                        defaultDate: new Date(),
                        timepickerScrollbar: true,
                        hours12: false
                    });
                $("#EndDate").datetimepicker(
                    {
                        format: 'm/d/Y H:i',
                        defaultDate: new Date(),
                        timepickerScrollbar: true,
                        hours12: false
                    });

                $("#Minutes").hide();
                $('#NOWorkingDay').show();

                $('#Minutes option').prop("selected", false);
                $("#StartDate").prop('readonly', false);
                $("#EndDate").prop('readonly', false);
                $("#StartDate").prop('disabled', false);
                $("#EndDate").prop('disabled', false);


                var date1 = new Date();
                var toDate = new Date();
                toDate = moment(toDate).format("MM/DD/YY HH:mm");


                var time = moment().toDate();  // This will return a copy of the Date that the moment uses

                time.setHours(06);
                time.setMinutes(30);
                time.setSeconds(0);
                time.setMilliseconds(0);
                date1 = moment(time).format("MM/DD/YY HH:mm");
                $('#StartDate').val(date1);
                $('#EndDate').val(toDate);
                $('#Minutes').show();
                $('#MinuteRange option').prop("selected", true);

                $('#NOWorkingDay').hide();
                $('#Reason_ID option').prop("selected", false);
            }



        });

        $('#btnSubmit').click(function () {

            debugger;
            $("#loading").show();
            $("#unloading").hide();
            $("#SubProcessData").hide();
            $('#btnAreawise').removeClass("btn-success").removeClass("btn-default");
            $('#btnProcesswise').addClass("btn-success").removeClass("btn-default");
            $('#btnCategoryChart').removeClass("btn-success").removeClass("btn-default");
            $('#btnBarChart').removeClass("btn-success").removeClass("btn-default");
            $('#btnSpecificwise').removeClass("btn-success").removeClass("btn-default");
            $('#btnShopwise').removeClass("btn-success").removeClass("btn-default");

            $("#Plantwise_Area").hide();
            $("#Plantwise_Business").hide();
            $("#containerCategory").hide();
            $("#Plantwise_Process").show()
            $("#chartContainer").hide()
            $("#chartContainerKWH").hide()
            $("#analyze").hide();
            $("#Normal").show();
            $("#Todtbl").hide();
            $("#Performance").hide();
            var Formdate = $("#StartDate").val();
            var Todate = $("#EndDate").val();
            var ddlformat = $("#ddlDateRange").val();
            var Shift = $('#Shiftwise').val();
            var Minute = $('#MinuteRange').val();
            var Similar = document.getElementById("Similar").checked;


            if (Formdate != Todate) {
                Minute = '';
            }
            if (ddlformat == "5") {
                debugger;
                dt1 = new Date(Formdate);
                dt2 = new Date(Todate);
                Formdate = moment(Formdate).format("DD/MM/YY HH:mm");
                Todate = moment(Todate).format("DD/MM/YY HH:mm");
                var diff = (dt2.getTime() - dt1.getTime()) / 1000;
                diff /= (60 * 60);
                var diffval = diff;

                if (diffval <= 24) {
                    Minute = '60';
                }
            }
            var type = $("#Type").val();
           // var holiday = $("#Reason_ID").val();
            var Noworking = new Array();
            var holiday = $.map($('#Reason_ID'), function (e) {

                return $(e).val();
            });
            for (var i = 0; i < holiday.length; i++) {

                Noworking.push(holiday[i]);
            }
            debugger;
            if (Minute == "") {

            }
            else {
                debugger;
                Noworking = new Array();
            }



            $.ajax({
                url: '/EnergyDashbord/PerformceceEnergy',
                //type: 'GET',
                data: "{ 'Formdate': '" + Formdate + "', 'Todate': '" + Todate + "',  'ddlformat': '" + ddlformat + "', 'Shiftwise': '" + Shift + "',  'Minute': '" + Minute + "','ConsumptionId': '" + type + "','Noworking': '" + Noworking + "','Similar': '" + Similar + "'}",
                dataType: "json",
                type: "POST",
                //data: ({ Formdate: Formdate, Todate: Todate, ddlformat: ddlformat, Shiftwise: Shift, Minute: Minute, type: type, Noworking: Noworking, Similar: Similar }),
                contentType: 'application/json;charset-utf-8',
                success: function (data) {
                    debugger;
                    $("#loading").hide();
                    $("#unloading").show();
                    // Plantwise
                    Date1 = new Array();
                    plantkwh = new Array();
                    daywiseData = new Array();
                    Shop = new Array();
                    Shopkwh = new Array();
                    speeficedata = new Array();
                    kwhdata = new Array();
                    target = new Array();
                    Prodution = new Array();
                    Best = new Array();
                    PlantTarget = new Array();
                    Cumulative = new Array();
                    Averge = new Array();
                    for (var i = 0; i < data.PlantResult.length; i++) {

                        //m = data.PlantResult[i].DateandTime;
                        //d1 = m.replace("/Date(", " ");
                        //d2 = d1.replace(")/", " ");
                        //d2 = d1.replace("", " ")
                        //d3 = d2.trim();
                        //d4 = parseInt(d3);

                        //var d = new Date(d4);
                        ////var plantdate = d.toLocaleDateString();
                        //var plantdate = d.getDate() + '-' + (d.getMonth() + 1) + '-' + d.getFullYear();
                        ////alert(d.toLocaleDateString())
                        //Date1.push(plantdate);
                        daywiseData.push(data.PlantResult[i].Consumption);
                        plantkwh.push(data.PlantResult[i].TotalConsumption);
                        Prodution.push(data.PlantResult[i].Production);
                        Best.push(data.PlantResult[i].Best)
                    };
                    for (var i = 0; i < data.allDates.length; i++) {
                        Date1.push(data.allDates[i]);
                        PlantTarget.push(data.PlantTarget[i])
                    }
                    for (var i = 0; i < data.Cumulative.length; i++) {
                        Cumulative.push(data.Cumulative[i]);

                    }
                    for (var i = 0; i < data.Averge.length; i++) {
                        Averge.push(data.Averge[i]);

                    }

                    if (ddlformat == '3' || ddlformat == '4' || ddlformat == '5' && Minute=="") {
                         Best = new Array();
                        for (var i = 0; i < data.BestData.length; i++) {
                            Best.push(data.BestData[i]);

                        }
                        ShowPlantChart1(daywiseData, Date1, plantkwh, Prodution, Best, PlantTarget, data.Consumeunit, Cumulative, Averge);
                    }
                    else {
                        debugger;
                        ShowPlantChart(daywiseData, Date1, plantkwh, data.Consumeunit, Prodution, Cumulative);
                    }


                    //shopwise

                    Shop_kwh = new Array();
                    Shop_Sec = new Array();
                    for (var i = 0; i < data.ShopwisePerformace.length; i++) {

                        if (data.ShopwisePerformace[i].Generation == true) {
                            kwhdata.push(data.ShopwisePerformace[i].TotalConsumtion);
                            Shop_kwh.push(data.ShopwisePerformace[i].Shopname);
                        }
                        if (data.ShopwisePerformace[i].Is_Production == true) {
                            speeficedata.push(data.ShopwisePerformace[i].ConsumptionperEngine);
                            Shop_Sec.push(data.ShopwisePerformace[i].Shopname);
                        }


                    }
                    for (var i = 0; i < data.Target.length; i++) {
                        target.push(data.Target[i]);
                    }
                    ShowCellGraph(speeficedata, target, Shop_Sec, data.Consumeunit)
                    ShowKwhChart(kwhdata, Shop_kwh)

                    //Busniess Wise
                    busines_data = new Array();
                    busines = new Array();
                    busines_spec = new Array();
                    for (var i = 0; i < data.Business_data.length; i++) {

                        busines_data.push(data.Business_data[i].totalconsumption)
                        busines.push(data.Business_data[i].DataName);
                        busines_spec.push(data.Business_data[i].specconsumption);

                    }
                    BusniesswiseChart(busines_data, busines, busines_spec, data.Consumeunit);

                    // Process wise
                    process_data = new Array();
                    Pro_Name = new Array();
                    Pro_spec = new Array();
                    for (var i = 0; i < data.Process_data.length; i++) {

                        Pro_Name.push(data.Process_data[i].DataName);
                        process_data.push(data.Process_data[i].totalconsumption);
                        Pro_spec.push(data.Process_data[i].specconsumption);

                    }
                    ProcesswiseChart(process_data, Pro_Name, Pro_spec, data.Consumeunit);
                    // Category Wise

                    var Category_data = []
                    for (var i = 0; i < data.CategoryData.length; i++) {
                        debugger;
                        Category_data.push({ "Name": data.CategoryData[i].Label, "y": data.CategoryData[i].Y });
                    }
                    ShowCategoryChart(Category_data);
                    debugger;
                    // Plant Summery
                    $("#starts").html(data.starts);
                    $("#ends").html(data.ends);
                    if (data.PlantSummary.length > 0) {


                        $("#tbl_maxdate").html(data.PlantSummary[0].maxdate);
                        $("#tbl_max").html(data.PlantSummary[0].maxpower);
                        $("#tbl_bestpro").html(data.PlantSummary[0].bestprod);
                        $("#tbl_bestpower").html(data.PlantSummary[0].bestpower);
                        $("#tbl_bestdate").html(data.PlantSummary[0].bestdate);
                        $("#tbl_best").html(data.PlantSummary[0].best);
                        $("#tbl_totalAvgsec").html(data.PlantSummary[0].totalavgsec);
                        $("#tbl_totalpro").html(data.PlantSummary[0].totalprod);
                        $("#tbl_totalavg").html(data.PlantSummary[0].totalavg);
                        $("#tbl_total").html(data.PlantSummary[0].totalpower);

                    }
                    else {
                        $("#tbl_maxdate").html("");
                        $("#tbl_max").html("");
                        $("#tbl_bestpro").html("");
                        $("#tbl_bestpower").html("");
                        $("#tbl_bestdate").html("");
                        $("#tbl_best").html("");
                        $("#tbl_totalAvgsec").html("");
                        $("#tbl_totalpro").html("");
                        $("#tbl_totalavg").html("");
                        $("#tbl_total").html("");
                    }
                    // Shop wise SEC
                    if (data.Shopwise_SEC.length > 0)
                    {
                        ddl = new Array();
                        var titleName = "";
                        var YAxistext = ""
                        for (var i = 0; i < data.Shopwise_SEC[0].length; i++) {

                            ddl.push(data.Shopwise_SEC[0][i].date);
                        }
                        ShopwiseTrend(ddl, titleName, YAxistext);
                        for (var j = 0; j < data.Shopwise_SEC.length; j++) {

                            TotalConsumtion = new Array();

                            var shop = data.Shopwise_SEC[j][0].Name;
                            for (var i = 0; i < data.Shopwise_SEC[j].length; i++) {

                                TotalConsumtion.push(data.Shopwise_SEC[j][i].Value);

                            }
                            ShopwiseTrendData(TotalConsumtion, shop);

                        }
                    }
                }


            });
        });

        $('#btnBarChart').click(function () {
            debugger;

            $('#btnAreawise').removeClass("btn-success").removeClass("btn-default");
            $('#btnBarChart').addClass("btn-success").removeClass("btn-default");
            $('#btnCategoryChart').removeClass("btn-success").removeClass("btn-default");
            $('#btnProcesswise').removeClass("btn-success").removeClass("btn-default");
            $('#btnSpecificwise').removeClass("btn-success").removeClass("btn-default");
            $('#btnShopwise').removeClass("btn-success").removeClass("btn-default");

            $("#Plantwise_Area").hide();
            $("#Plantwise_Business").show();
            $("#containerCategory").hide();
            $("#Plantwise_Process").hide()
            $("#chartContainer").hide()
            $("#chartContainerKWH").hide()

        })
        $('#btnCategoryChart').click(function () {

            $('#btnCategoryChart').addClass("btn-success").removeClass("btn-default");
            $('#btnAreawise').removeClass("btn-success").removeClass("btn-default");
            $('#btnBarChart').removeClass("btn-success").removeClass("btn-default");
            $('#btnProcesswise').removeClass("btn-success").removeClass("btn-default");
            $('#btnSpecificwise').removeClass("btn-success").removeClass("btn-default");
            $('#btnShopwise').removeClass("btn-success").removeClass("btn-default");
            $("#containerCategory").show();
            $("#Plantwise_Area").hide();
            $("#Plantwise_Business").hide();
            $("#Plantwise_Process").hide()
            $("#chartContainer").hide()
            $("#chartContainerKWH").hide()

        })
        $('#btnProcesswise').click(function () {
            debugger;
            $('#btnProcesswise').addClass("btn-success").removeClass("btn-default");
            $('#btnAreawise').removeClass("btn-success").addClass("btn-default");
            $('#btnBarChart').removeClass("btn-success").addClass("btn-default");
            $('#btnCategoryChart').removeClass("btn-success").addClass("btn-default");
            $('#btnSpecificwise').removeClass("btn-success").addClass("btn-default");
            $('#btnShopwise').removeClass("btn-success").addClass("btn-default");
            $("#Plantwise_Process").show()
            $("#Plantwise_Area").hide();
            $("#Plantwise_Business").hide();
            $("#containerCategory").hide();

            $("#chartContainer").hide()
            $("#chartContainerKWH").hide()

        })
        $('#btnSpecificwise').click(function () {


            $('#btnAreawise').removeClass("btn-success").removeClass("btn-default");
            $('#btnBarChart').removeClass("btn-success").removeClass("btn-default");
            $('#btnCategoryChart').removeClass("btn-success").removeClass("btn-default");
            $('#btnProcesswise').removeClass("btn-success").removeClass("btn-default");
            $('#btnSpecificwise').addClass("btn-success").removeClass("btn-default");
            $('#btnShopwise').removeClass("btn-success").removeClass("btn-default");

            $("#Plantwise_Area").hide();
            $("#Plantwise_Business").hide();
            $("#containerCategory").hide();
            $("#Plantwise_Process").hide()
            $("#chartContainer").show();
            $("#HistogramChart").show();
            var start = $("#StartDate").val();
            var end = $("#EndDate").val();
            if (start == end) {
               // document.getElementById('rdoTrend').style.display = 'none';
                $("#rdoName").hide();
            }
            else {
                $("#rdoName").show()

            }

            $("#TrendChart").hide();
            $("#chartContainerKWH").hide()
            $('input:radio[name="rdoShopGraph"][value="1"]').prop('checked', true);

        })
        $('#btnShopwise').click(function () {


            $('#btnAreawise').removeClass("btn-success").removeClass("btn-default");
            $('#btnBarChart').removeClass("btn-success").removeClass("btn-default");
            $('#btnCategoryChart').removeClass("btn-success").removeClass("btn-default");
            $('#btnProcesswise').removeClass("btn-success").removeClass("btn-default");
            $('#btnSpecificwise').removeClass("btn-success").removeClass("btn-default");
            $('#btnShopwise').addClass("btn-success").removeClass("btn-default");

            $("#Plantwise_Area").hide();
            $("#Plantwise_Business").hide();
            $("#containerCategory").hide();
            $("#Plantwise_Process").hide()
            $("#chartContainer").hide()
            $("#chartContainerKWH").show()

        })


    });

    function ShowCategoryChart(CategoryData) {
        debugger;
         Highcharts.chart('containerCategory1', {
                chart: {
                    plotBackgroundColor: null,
                    plotBorderWidth: null,
                    plotShadow: false,
                    type: 'pie',
                    spacingTop: -100,
                    //spacingLeft:-525
                },
                title: {
                    text: ''
                },
                credits: {
                    enabled: false
                },
                  tooltip: {
                      pointFormat: '{point.Name}: <b>{point.percentage:.1f}%</b>'
                },
                plotOptions: {
                    pie: {
                        allowPointSelect: true,
                        size: '50%',
                        dataLabels: {
                            enabled: false,
                            //format: '{point.label}: {point.percentage:.1f}% ',
                            style: {
                                color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                            },
                        },
                    }
                },
                series: [{
                    colorByPoint: true,
                     data: CategoryData,
                    dataLabels: {
                        style: {
                            fontSize: '9px',
                            fontFamily: 'Verdana, sans-serif',
                        },
                    }
                }],
                 exporting: {
                    enabled: true
                }
            })
    }


    function SubProcessChart(ProcessData) {

        Highcharts.chart('subProccess_cht', {
                chart: {
                    plotBackgroundColor: null,
                    plotBorderWidth: null,
                    plotShadow: false,
                    type: 'pie',
                    spacingTop: -100,
                    //spacingLeft:-525
                },
                title: {
                    text: ''
                },
                credits: {
                    enabled: false
                },
                tooltip: {
                    pointFormat: '{point.Name}: <b>{point.percentage:.1f}%</b>'
                },
                plotOptions: {
                    pie: {
                        allowPointSelect: true,
                        size: '50%',
                        dataLabels: {
                            enabled: false,
                            //format: '{point.label}: {point.percentage:.1f}% ',
                            style: {
                                color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                            },
                        },
                    }
                },
                series: [{
                    colorByPoint: true,
                    data: ProcessData,
                    dataLabels: {
                        style: {
                            fontSize: '9px',
                            fontFamily: 'Verdana, sans-serif',
                        },
                    }
                }],
                exporting: {
                    enabled: true
                }
            })
        }


    $(function () {

        $("#EndDate").change(function () {
            debugger;
            var Formdate = $("#StartDate").val();
            var Todate = $("#EndDate").val();
            var dateRange = $("#ddlDateRange").val();
            if (Formdate != "") {
                dt1 = new Date(Formdate);
                dt2 = new Date(Todate);
                var diff = (dt2.getTime() - dt1.getTime()) / 1000;
                diff /= (60 * 60);
                var diffval = diff;
                if (dateRange == "5" && diffval <= 24) {
                    $('#Minutes').show();
                    $('#MinuteRange option').prop("selected", true);

                    $('#NOWorkingDay').hide();
                    $('#Reason_ID option').prop("selected", false);
                }
                else {
                    $('#Minutes').hide();
                    $('#Minutes option').prop("selected", false);

                    $('#NOWorkingDay').show();
                    $('#Reason_ID option').prop("selected", true);
                }

                if ((Date.parse(Formdate) > Date.parse(Todate))) {

                    $('.EndDate').html("To date should be greater than or equal to From date");
                    document.getElementById("EndDate").value = "";
                }
            }
        });




        $("#StartDate").change(function () {
            debugger;
            var Formdate = $("#StartDate").val();
            var Todate = $("#EndDate").val();
            var dateRange = $("#ddlDateRange").val();

            if (Todate!= "") {
                dt1 = new Date(Formdate);
                dt2 = new Date(Todate);
                var diff = (dt2.getTime() - dt1.getTime()) / 1000;
                diff /= (60 * 60);
                var diffval = diff;

                //alert(diff);
                if (dateRange == "5" && diffval <= 24) {
                    $('#Minutes').show();
                    $('#MinuteRange option').prop("selected", true);

                    $('#NOWorkingDay').hide();
                    $('#Reason_ID option').prop("selected", false);
                }
                else {
                    $('#Minutes').hide();
                    $('#MinuteRange option').prop("selected", false);

                    $('#NOWorkingDay').show();
                    $('#Reason_ID option').prop("selected", true);
                }
                if ((Date.parse(Formdate) > Date.parse(Todate))) {

                $('.EndDate').html("To date should be greater than or equal to From date");
                document.getElementById("EndDate").value = "";
            }
            }

        });

        //$("#EndDate").change(function () {
        //    debugger
        //    var startDate = (document.getElementById("StartDate").value);
        //    //var fromDate = new Date(startDate);
        //    //var maxDate = new Date(fromDate.getFullYear(), fromDate.getMonth() + 1, -0);
        //    //var dateformat = [(maxDate.getDate()), (maxDate.getMonth() + 1), maxDate.getFullYear()].join('/');


        //    var endDate = document.getElementById("EndDate").value;
        //    //var to = new Date(endDate);
        //    //var todate = [(to.getDate()), (to.getMonth() + 1), to.getFullYear()].join('/');

        //    //    if (startDate != "" && endDate != "") {s
        //    //if ((Date.parse(endDate) > Date.parse(dateformat))) {
        //    //    $('.EndDate').html("To date should be greater than or equal to From date");
        //    //    document.getElementById("EndDate").value = "";
        //    //}
        //    //else
        //        if ((Date.parse(startDate) > Date.parse(endDate))) {

        //        $('.EndDate').html("To date should be greater than or equal to From date");
        //        document.getElementById("EndDate").value = "";
        //    }
        //    //else {
        //    //    $('.EndDate').html(null);
        //    //}
        //    //    }
        //    //})

        //    //$("#StartDate").datepicker({
        //    //    numberOfMonths: 2,
        //    //    onSelect: function (selected) {
        //    //        var dt = new Date(selected);
        //    //        dt.setDate(dt.getDate() + 1);
        //    //        $("#txtTo").datepicker("option", "minDate", dt);
        //    //    }
        //    //});
        //    //$("#EndDate").datepicker({
        //    //    numberOfMonths: 2,
        //    //    onSelect: function (selected) {
        //    //        var dt = new Date(selected);
        //    //        dt.setDate(dt.getDate() - 1);
        //    //        $("#txtFrom").datepicker("option", "maxDate", dt);
        //    //    }
        //    //});

        //});
    })

    function CategoryChart()
    {

        Highcharts.chart('containerCategory1', {

                chart: {
                    plotBackgroundColor: null,
                    plotBorderWidth: null,
                    plotShadow: false,
                    type: 'pie',
                    spacingTop: -100,
                    //spacingLeft:-525
                },
                title: {
                    text: ''
                },
                credits: {
                    enabled: false
                },
                  tooltip: {
                      pointFormat: '{point.label}: <b>{point.percentage:.1f}%</b>'
                },
                plotOptions: {
                    pie: {
                        allowPointSelect: true,
                        size: '50%',
                        dataLabels: {
                            enabled: false,
                            //format: '{point.label}: {point.percentage:.1f}% ',
                            style: {
                                color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                            },
                        },
                    }
                },
                series: [{
                    colorByPoint: true,
                     data: @Html.Raw(ViewBag.CategoryData),
                    dataLabels: {
                        style: {
                            fontSize: '9px',
                            fontFamily: 'Verdana, sans-serif',
                        },
                    }
                }],
                 exporting: {
                    enabled: true
                }
            })


    }



</script>
<script>
    $("#Planttab").click(function () {
        $("#analyze").hide();
        $("#Normal").show();
        $("#Todtbl").hide();
        $("#Performance").hide();
    })
    $("#ForeCasttab").click(function () {
        $("#Normal").hide();
        $("#analyze").show();
        $("#Todtbl").hide();
        $("#Performance").hide();
        var type = $("#Type").val();
        Analysis(type)

    })
    $("#TODtab").click(function () {
        $("#Normal").hide();
        $("#Todtbl").show();
        $("#analyze").hide();
        $("#Performance").hide();
        var type = $("#Type").val();
        TOD(type)

    })
    $("#Performancetab").click(function () {
        $("#Normal").hide();
        $("#Todtbl").hide();
        $("#analyze").hide();
        $("#Performance").show();
        var type = $("#Type").val();
        //TOD(type)
        Performance(type)
    })
    $('#btnshoplabel').click(function () {
        var chart = $('#Plantwisechart').highcharts();
        for (var i = 0; i < chart.series.length; i++) {
            var opt = chart.series[i].options;
            opt.dataLabels.enabled = !opt.dataLabels.enabled;
            chart.series[i].update(opt);
        }


    });

    $('input:radio[name="rdoShopGraph"]').change(function () {
        if ($(this).val() == '1') {
            //$("#InAreaChart").show()
            $("#HistogramChart").show()
            //$("#consumeAreaChart").hide()
            $("#TrendChart").hide()
        } else {
            // $("#InAreaChart").hide()
            $("#HistogramChart").hide()
            //$("#consumeAreaChart").show()
            $("#TrendChart").show()
        }
    });
    function Analysis(type) {
        $.ajax({
            url: '/EnergyDashbord/Analaysis',
            type: 'GET',
            data: ({ ConsumptionId: type }),
            contentType: 'application/json;charset-utf-8',
            success: function (data) {
                debugger;
                $("#loading").hide();
                $("#unloading").show();
                // Plantwise
                Date1 = new Array();
                plantkwh = new Array();
                Cumulative = new Array();
                Averge = new Array();
                lastmth = new Array();
                Estimate = new Array();
                for (var i = 0; i < data.Perform.length; i++) {


                    //daywiseData.push(data.PlantResult[i].Consumption);
                    plantkwh.push(data.Perform[i].TotalConsumption);
                    //Prodution.push(data.PlantResult[i].Production);
                    //Best.push(data.PlantResult[i].Best)
                };
                for (var i = 0; i < data.allDates.length; i++) {
                    Date1.push(data.allDates[i]);

                }
                for (var i = 0; i < data.EstimatedMth.length; i++) {
                    Estimate.push(data.EstimatedMth[i]);

                }
                for (var i = 0; i < data.cumulative.length; i++) {
                    Cumulative.push(data.cumulative[i]);

                }
                for (var i = 0; i < data.AvgtMth.length; i++) {
                    Averge.push(data.AvgtMth[i]);

                }
                for (var i = 0; i < data.LastMth.length; i++) {
                    lastmth.push(data.LastMth[i]);

                }


                ShowPlantanalyze(lastmth, Averge, plantkwh, Cumulative, Estimate, Date1);










            }


        });
    }
    function TOD(type) {
        $.ajax({
            url: '/EnergyDashbord/TOD',
            type: 'GET',
            data: ({ ConsumptionId: type }),
            contentType: 'application/json;charset-utf-8',
            success: function (data) {
                debugger;
                $("#loading").hide();
                $("#unloading").show();
                // Plantwise
                $("#Planttod_tbl tbody").html("");

                var res = "";
                for (var i = 0; i < data.TOD_Name.length; i++) {
                    res += '';
                    res += ' <tr>';
                    res += ' <td >'; res += '' + data.TOD_Name[i].Name; res += '</td>';
                    res += ' <td >'; res += '' + data.TOD_Name[i].Consumption; res += '</td>';
                    debugger;
                    for (var j = 0; j < data.todobj.length; j++) {


                        if (data.TOD_Name[i].todId == data.todobj[j].todId) {

                            var percent = data.todobj[j].Consumption / data.TOD_Name[i].Consumption;
                            percent = (percent * 100);
                            percent = parseFloat(percent).toFixed(2);
                            res += ' <td >'; res += '' + data.todobj[j].Consumption + " (" + percent + "%)"; res += '</td>';
                        }

                    }
                    res += ' </tr>';

                    // // var markup = "<tr><td>" + Area_Indata[i].Name + "</td><td>" + Area_Indata[i].y + "</td></tr>"
                    //// var markup = "<tr><td>" + data[i].todName + "</td><td>" + data[i].startdate + "</td><td>" + data[i].enddate + "</td><td>" + data[i].total + "</td><td>" + data[i].ShiftA + "</td><td>" + data[i].ShiftB + "</td><td>" + data[i].ShiftC + "</td></tr > "
                    // var markup = "<tr><td>" + data[i].todName + "</td>><td>" + data[i].total + "</td><td>" + data[i].ShiftA + "</td><td>" + data[i].ShiftB + "</td><td>" + data[i].ShiftC + "</td></tr > "


                }

                debugger;
                $("#Planttod_tbl tbody").append(res);








            }


        });
    }

    function Performance(type) {
        $.ajax({
            url: '/EnergyDashbord/Performance',
            type: 'GET',
            data: ({ ConsumptionId: type }),
            contentType: 'application/json;charset-utf-8',
            success: function (data) {
                debugger;
                $("#loading").hide();
                $("#unloading").show();
                // Plantwise
                $("#Performance_tbl tbody").html("");

                var res = "";
                for (var i = 0; i < data.Performace.length; i++) {

                    var markup = "<tr> <td><button class='boxshadow' id='realtime' value=" + data.Performace[i].ShopId + ", onclick ='realtime(" + data.Performace[i].ShopId + ")'>" + data.Performace[i].Shopname + "</button></td><td>" + data.Performace[i].ConsumptionperEngine + "</td><td>" + data.Performace[i].BestConsumption + "</td><td>" + data.Performace[i].AvgConsumption + "</td><td>" + data.Performace[i].Efficiency + "</td> </tr>"

                    if (data.Performace[i].ShopId == 0) {
                        var markup = "<tr> + <td>" + data.Performace[i].Shopname + "</td><td>" + data.Performace[i].ConsumptionperEngine + "</td><td>" + data.Performace[i].BestConsumption + "</td><td>" + data.Performace[i].AvgConsumption + "</td><td>" + data.Performace[i].Efficiency + "</td> </tr>"

                    }

                    $("#Performance_tbl tbody").append(markup);




                }










            },
            error: function () {

                debugger;
                alert("Invalid tagINdex ");
            }

        });
    }

    function ShowPlantanalyze(Lastmth, AvgMth, plntkwh, cumulative, Estimate, Date1) {

        var chart = $('#Plantanalyzehart').highcharts({
            chart: {
                zoomType: 'xy',
                exportChart: {
                    type: 'application/pdf',
                    filename: 'my-pdf'
                }
            },
            title: {
                text: null,
                style: {
                    class: 'HighTitle'
                }
            },
            credits: {
                enabled: false
            },
            legend: {
                algin: 'top',
                verticalAlign: 'top',
                layout: 'horizontal'
            },
            xAxis: {
                title: {
                    //text: Date1,
                    //style: {
                    //    fontWeight: 'bold'
                    //}
                },
                dataLabels: {
                    //rotation: -45,
                    //rotation: -90,
                    //allowOverlap:true,
                    enabled: true,

                },
                categories: Date1,
                labels:
                {
                    rotation: -45,

                },
                //
                crosshair: true
            },
            yAxis: [{
                title: {
                    text: 'Daily Unit',


                },
                //opposite: true,
                type: 'logarithmic',
                gridLineWidth: 0
                //minorTickInterval: 'auto'
            },
            {
                title: {
                    text: 'Cumulative Monthly Unit',



                },
                opposite: true,
                type: 'logarithmic',
                //minorTickInterval: 'auto'
                gridLineWidth: 0
            },
                //{
                //    title: {
                //        text: 'Production',



                //    },
                //    //opposite: true,
                //    //type: 'logarithmic',
                //    //minorTickInterval: 'auto',
                //},

            ],
            tooltip: {
                shared: true
            },
            series: [
                {
                    name: 'Daily Consumption',
                    data: plntkwh,
                    type: 'column',
                    yAxis: 0,
                    pointWidth: 20,
                    dataLabels: {
                        enabled: false,

                    }
                },
                {
                    name: 'Cumulative (Till Date)',
                    data: cumulative,
                    dashStyle: 'spline',
                    ///* color: "chocolate"*/,
                    yAxis: 1,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    }
                },
                {
                    name: 'Averge Monthly Consumption',
                    data: AvgMth,
                    type: 'column',
                    yAxis: 0,
                    pointWidth: 20,
                    dataLabels: {
                        enabled: false,

                    }
                },
                {
                    name: 'Last Month Billed Consumption',
                    data: Lastmth,
                    type: 'column',
                    yAxis: 0,
                    pointWidth: 20,
                    dataLabels: {
                        enabled: false,

                    }
                },

                {
                    name: 'This Month Estimate ',
                    data: Estimate,
                    dashStyle: 'shortdot',
                    //color: "chocolate",
                    yAxis: 1,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    },
                },
            ],
            exporting: {
                enabled: true
            }
        });




    }


    // Shopwise SEC Trend
    function ShopwiseTrend(ddl, titleName, YAxisText) {

        //$("#loading").hide();
        //$("#AreawiseTrendloading").css("display", "none");
        $('#TrendChart').highcharts({
            chart: {
                zoomType: 'xy',
                events: {

                    addSeries: function () {

                    }
                }
            },
            title: {
                text: titleName,

            },
            credits: {
                enabled: false
            },
            xAxis: {
                categories: ddl
            },
            yAxis: {
                title: {
                    text: YAxisText,

                },

                type: 'logarithmic',
                gridLineWidth: 0,
                //minorTickInterval: 'auto',
                //min: minum,

                //type: 'logarithmic',
                //minorTickInterval: 'auto',
                //gridLineColor: '#ffffff',
                //lineColor: '#ffffff',



            },

            //series: [{
            //    //data: [129.9, 171.5, 106.4, 19.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 195.6, 4.4]
            //}]
        });
    }

    function ShopwiseTrendData(TotalConsumtion, Area) {

        var chart = $('#TrendChart').highcharts();
        chart.hideLoading();
        //$("#AreawiseTrendloading").css("display", "none");

        chart.addSeries(
            {
                name: Area,
                type: 'spline',
                dataLabels: {
                    enabled: false
                },
                data: TotalConsumtion
            })

    }

</script>





