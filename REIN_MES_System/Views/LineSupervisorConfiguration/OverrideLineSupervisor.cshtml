@model REIN_MES_System.Models.RS_AM_Line_Supervisor_Mapping
@{
    ViewBag.Title = "Override";
    Layout = "~/Views/Shared/admin/_Layout.cshtml";
}

<h3>Are you sure you want to Override Supervisor for this Line?</h3>
<div>

    <dl class="dl-horizontal">
        @*<dt>
            @Html.DisplayName("Officer Name")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RS_Employee.Employee_Name)
            
        </dd>
        
        <dt>
            @Html.DisplayName("Shop Name")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RS_Shops.Shop_Name)
        </dd>

        <dt>
            @Html.DisplayName("Line Name")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RS_Lines.Line_Name)
        </dd>*@

    </dl>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-actions no-color">
            <input type="submit" value="Override" class="btn btn-primary" /> @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-primary" })
            @*@Html.ActionLink("Back to List", "Index")*@
        </div>

    <div class="form-horizontal" style=" display:none;">

        @Html.ValidationSummary(true)
        @*<div class="form-group">
                @Html.LabelFor(model => model.Plant_ID, "Plant Name", htmlAttributes: new { @class = "" })

                @Html.DropDownList("Plant_ID", null, "-Select Plant-", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Plant_ID, null, new { @class = "validation_error" })

            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Shop_ID, "Shop Name", htmlAttributes: new { @class = "" })

            @Html.DropDownList("Shop_ID", null, "-Select Shop-", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Shop_ID, null, new { @class = "validation_error" })

        </div>
        <div class=" form-group">
            @Html.LabelFor(model => model.checkBox, "Check Box To Select Line", htmlAttributes: new { @class = "" })
            @*<input type="checkbox" id="checkBox" value="hide" />*@
            @Html.CheckBox("checkBox", htmlAttributes: new { @class = "", @value = "hide" })
            @Html.ValidationMessageFor(model => model.checkBox, null, new { @class = "validation_error" })
        </div>
        <div class="form-group LineName">
            @Html.LabelFor(model => model.Line_ID, "Line Name", htmlAttributes: new { @class = "" })

            @Html.DropDownList("Line_ID", null, "-Select Line-", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Line_ID, null, new { @class = "validation_error" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Employee_ID, "Officer Name", htmlAttributes: new { @class = "" })
            @Html.DropDownList("Employee_ID", null, "-Select Officer-", new { @class = "form-control" })

            @Html.ValidationMessageFor(model => model.Employee_ID, null, new { @class = "validation_error" })

        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Is_Transferred, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.EditorFor(model => model.Is_Transferred)
                @Html.ValidationMessageFor(model => model.Is_Transferred)

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Is_Purgeable, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Is_Purgeable)
                    @Html.ValidationMessageFor(model => model.Is_Purgeable)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Inserted_Host, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Inserted_Host)
                    @Html.ValidationMessageFor(model => model.Inserted_Host)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Inserted_User_ID, "Inserted_User_ID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Inserted_User_ID", String.Empty)
                    @Html.ValidationMessageFor(model => model.Inserted_User_ID)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Inserted_Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Inserted_Date)
                    @Html.ValidationMessageFor(model => model.Inserted_Date)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Updated_Host, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Updated_Host)
                    @Html.ValidationMessageFor(model => model.Updated_Host)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Updated_User_ID, "Updated_User_ID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Updated_User_ID", String.Empty)
                    @Html.ValidationMessageFor(model => model.Updated_User_ID)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Updated_Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Updated_Date)
                    @Html.ValidationMessageFor(model => model.Updated_Date)
                </div>
            </div>*@



        @*<div class="form-group">

            <input type="submit" value="Save" class="btn btn-primary" /> @Html.ActionLink("Show All", "Index", null, new { @class = "btn btn-primary" })

        </div>*@
    </div>

    }
</div>


