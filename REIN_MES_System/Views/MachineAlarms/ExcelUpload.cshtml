@model REIN_MES_System.Models.ExcelMachineAlarms
@using REIN_MES_System.Models;
@using REIN_MES_System.App_LocalResources;
@{
    ViewBag.Title = "ExcelUpload";
    Layout = "~/Views/Shared/admin/_Layout.cshtml";
}


<div class="col-md-6 show_family_quality plant_line_configuration">
    @using (Ajax.BeginForm("ExcelUpload", "MachineAlarms", new AjaxOptions
    {//GetPatients is name of method in PatientController
        InsertionMode = InsertionMode.Replace, //target element(#patientList) will be replaced

        UpdateTargetId = "QualityChecklist",
        LoadingElementId = "loader" // div with .gif loader - that is shown when data are loading
    }, new { @class = "", id = "upload_bom_form", enctype = "multipart/form-data" }))
    {
        <div class="form-group" style="display:none;">
            @Html.LabelFor(model => model.Plant_ID, ResourceDisplayName.Plant_Name, new { @class = "" }) *

            @Html.DropDownList("Plant_ID", null, ResourceDisplayName.Plant_Name, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Plant_ID, null, new { @class = "validation_error" })

        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Shop_ID, "Shop", new { @class = "" }) *
            @Html.DropDownList("Shop_ID", null, "Shop", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Shop_ID, null, new { @class = "validation_error" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Line_ID, ResourceDisplayName.Line_Name, htmlAttributes: new { @class = "" })*
            @Html.DropDownListFor(model => model.Line_ID, null, ResourceDisplayName.select_Line, new { @class = "form-control" })
            <span class="validation_error" id="lblLine_ID"></span>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Station_ID, ResourceDisplayName.Station_Name, htmlAttributes: new { @class = "" })*
            @Html.DropDownListFor(model => model.Station_ID, null, ResourceDisplayName.Select_Station, new { @class = "form-control" })
            <span class="validation_error" id="lblStation_ID"></span>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Machine_ID, ResourceDisplayName.Machine_Name, htmlAttributes: new { @class = "" })*
            @Html.DropDownListFor(model => model.Machine_ID, null, ResourceDisplayName.Select_Machine, htmlAttributes: new { @class = "form-control" })
            <span class="validation_error" id="lblMachine_ID"></span>
        </div>
        <div class="form-group">
            @Html.AntiForgeryToken()
            @Html.TextBoxFor(m => m.Excel_File, new { type = "file", @onchange = "checkfile(this);", @id = "file" })@*<input type="file" name="Excel_File" />*@
            @Html.ValidationMessage("Excel_File", null, new { @class = "validation_error", @id = "excelReq" })
            <span id="lblExcelmsg" style="color:red;"></span>
        </div>


        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-primary" />
            @Html.ActionLink(ResourceGlobal.Show_All, "Index", null, new { @class = "btn btn-primary" })
            @*<a href="/OrderCreation/Download" download class="btn btn-primary">
                    Download Sample
                </a>*@
        </div>
    }

    @*<input type="hidden" id="hdnCreatedRowId" name="hdnCreatedRowId" value="@ViewBag.createdOrders" />*@
    @*<input type="hidden" id="hdnRowId" name="hdnRowId" value="" />*@
    <div id="QualityChecklist"></div>
</div>
@*<div class="col-md-6">
        <div class="form-group">
            @Html.Label("Excel format")

            <img src="~/Content/images/ppc_plan_format.png" />

        </div>

    </div>*@
<div class="clearfix"></div>
@{
    MachineAlarmsUploadRecords[] orderUploadRecords = (MachineAlarmsUploadRecords[])ViewBag.OrderUploadRecords;

    if (ViewBag.OrderUploadRecords != null)
    {
        <table class="table table-bordered table-striped datatable_completes">
            <thead>
                <tr>
                    <th>Alarm Name</th>
                    <th>Alarm Message</th>
                </tr>
            </thead>

            @foreach (var item in (IEnumerable<REIN_MES_System.Models.MachineAlarmsUploadRecords>)ViewBag.OrderUploadRecords)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.AlarmName)</td>
                    <td>@Html.DisplayFor(modelItem => item.AlarmMessage)</td>
                </tr>
            }
        </table>
    }
}




@section scripts {
    @Scripts.Render("~/Content/theme/plugins/datatables/js")
    @Styles.Render("~/Content/theme/plugins/datatables/css")
    @Scripts.Render("~/bundles/plant_line_configuration")
    @*@Scripts.Render("~/Scripts/user_datatable")*@

    <script>
            $(document).ready(function () {
                //$("#Machine_ID").select2();

                $("#Station_ID").on("change", function () {
                    var Station_ID = $(this).val();
                    $('#Machine_ID option').remove();
                    $('#Machine_ID').append('<option value="">Select Machine Name</option>');
                    if (Station_ID.length > 0) {
                        $.getJSON('/MachineAlarms/getMachineByStationId', { stationId: Station_ID }, function (data) {
                            if (data.length > 0) {
                                $('#Machine_ID option').remove();
                                $('#Machine_ID').append('<option value="">Select Machine Name</option>');
                                for (var i = 0; i < data.length; i++) {
                                    $('#Machine_ID').append('<option value="' +
                                               data[i].Id + '">' + data[i].Value + '</option>');
                                }
                            }

                        });
                    }
                });
            });
    </script>
}


<script type="text/javascript" language="javascript">
    function checkfile(sender) {
        var validExts = new Array(".xlsx", ".xls");
        var fileExt = sender.value;
        fileExt = fileExt.substring(fileExt.lastIndexOf('.'));
        if (validExts.indexOf(fileExt) < 0) {
            //alert("Invalid file selected, valid files are of " +
            //         validExts.toString() + " types.");
            $('#lblExcelmsg').html("Invalid file selected, valid files are of " +
                     validExts.toString() + " types.");
            $('#excelReq').hide();
            $('#file').val('');
            return false;
        }
        else {
            $('#lblExcelmsg').html('');
            return true;
        }
    }
</script>

