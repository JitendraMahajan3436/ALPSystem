@model REIN_MES_System.Models.ExcelMaintenancePart
@using REIN_MES_System.Models;
@using REIN_MES_System.App_LocalResources;
@{
    ViewBag.Title = "ExcelUpload";
    Layout = "~/Views/Shared/admin/_Layout.cshtml";
}

<div class="col-md-6 plant_line_configuration">
    @using (Ajax.BeginForm("ExcelUpload", "MaintenancePart", new AjaxOptions
    {//GetPatients is name of method in PatientController
        InsertionMode = InsertionMode.Replace, //target element(#patientList) will be replaced

        UpdateTargetId = "QualityChecklist",
        LoadingElementId = "loader" // div with .gif loader - that is shown when data are loading
    }, new { @class = "", id = "upload_bom_form", enctype = "multipart/form-data" }))
    {
        <div class="form-group" style="display:none;">
            @Html.LabelFor(model => model.Plant_ID, ResourceDisplayName.Plant_Name, new { @class = "" }) *

            @Html.DropDownList("Plant_ID", null, ResourceDisplayName.Select_Plant, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Plant_ID, null, new { @class = "validation_error" })

        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Shop_ID, ResourceDisplayName.Shop_Name, new { @class = "" }) *

            @Html.DropDownList("Shop_ID", null, ResourceDisplayName.Select_Shop, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Shop_ID, null, new { @class = "validation_error" })

        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Line_ID, ResourceDisplayName.Line_Name, new { @class = "" }) *

            @Html.DropDownList("Line_ID", null, ResourceDisplayName.select_Line, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Line_ID, null, new { @class = "validation_error" })

        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Station_ID, ResourceDisplayName.Station_Name, new { @class = "" }) *

            @Html.DropDownList("Station_ID", null, ResourceDisplayName.Select_Station, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Station_ID, null, new { @class = "validation_error" })

        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Machine_ID, ResourceDisplayName.Machine_Name, new { @class = "" }) *

            @Html.DropDownList("Machine_ID", null, ResourceDisplayName.Select_Machine, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Machine_ID, null, new { @class = "validation_error" })

        </div>

        @*<div class="form-group">
            @Html.AntiForgeryToken()
            <input type="file" name="Excel_File" id="FileUpload1" onchange="validateImageFilter()" accept=".jpg, .png, .jpeg, .tiff|images/*" />
            @Html.ValidationMessage("Excel_File", null, new { @class = "validation_error" })

        </div>*@
        <div class="form-group">
            @Html.AntiForgeryToken()
            @Html.TextBoxFor(m => m.Excel_File, new { type = "file", @onchange = "checkfile(this);", @id = "file" })@*<input type="file" name="Excel_File" />*@
            @Html.ValidationMessage("Excel_File", null, new { @class = "validation_error", @id = "excelReq" })
            <span id="lblExcelmsg" style="color:red;"></span>
        </div>

        <div class="form-group">

            <input type="submit" value="Save" class="btn btn-primary" /> @Html.ActionLink(ResourceGlobal.Show_All, "Index", null, new { @class = "btn btn-primary" })

        </div>
    }

    <div id="QualityChecklist"></div>
</div>
<div class="clearfix"></div>
@{
    MaintenancePartListRecords[] maintenancePartRecordsObj = (MaintenancePartListRecords[])ViewBag.MaintenancePartListRecords;

    if (ViewBag.MaintenancePartListRecords != null)
    {
        <table class="table table-bordered table-striped datatable_completes">
            <thead>
                <tr>
                    <th>Part Name</th>
                    <th>Part Description</th>
                </tr>
            </thead>

            @foreach (var item in (IEnumerable<REIN_MES_System.Models.MaintenancePartListRecords>)ViewBag.MaintenancePartListRecords)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.partName)</td>
                    <td>@Html.DisplayFor(modelItem => item.partDescription)</td>
                </tr>
            }
        </table>
    }
}



@section scripts {
    @Scripts.Render("~/Content/theme/plugins/datatables/js")
    @Styles.Render("~/Content/theme/plugins/datatables/css")
    @Scripts.Render("~/Scripts/user_datatable")
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/plant_line_configuration")
}
<script type="text/javascript">
    $(document).ready(function () {
        $("#Shop_ID").on("change", function () {
            var shopId = $("#Shop_ID").val();
            if (!shopId) {
                clearSelectBox("Machine_ID");
            }
        });

        $("#Line_ID").on("change", function () {
            var lineId = $("#Line_ID").val();
            if (!lineId) {
                clearSelectBox("Machine_ID");
            }
        });

        $("#Station_ID").on("change", function (e) {
            var stationId = $("#Station_ID").val();
            if (stationId) {
                var url = "/MaintenancePart/GetMachineByStationID";
                ajaxpack.getAjaxRequest(url, "stationId=" + $("#Station_ID").val() + "", showMachineStationID, "json");

            }
            else {
                clearSelectBox("Machine_ID");
            }
        });


        function showMachineStationID() {
            var myajax = ajaxpack.ajaxobj
            var myfiletype = ajaxpack.filetype
            if (myajax.readyState == 4) {
                if (myajax.status == 200 || window.location.href.indexOf("http") == -1) {

                    var jsonRes = $.parseJSON(myajax.responseText);
                    SelectOptionHTML(jsonRes, "Machine_ID");
                }
            }
        }

        function SelectOptionHTML(jsonRes, targetId) {
            var res = "";
            for (var i = 0; i < jsonRes.length; i++) {
                res += "<option value='" + jsonRes[i].Id + "'>" + jsonRes[i].Value + "</option>";
            }

            res = "<option value=''>" + $("#" + targetId + " option:first").html() + "</option>" + res;
            $("#" + targetId).html(res);
        }

        function clearSelectBox(targetId) {
            var res = "";
            res = "<option value=''>" + $("#" + targetId + " option:first").html() + "</option>";
            $("#" + targetId).html(res);
        }
    });
function validateImageFilter() {
        var uploadpath = $('#FileUpload1').val();
        var fileExtension = uploadpath.substring(uploadpath.lastIndexOf(".") + 1, uploadpath.length);

        if (fileExtension == "xls" || fileExtension=="xlsx") {
            return true;
        }
        else {
            //error code - select only excel files
            $('#FileUpload1').val('');
            alert("You can upload only excel file!...");
            return false;
        }

}

function checkfile(sender) {
    var validExts = new Array(".xlsx", ".xls");
    var fileExt = sender.value;
    fileExt = fileExt.substring(fileExt.lastIndexOf('.'));
    if (validExts.indexOf(fileExt) < 0) {
        //alert("Invalid file selected, valid files are of " +
        //         validExts.toString() + " types.");
        $('#lblExcelmsg').html("Invalid file selected, valid files are of " +
                 validExts.toString() + " types.");
        $('#excelReq').hide();
        $('#file').val('');
        return false;
    }
    else {
        $('#lblExcelmsg').html('');
        return true;
    }
}
</script>

