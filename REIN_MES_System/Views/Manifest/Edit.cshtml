@model REIN_MES_System.Models.RS_Manifest
@using REIN_MES_System.App_LocalResources
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/admin/_Layout.cshtml";
}
<div class="col-md-12">
    @using (Html.BeginForm("Edit", "Manifest", FormMethod.Post, new { @class = "dropzone nodzimage", id = "mydropzone", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Manifest_ID)
        @Html.HiddenFor(model => model.Identification)
        <input type="hidden" name="StationID" value="" />
        <div style="display:none">
            <div class="col-md-3">
                @Html.LabelFor(model => model.Plant_ID, "Plant Name *", htmlAttributes: new { @class = "control-label" })
                @Html.DropDownList("Plant_ID", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Plant_ID)
            </div>
        </div>
        <div class="row optionswrapper">
            <div class="radio-btn col-md-5"><input type="radio" name="Is_ParentModel_Manifest" value="false" id="PartBased-radio" @( (Model.Is_ParentModel_Manifest == true) ? "" : "checked") /> <label for="PartBased-radio">Child Part Based Manifest</label></div>
            <div class="radio-btn col-md-5"><input type="radio" name="Is_ParentModel_Manifest" value="true" id="ModelBased-radio" @( (Model.Is_ParentModel_Manifest == true) ? "checked" : "") /> <label for="ModelBased-radio">Parent Model Based Manifest</label></div>
        </div>
        <div class="row partnoBased-box">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Part_No, "Part No", htmlAttributes: new { @class = "control-label" })<i style="color:red">*</i>
                @Html.DropDownListFor(model => model.Part_No, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Part_No)
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Shop_ID, "Shop Name", htmlAttributes: new { @class = "control-label" })<i style="color:red">*</i>
                @Html.DropDownList("Shop_ID", null, String.Empty, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Shop_ID)
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Line_ID, "Line Name", htmlAttributes: new { @class = "control-label" })<i style="color:red">*</i>
                @Html.DropDownListFor(model => model.Line_ID, null, String.Empty, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Line_ID)
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Station_ID, "Station Name", htmlAttributes: new { @class = "control-label" })<i style="color:red">*</i>
                @Html.DropDownListFor(model => model.Station_ID, null, String.Empty, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Station_ID)
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Platform_ID, ResourceDisplayName.Platform_Name, htmlAttributes: new { @class = "control-label" })<i style="color:red">*</i>
                @Html.DropDownListFor(model => model.Platform_ID, null, ResourceDisplayName.Select_Platform, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Platform_ID)
            </div>
            <div class="col-md-4  modelBased-box">
                @Html.LabelFor(model => model.Model_Attribute_ID, ResourceDisplayName.Attribute_Name, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.Model_Attribute_ID, null, "Select Model Attribute", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Model_Attribute_ID)
            </div>
        </div><br />
        <div class="row modelBased-box">
            <div class="col-md-12" id="modelcodes">
                @{
        int i = 0;
        if (ViewBag.Models != null)
        {
            foreach (var obj in ViewBag.Models)
            {
                <div class="modelCheckboxList col-md-3">
                    <input type="checkbox" id="series@(i)" name="ModelCodes" value="@obj.Id" checked="@obj.Checked" /><label for="series@(i)">@obj.Name</label>

                </div>
                i++;
            }
        }

                }
            </div>
        </div><br />
        <div class="form-group">
            <div class="fallback">
                <input name="PartImages" type="file" multiple />
            </div>
            <div id="dropzonePreview" class="dropzone-previews dz-default">
                <h5>Click here to upload Manifest Image .</h5>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-2">
                <input type="submit" value="Save" id="uploadManifest" class="btn btn-primary" />
            </div>
            @Html.ActionLink("Show All", "Index", null, new { @class = "btn btn-primary" })
        </div>

    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/DZscripts")
    @Scripts.Render("~/bundles/Select2scripts")
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            $("input[name=StationID]").val($("#Station_ID").val());

            var ismodelbase = $("input[name=Is_ParentModel_Manifest]:checked").val();

            if (ismodelbase == "true") {
                $(".modelBased-box").show();
                $(".partnoBased-box").hide();
            } else {
                $(".modelBased-box").hide();
                $(".partnoBased-box").show();
            }
            $(".optionswrapper").hide();
            $(".optionswrapper").on("change", "input[name=Is_ParentModel_Manifest]", function () {
                var thisvalue = $(this).val();

                if (thisvalue == "true") {
                    $(".partnoBased-box").hide();
                    $(".modelBased-box").show();
                } else {
                    $(".partnoBased-box").show();
                    $(".modelBased-box").hide();
                }
            });
            //$('#Attribute_ID').change(function () {
            //    var modelfamily = $(this).val();
            //    var shopid = $('#Shop_ID').val();
            //    if (modelfamily.length > 0 && shopid.length > 0) {
            //        $.getJSON('/SOP/getModelCheckBoxList', { modelFamilyCode: modelfamily, shopID: shopid }, function (data) {

            //            // Ajax success callback function.
            //            // Populate dropdown from Json data returned from server.
            //            $('#modelcodes').html("");
            //            $.each(data, function (index, obj) {
            //                $('#modelcodes').append('<div class="modelCheckboxList col-xs-2">' +
            //                                        '<input type="checkbox" id="series' + index + '" name="ModelCodes" value="' + obj.Id + '"/><label for="series' + index + '">' + obj.Name + '</label>' +
            //                                        '</div>');
            //            });

            //        }).fail(function (jqXHR, textStatus, errorThrown) {
            //            // Ajax fail callback function.
            //            alert('Error getting Shops!');
            //        });
            //    }
            //});

            $('#Model_Attribute_ID').change(function () {
                debugger;
                var attributeid = $(this).val();
                var shopid = $('#Shop_ID').val();
                if (attributeid.length > 0 && shopid.length > 0) {
                    $.getJSON('/SOP/ModelCheckBoxList', { attributeID: attributeid, shopID: shopid }, function (data) {

                        // Ajax success callback function.
                        // Populate dropdown from Json data returned from server.
                        $('#modelcodes').html("");
                        $.each(data, function (index, obj) {
                            $('#modelcodes').append('<div class="modelCheckboxList col-md-3">' +
                                                    '<input type="checkbox" id="series' + index + '" name="ModelCodes" value="' + obj.Id + '" checked="' + obj.Checked + '"/><label for="series' + index + '">' + obj.Name + '</label>' +
                                                    '</div>');
                        });

                    }).fail(function (jqXHR, textStatus, errorThrown) {
                        // Ajax fail callback function.
                        alert('Error getting Modelcodes!');
                    });
                }
                else {
                    $('#modelcodes').html("");
                }
            });

            $("#Part_No").select2({

            });
            //$("#uploadManifest").prop("disabled", true);
            $('#Shop_ID').change(function () {
                var shopid = $(this).val();
                if (shopid.length > 0) {
                    $.getJSON('/SOP/getLineID', { shopId: shopid }, function (data) {

                        // Ajax success callback function.
                        // Populate dropdown from Json data returned from server.
                        $('#Line_ID option').remove();
                        $('#Line_ID').append('<option value=""></option>');
                        for (i = 0; i < data.length; i++) {
                            $('#Line_ID').append('<option value="' +
                            data[i].Line_ID + '">' + data[i].Line_Name + '</option>');
                        }
                    }).fail(function (jqXHR, textStatus, errorThrown) {
                        // Ajax fail callback function.
                        alert('Error getting Shops!');
                    });

                    //if ($(".optionswrapper input[name=Is_ParentModel_Manifest]:checked").val() == "true") {
                    //    $.getJSON('/SOP/getFamilyList', { shopID: shopid }, function (data) {

                    //        // Ajax success callback function.
                    //        // Populate dropdown from Json data returned from server.
                    //        $('#Attribute_ID option').remove();
                    //        $('#modelcodes').html("");
                    //        $('#Attribute_ID').append('<option value=""></option>');
                    //        for (i = 0; i < data.length; i++) {
                    //            $('#Attribute_ID').append('<option value="' +
                    //            data[i].Attribute_ID + '">' + data[i].Attribute_Desc + '</option>');
                    //        }
                    //    }).fail(function (jqXHR, textStatus, errorThrown) {
                    //        // Ajax fail callback function.
                    //        alert('Error getting Model Family!');
                    //    });
                    //}

                }
                else {
                    $('#Line_ID option').remove();
                    $('#Line_ID').append('<option value="">Select Line</option>');

                    $('#Station_ID option').remove();
                    $('#Station_ID').append('<option value="">Select Station</option>');

                    $('#Platform_ID option').remove();
                    $('#Platform_ID').append('<option value="">Select Platform</option>');

                    $('#Model_Attribute_ID option').remove();
                    $('#Model_Attribute_ID').append('<option value="">Select Model Attribute</option>');

                    $('#modelcodes').html("");
                }
            });

            $('#Line_ID').change(function () {
                var lineid = $(this).val();
                if (lineid.length > 0) {
                    $.getJSON('/SOP/getStationID', { lineId: lineid }, function (data) {
                        // Ajax success callback function.
                        // Populate dropdown from Json data returned from server.
                        $('#Station_ID option').remove();
                        $('#Station_ID').append('<option value="">Select Station</option>');
                        for (i = 0; i < data.length; i++) {
                            $('#Station_ID').append('<option value="' +
                            data[i].Station_ID + '">' + data[i].Station_Name + '</option>');
                        }
                    }).fail(function (jqXHR, textStatus, errorThrown) {
                        // Ajax fail callback function.
                        alert('Error getting Stations!');
                    });

                    setTimeout(
                        $.getJSON('/SOP/getPlatformID', { lineId: lineid }, function (data) {
                            $('#Platform_ID option').remove();
                            $('#Platform_ID').append('<option value="">Select Platform</option>');
                            for (i = 0; i < data.length; i++) {
                                $('#Platform_ID').append('<option value="' +
                                data[i].Platform_ID + '">' + data[i].Platform_Name + '</option>');
                            }
                        }).fail(function (jqXHR, textStatus, errorThrown) {
                            alert('Error getting Platforms!');
                        }), 1000)

                }
                else {
                    $('#Station_ID option').remove();
                    $('#Station_ID').append('<option value="">Select Station</option>');

                    $('#Platform_ID option').remove();
                    $('#Platform_ID').append('<option value="">Select Platform</option>');

                    $('#Model_Attribute_ID option').remove();
                    $('#Model_Attribute_ID').append('<option value="">Select Model Attribute</option>');

                    $('#modelcodes').html("");
                }
            });

            $('#Platform_ID').change(function () {
                var platformid = $(this).val();
                var lineid = $('#Line_ID').val();
                var shopid = $('#Shop_ID').val();
                if (platformid.length > 0) {
                    $.getJSON('/SOP/getModelAttributeData', { ShopId: shopid, lineId: lineid, PlatformId: platformid }, function (data) {
                        // Ajax success callback function.
                        // Populate dropdown from Json data returned from server.
                        $('#Model_Attribute_ID option').remove();
                        $('#Model_Attribute_ID').append('<option value="">Select Model Attribute</option>');
                        for (i = 0; i < data.length; i++) {
                            $('#Model_Attribute_ID').append('<option value="' +
                            data[i].Model_Attribute_ID + '">' + data[i].Attribution + '</option>');
                        }
                    }).fail(function (jqXHR, textStatus, errorThrown) {
                        // Ajax fail callback function.
                        alert('Error getting Model Attribute!');
                    });
                }
                else {
                    $('#Model_Attribute_ID option').remove();
                    $('#Model_Attribute_ID').append('<option value="">Select Model Attribute</option>');

                    $('#modelcodes').html("");
                }
            });

            Dropzone.options.mydropzone = {
                // url: 'saveitemedit/savenewimage.php',
                maxFiles: 3,
                maxFilesize: 10, //mb
                acceptedFiles: 'image/*',
                addRemoveLinks: true,
                autoProcessQueue: false,
                autoDiscover: false,
                paramName: 'PartImages',
                uploadMultiple: true,
                previewsContainer: '#dropzonePreview',
                clickable: '#dropzonePreview',
                dictDefaultMessage: '',
                thumbnailWidth: "350",
                thumbnailHeight: "170",
                dictRemoveFileConfirmation: "Are you sure you want to DELETE ?",
                accept: function (file, done) {
                    done();
                    // $( "#uploadproduct" ).show();
                    $("#uploadManifest").prop("disabled", false);
                },
                init: function () {
                    // var totalFiles = 0;
                    this.on("maxfilesexceeded", function (file) {
                        //alert("No more files please!Only One image file accepted.");
                        this.removeFile(file);
                    });
                    var myDropzone = this;
                    var mid = $("#Manifest_ID").val();
                    // alert('2');
                    $.getJSON('/Manifest/getManifestImages', { manifestID: mid }, function (data) {
                        // alert(data);
                        $.each(data, function (key, value) {
                            // console.log(key + ":" + value);
                            // alert('dsd');
                            var mockFile = {
                                name: value.Name,
                                size: value.Size,
                                status: Dropzone.ADDED,
                                accepted: true
                            };

                            //myDropzone.options.addedfile.call(myDropzone, mockFile);
                            //myDropzone.options.thumbnail.call(myDropzone, mockFile, "/Content/images/" + value.Name);

                            myDropzone.emit("addedfile", mockFile);
                            // And optionally show the thumbnail of the file:
                            myDropzone.emit("thumbnail", mockFile, "/Content/images/" + value.Name);
                            myDropzone.emit("complete", mockFile);
                            myDropzone.files.push(mockFile);

                        });

                    });
                    $("#uploadManifest").on('click', function (e) {
                        e.preventDefault();
                        var $form = $('form');
                        if ($form.valid()) {
                            if (myDropzone.getQueuedFiles().length > 0) {
                                myDropzone.processQueue();
                            }
                            else {
                                // Upload anyway without files
                                // myDropzone.uploadFiles([]);
                                $('form').submit();
                            }
                        }
                    });
                    // this.on("addedfile", function (file) {
                    //       totalFiles += 1;
                    //        if (totalFiles > 0) {
                    //         $('.sbmt').show();
                    //       }
                    //   });
                    this.on("removedfile", function (file) {

                        $.ajax({
                            type: 'POST',
                            url: '/Manifest/DeleteFile',
                            data: "filename=" + file.name,
                        });
                    });
                    this.on("reset", function (file) {
                        $("#uploadManifest").prop("disabled", true);
                    });
                    this.on("error", function (file, msg) {
                        var myDropzone = this;
                        $("#Shop_ID").val("");
                        $("#Part_No").select2('val', '');
                        $('#Line_ID option').remove();
                        $('#Station_ID option').remove();
                        $('#Platform_ID option').remove();
                        
                        //myDropzone.removeAllFiles();
                        alert(msg);
                    });
                    this.on("success", function (file, data) {
                        //$('html, body').animate({ scrollTop: 0 }, 'slow');
                        //var myDropzone = this;
                        //$("#Shop_ID").val("");
                        //$("#Part_No").select2('val', '');
                        //$('#Line_ID option').remove();
                        //$('#Station_ID option').remove();
                        //myDropzone.removeAllFiles();
                        //alert(data.success);
                        if (data.success) {
                            window.location.replace("/Manifest");
                        } else {
                            window.location.replace("/Manifest/Edit/" + data.responseText);
                        }
                    });
                }
            };

        });
    </script>
}
@section Styles {
    @Styles.Render("~/Content/DZstyles")
    @Styles.Render("~/Content/Select2styles")
    <link href="~/Content/theme/ManifestCSS.css" rel="stylesheet" />
}
