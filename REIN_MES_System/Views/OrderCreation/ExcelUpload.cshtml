@model REIN_MES_System.Models.ExcelOrderUpload
@using REIN_MES_System.Models;
@using REIN_MES_System.App_LocalResources;
@{
    ViewBag.Title = "ExcelUpload";
    Layout = "~/Views/Shared/admin/_Layout.cshtml";
}


@*<h2>ExcelUpload</h2>*@
<div class="col-md-6 show_family_quality">
    @using (Ajax.BeginForm("ExcelUpload", "OrderCreation", new AjaxOptions
    {//GetPatients is name of method in PatientController
        InsertionMode = InsertionMode.Replace, //target element(#patientList) will be replaced

        UpdateTargetId = "QualityChecklist",
        LoadingElementId = "loader" // div with .gif loader - that is shown when data are loading
    }, new { @class = "", id = "upload_bom_form", enctype = "multipart/form-data" }))
    {
        <div class="form-group" style="display:none;">
            @Html.LabelFor(model => model.Plant_ID, ResourceDisplayName.Plant_Name, new { @class = "" })<i style="color:red">*</i>

            @Html.DropDownList("Plant_ID", null, ResourceDisplayName.Plant_Name, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Plant_ID, null, new { @class = "validation_error" })

        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Shop_ID, "Shop", new { @class = "" })<i style="color:red">*</i>
            @Html.DropDownList("Shop_ID", null, "Shop", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Shop_ID, null, new { @class = "validation_error" })

        </div>


        <div class="form-group">
            @Html.AntiForgeryToken()
            @Html.TextBoxFor(m => m.Excel_File, new { type = "file", @onchange = "checkfile(this);", @id = "file" })@*<input type="file" name="Excel_File" />*@
            @Html.ValidationMessage("Excel_File", null, new { @class = "validation_error", @id = "excelReq" })
            <span id="lblExcelmsg" style="color:red;"></span>
        </div>


        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-primary" id="SaveBtn"/>
            @Html.ActionLink(ResourceGlobal.Show_All, "Index", null, new { @class = "btn btn-primary" })
            <a href="~/Content/documents/PPC_Order.xlsx" download class="btn btn-primary">
                Download Sample   @*<img border="0" src="/images/myw3schoolsimage.jpg" alt="W3Schools" width="104" height="142">*@
            </a>
        </div>
    }

    <input type="hidden" id="hdnCreatedRowId" name="hdnCreatedRowId" value="@ViewBag.createdOrders" />
    <input type="hidden" id="hdnRowId" name="hdnRowId" value="" />
    <div id="QualityChecklist"></div>
</div>
<div class="col-md-5">
    <div class="form-group">
        @Html.Label("Excel Format");
        <img src="~/Content/images/PPC_Order.png" style="width:120%;" />
        @*<img src="~/Content/images/ExcelOrderCreate.PNG" style="width:120%;" />*@
    </div>
</div>
<div class="clearfix"></div>
@{
    OrderUploadRecords[] orderUploadRecords = (OrderUploadRecords[])ViewBag.OrderUploadRecords;

    if (ViewBag.OrderUploadRecords != null)
    {
        <table class="table table-bordered table-striped datatable_completes">
            <thead>
                <tr>
                    <th>Model Code</th>
                    <th>Color</th>
                    <th>Qty</th>
                    <th>Country</th>
                    <th>Message</th>
                    <th></th>
                </tr>
            </thead>

            @foreach (var item in (IEnumerable<REIN_MES_System.Models.OrderUploadRecords>)ViewBag.OrderUploadRecords)
            {
                if (item != null)
                {
            <tr id="@item.rowId" @{ if (item.isCreated == true) { } else { <text> class="bg-red-gradient" </text>  } }>
                <td>@Html.DisplayFor(modelItem => item.modelCode)</td>
                <td>@Html.DisplayFor(modelItem => item.ColorCode)</td>
                <td>@Html.DisplayFor(modelItem => item.qty)</td>
                <td>@Html.DisplayFor(modelItem => item.Country)</td>
                <td>@Html.DisplayFor(modelItem => item.orderCreationError) </td>
                <td class="message">
                    <input type="hidden" class="qty" value="@item.qty" />

                </td>
            </tr>
                        }
                    }
        </table>
    }
}




@section scripts {
    @Scripts.Render("~/Content/theme/plugins/datatables/js")
    @Styles.Render("~/Content/theme/plugins/datatables/css")
    @*@Scripts.Render("~/Scripts/user_datatable")*@
}


<script type="text/javascript" language="javascript">
    function checkfile(sender) {
        var validExts = new Array(".xlsx", ".xls");
        var fileExt = sender.value;
        fileExt = fileExt.substring(fileExt.lastIndexOf('.'));
        if (validExts.indexOf(fileExt) < 0) {
            //alert("Invalid file selected, valid files are of " +
            //         validExts.toString() + " types.");
            $('#lblExcelmsg').html("Invalid file selected, valid files are of " +
                     validExts.toString() + " types.");
            $('#excelReq').hide();
            $('#file').val('');
            return false;
        }
        else {
            $('#lblExcelmsg').html('');
            return true;
        }
    }
</script>

<script type="text/javascript">
    
    $("#upload_bom_form").submit(function () {
        //alert();
        $(this).find(':input[type=submit]').prop('disabled', true);
    });
 
    $(document).ready(function (e) {

        //releaseOrders();

        function releaseOrders() {
            var rowId = $("#hdnCreatedRowId").val();
            if (rowId) {
                rowId = rowId.split(",");
                var row = rowId[0];
                var i = rowId.indexOf(row);
                if (i != -1) {
                    rowId.splice(i, 1);
                }
                var quantity = $("#" + row + " .qty").val();
                var remark = "";
                $("#hdnRowId").val(row);
                $("#" + row + " .message").html("Releasing.....");
                var url = "/OMOrderRelease/CreateOrders";
                ajaxpack.getAjaxRequest(url, "rowId=" + row + "&remark=" + remark + "&quantity=" + quantity, showOrderRelease, "json");

                rowId = rowId.toString();
                //alert(rowId);
                $("#hdnCreatedRowId").val(rowId);
                $(".btn-primary").addClass("disabled");
            }
            else {
                // enable buttons
                $(".btn-primary").removeClass("disabled");
            }
        }

        function showOrderRelease() {
            var myajax = ajaxpack.ajaxobj
            var myfiletype = ajaxpack.filetype
            if (myajax.readyState == 4) {
                //alert("4");

                if (myajax.status == 200 || window.location.href.indexOf("http") == -1) { //if request was successful or running script locally

                    var jsonRes = $.parseJSON(myajax.responseText);
                    var row = $("#hdnRowId").val();
                    $("#" + row + " .message").html("Released");
                    $("#" + row).addClass("bg-green-gradient");
                    releaseOrders();

                }
            }
        }

    });
</script>