@model REIN_MES_System.Models.RS_Partgroup
@using REIN_MES_System.App_LocalResources;


@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/admin/_Layout.cshtml";
}


<div class="col-md-12">
    @using (Html.BeginForm())
    {
        <div class="">
            <br />

            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                @Html.ValidationSummary(true)
                <div class="row">
                    <div class="col-md-3" style="display:none;">
                        @Html.LabelFor(model => model.Plant_ID, ResourceDisplayName.Plant_Name + " *", htmlAttributes: new { @class = "" })

                        @Html.DropDownList("Plant_ID", (SelectList)ViewBag.Plant_ID, null, new { @class = "form-control", @readonly = "true" })
                        @Html.ValidationMessageFor(model => model.Plant_ID, null, new { @class = "validation_error" })

                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Shop_ID, ResourceDisplayName.Select_Shop, htmlAttributes: new { @class = "" })<i style="color:red">*</i>

                        @Html.DropDownListFor(model => model.Shop_ID, (SelectList)ViewBag.Shop_ID, ResourceDisplayName.Select_Shop, new { onchange = "", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Shop_ID, null, new { @class = "validation_error" })

                    </div>

                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Line_ID, ResourceDisplayName.Line_Name, htmlAttributes: new { @class = "" })<i style="color:red">*</i>

                        @Html.DropDownListFor(model => model.Line_ID, Enumerable.Empty<SelectListItem>(), ResourceDisplayName.select_Line, new { onchange = "", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Line_ID, null, new { @class = "validation_error" })

                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Station_ID, ResourceDisplayName.Station_Name, htmlAttributes: new { @class = "" })

                        @Html.DropDownListFor(model => model.Station_ID, Enumerable.Empty<SelectListItem>(), ResourceDisplayName.Select_Station, new { onchange = "", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Station_ID, null, new { @class = "validation_error" })

                    </div>
                </div>

                <br />
                <div class="row">

                    <div class="col-md-3">
                        @Html.Label(ResourceDisplayName.Part_Group_desc, htmlAttributes: new { @class = "" })<i style="color:red">*</i>

                        @Html.TextBoxFor(model => model.Partgrup_Desc, new { onchange = "", @class = "form-control", @maxlength = "50", @autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.Partgrup_Desc, null, new { @class = "validation_error" })

                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Order_Create, htmlAttributes: new { @class = "" })

                        @Html.EditorFor(model => model.Order_Create, new { onchange = "", @class = "form-control" })

                        @Html.ValidationMessageFor(model => model.Order_Create)
                        <br />
                        <span style="color:red;font-size:15px;  " id="lblOrder_Create"></span>
                    </div>


                </div>
                <br />
                <div class="row">
                    <div class="col-md-3" id="Cons_LineId">
                        @Html.LabelFor(model => model.Consumption_Line_ID, htmlAttributes: new { @class = "" })

                        @Html.DropDownListFor(model => model.Consumption_Line_ID, Enumerable.Empty<SelectListItem>(), ResourceDisplayName.Select_Consuption_Line, new { onchange = "", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Consumption_Line_ID, null, new { @class = "validation_error" })
                    </div>

                    <div class="col-md-3" id="Cons_ShopId">
                        @Html.LabelFor(model => model.Consumption_Station_ID, htmlAttributes: new { @class = "" })
                        @Html.DropDownListFor(model => model.Consumption_Station_ID, Enumerable.Empty<SelectListItem>(), ResourceDisplayName.Select_Consumption_Station, new { onchange = "", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Consumption_Station_ID, null, new { @class = "validation_error" })
                    </div>
                    <div class="col-md-3" id="Cons_PartGroupCode">
                        @Html.LabelFor(model => model.Partgroup_Code, ResourceDisplayName.Part_Group_Code, htmlAttributes: new { @class = "" })<i style="color:red">*</i>
                        @Html.TextBoxFor(model => model.Partgroup_Code, new { onchange = "", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Partgroup_Code, null, new { @class = "validation_error" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-5" id="serial" style="display:none;">
                        @Html.LabelFor(model => model.Serial_Config_ID, ResourceDisplayName.Serial_No_Config, htmlAttributes: new { @class = "" }) <i style="color:red">*</i>

                        @Html.DropDownListFor(model => model.Serial_Config_ID, Enumerable.Empty<SelectListItem>(), ResourceDisplayName.Select_Serial_Config, new { onchange = "", @class = "form-control" })
                        @*@Html.ValidationMessageFor(model => model.Serial_Config_ID, null, new { @class = "validation_error" })*@
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-5" id="serial" style="display:none;">
                        @Html.LabelFor(model => model.Is_Kitting, htmlAttributes: new { @class = "" })

                        @Html.CheckBox("Is_Kitting", new { onchange = "" })
                        @Html.ValidationMessageFor(model => model.Is_Kitting)
                    </div>

                    <div class="col-md-3">
                        @*@Html.LabelFor(model => model.Is_Print, htmlAttributes: new { @class = "" })*@
                        @Html.LabelFor(model => model.Is_Print, ResourceDisplayName.Is_Print, htmlAttributes: new { @class = "" })


                        @Html.CheckBox("Is_Print", new { @checked = true })
                    </div>

                </div>
                <br />
                <div class="row">
                    <div id="KittingSection">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Kitting_Release_Line_ID, ResourceDisplayName.Kitting_Release_Line, htmlAttributes: new { @class = "" })<i style="color:red">*</i>

                            @Html.DropDownListFor(model => model.Kitting_Release_Line_ID, Enumerable.Empty<SelectListItem>(), ResourceDisplayName.Select_Release_Line, new { onchange = "", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Kitting_Release_Line_ID, null, new { @class = "validation_error" })
                        </div>

                        <div class="col-md-3" id="Cons_ShopId">
                            @Html.LabelFor(model => model.Kitting_Release_Station_ID, ResourceDisplayName.Kitting_Release_Station, htmlAttributes: new { @class = "" })<i style="color:red">*</i>

                            @Html.DropDownListFor(model => model.Kitting_Release_Station_ID, Enumerable.Empty<SelectListItem>(), ResourceDisplayName.Select_Release_Station, new { onchange = "", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Kitting_Release_Station_ID, null, new { @class = "validation_error" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Qty, ResourceDisplayName.Quantity_1, htmlAttributes: new { @class = "" })<i style="color:red">*</i>
                        @Html.TextBoxFor(model => model.Qty, new { onchange = "", @class = "form-control", @maxlength = "5", @autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.Qty, null, new { @class = "validation_error" })
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-5">
                        <input type="submit" value="@ResourceGlobal.Save" class="btn btn-primary" id="btnSave" />
                        @Html.ActionLink(ResourceGlobal.Show_All, "Index", null, new { @class = "btn btn-primary" })
                    </div>
                </div>

            </div>
        </div>
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/master_file")
    @Scripts.Render("~/bundles/Select2scripts")
    @Scripts.Render("~/bundles/jqueryCustom")
}


<script type="text/javascript">

    $(document).ready(function () {
        //$("#Station_ID").select2({
        //    allowClear: true
        //});


        //$("#Line_ID").select2({
        //    allowClear: true
        //});

        //$("#Shop_ID").select2({
        //    allowClear: true
        //});

        //$("#Consumption_Line_ID").select2({
        //    allowClear: true
        //});

        //$("#Consumption_Station_ID").select2({
        //    allowClear: true
        //});

        if ($('#Is_Kitting').is(':checked')) {
            $('#KittingSection').css('display', 'block');
        }
        else {
            $('#KittingSection').css('display', 'none');
        }
        //Added by ketan as per Nashik 
        document.getElementById("Order_Create").checked = true;


        var checkedValue = document.getElementById("Order_Create").checked;
        if (checkedValue == true) {
           //document.getElementById("serial").style.display = "block"
            document.getElementById("Cons_PartGroupCode").style.display = "none"
            document.getElementById("Cons_LineId").style.display = "none"
            document.getElementById("Cons_ShopId").style.display = "none"
           $('#kitting_section').attr("style", " display:none")
           $('#KittingSection').attr("style", " display:none")
           document.getElementById("Is_Kitting").checked = false
            
       }
        else {
            document.getElementById("serial").style.display = "none"
            document.getElementById("Cons_PartGroupCode").style.display = "block"
            document.getElementById("Cons_LineId").style.display = "block"
            document.getElementById("Cons_ShopId").style.display = "block"
            $('#kitting_section').attr("style", " display:block")
       }
    });


    $("#Order_Create").on("change", function () {

        //GetSerialConfiguration();
        var checkedValue = document.getElementById("Order_Create").checked;
        if (checkedValue == true) {
            //document.getElementById("serial").style.display = "block"
            document.getElementById("Cons_PartGroupCode").style.display = "none"
            document.getElementById("Cons_LineId").style.display = "none"
            document.getElementById("Cons_ShopId").style.display = "none"
            $('#kitting_section').attr("style", " display:none")
            $('#KittingSection').attr("style", " display:none")
            document.getElementById("Is_Kitting").checked = false

        }
        else {
                document.getElementById("serial").style.display = "none"
                document.getElementById("Cons_PartGroupCode").style.display = "block"
                document.getElementById("Cons_LineId").style.display = "block"
                document.getElementById("Cons_ShopId").style.display = "block"
                $('#kitting_section').attr("style", " display:block")
        }
    });
    function GetSerialConfiguration() {
        var checkedValue = document.getElementById("Order_Create").checked;
        if (checkedValue == true) {
            document.getElementById("serial").style.display = "block"
            document.getElementById("Cons_PartGroupCode").style.display = "none"
            document.getElementById("Cons_LineId").style.display = "none"
            document.getElementById("Cons_ShopId").style.display = "none"
            $('#kitting_section').attr("style", " display:none")
            $('#KittingSection').attr("style", " display:none")

            document.getElementById("Is_Kitting").checked = false
            // Populate categories when the page is loaded.
            var Shop_ID = $("#Shop_ID").val();
            if (Shop_ID.length > 0) {
                $.getJSON('/Partgroup/GetSerial_ID', { Shop_ID: Shop_ID }, function (data) {
                    if (data.length > 0) {
                        $('#btnSave').attr('disabled', false);
                        // Ajax success callback function.
                        // Populate dropdown from Json data returned from server.
                        $('#Serial_Config_ID option').remove();
                        $('#Serial_Config_ID').append('<option value=""></option>');

                        for (i = 0; i < data.length; i++) {

                            $('#Serial_Config_ID').append('<option value="' +
                      data[i].Config_ID + '">' + data[i].Serial_Logic + '</option>');
                        }
                    } else {
                        $('#Serial_Config_ID option').remove();
                        $("#Serial_Config_ID").val(null).trigger("change");
                        $('#btnSave').attr("disabled", true);
                    }
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    // Ajax fail callback function.
                    //alert('Error getting Line Selection !');
                });

                $('#lblOrder_Create').html("");
            }
            else {
                document.getElementById("Order_Create").checked = false
                $('#lblOrder_Create').html("Please select Shop");
                document.getElementById("serial").style.display = "none"
                document.getElementById("Cons_PartGroupCode").style.display = "block"
                document.getElementById("Cons_LineId").style.display = "block"
                document.getElementById("Cons_ShopId").style.display = "block"
                $('#kitting_section').attr("style", " display:block");
            }

        }
        else {
            document.getElementById("serial").style.display = "none"
            document.getElementById("Cons_PartGroupCode").style.display = "block"
            document.getElementById("Cons_LineId").style.display = "block"
            document.getElementById("Cons_ShopId").style.display = "block"
            $('#kitting_section').attr("style", " display:block");
            $('#btnSave').attr('disabled', false);

        }
    }

    //Consumption StaionId
    $("#Consumption_Line_ID").on("change", function () {
        var Consumption_LineId = $("#Consumption_Line_ID").val();

        $('Consumption_Station_ID').html("");
        if (Consumption_LineId.length > 0) {

            $.getJSON('/Partgroup/GetConsumption_Station', { Consumption_LineId: Consumption_LineId }, function (data) {
                if (data.length > 0) {
                    $('#Consumption_Station_ID option').remove();
                    $('#Consumption_Station_ID').append('<option value=""></option>');

                    for (i = 0; i < data.length; i++) {

                        $('#Consumption_Station_ID').append('<option value="' +
                  data[i].Station_ID + '">' + data[i].Station_Name + '</option>');
                    }
                } else {
                }
            }).fail(function (jqXHR, textStatus, errorThrown) {
            });
        }
    });


    //Line JavaScript
    $("#Shop_ID").on("change", function () {
        var Shop = $("#Shop_ID").val();
        $('Line_ID').html("");

        if (Shop.length > 0) {

            // Populate categories when the page is loaded.
            $.getJSON('/Partgroup/GetLineID', { Shopid: Shop }, function (data) {
                if (data.length > 0) {
                    // Ajax success callback function.
                    // Populate dropdown from Json data returned from server.
                    //Added by ketan Date28-07
                    //To show serial Number Configaration when shop change
                    //GetSerialConfiguration();
                    $('#Line_ID option').remove();
                    //$("#Line_ID").val(null).trigger("change");
                    $('#Line_ID').append('<option value=""></option>');

                    for (i = 0; i < data.length; i++) {
                        $('#Line_ID').append('<option value="' +
                  data[i].Line_ID + '">' + data[i].Line_Name + '</option>');
                    }
                } else {
                    $('#Line_ID option').remove();
                    alert("No Line Available for this Plant or Shop!");
                }
            }).fail(function (jqXHR, textStatus, errorThrown) {
                // Ajax fail callback function.
                alert('Error getting Line Selection !');
            });


            //Consumption LineId
            $.getJSON('/Partgroup/GetLineID', { Shopid: Shop }, function (data) {
                if (data.length > 0) {
                    $('#Consumption_Line_ID option').remove();
                    $('#Consumption_Line_ID').append('<option value=""></option>');

                    for (i = 0; i < data.length; i++) {

                        $('#Consumption_Line_ID').append('<option value="' +
                  data[i].Line_ID + '">' + data[i].Line_Name + '</option>');
                    }
                } else {
                }
            }).fail(function (jqXHR, textStatus, errorThrown) {
            });

        }
        else {
            $("#Line_ID").val(null).trigger("change");
            $('#Line_ID option').remove();
            document.getElementById("Order_Create").checked = false;
            document.getElementById("serial").style.display = "none"
            document.getElementById("Cons_PartGroupCode").style.display = "block"
            document.getElementById("Cons_LineId").style.display = "block"
            document.getElementById("Cons_ShopId").style.display = "block"
            $('#kitting_section').attr("style", " display:block");
            $('#btnSave').attr('disabled', false);
        }
    });


    $("#Line_ID").on("change", function () {
        var line = $("#Line_ID").val();
        $('Station_ID').html("");

        if (line.length > 0) {

            // Populate categories when the page is loaded.
            $.getJSON('/Partgroup/GetStationID', { Lineid: line }, function (data) {
                if (data.length > 0) {
                   
                    $('#Station_ID option').remove();
                    $("#Station_ID").val(null).trigger("change");
                    $('#Station_ID').append('<option value=""></option>');

                    for (i = 0; i < data.length; i++) {
                        $('#Station_ID').append('<option value="' +
                  data[i].Station_ID + '">' + data[i].Station_Name + '</option>');
                    }
                } else {
                    $('#Station_ID option').remove();
                    alert("No Station Available for this line!");
                }
            }).fail(function (jqXHR, textStatus, errorThrown) {
                // Ajax fail callback function.
                alert('Error getting station Selection !');
            });
        }
        else {
            $("#Station_ID").val(null).trigger("change");
            $('#Station_ID option').remove();
        }
    });


    $("#Is_Kitting").on("change", function () {

        var checkedValue = document.getElementById("Is_Kitting").checked;
        if (checkedValue == true) {
            var Shop = $("#Shop_ID").val();
            $('Kitting_Release_Line_ID').html("");
            $('#KittingSection').attr("style", " display:block")
            if (Shop.length > 0) {

                // Populate categories when the page is loaded.
                $.getJSON('/Partgroup/GetLineID', { Shopid: Shop }, function (data) {
                    if (data.length > 0) {
                        // Ajax success callback function.
                        // Populate dropdown from Json data returned from server.
                        $('#Kitting_Release_Line_ID option').remove();
                        $('#Kitting_Release_Line_ID').append('<option value=""></option>');

                        for (i = 0; i < data.length; i++) {
                            $('#Kitting_Release_Line_ID').append('<option value="' +
                      data[i].Line_ID + '">' + data[i].Line_Name + '</option>');
                        }
                    } else {
                        $('#Kitting_Release_Line_ID option').remove();
                        alert("No Line Available for this Plant or Shop!");
                    }
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    // Ajax fail callback function.
                    alert('Error getting Line Selection !');
                });
            }
        }
        else {
            $('#KittingSection').attr("style", " display:none")
        }
    });
    $("#Kitting_Release_Line_ID").on("change", function () {
        var LineID = $("#Kitting_Release_Line_ID").val();
        $('Kitting_Release_Station_ID').html("");
        if (LineID.length > 0) {

            // Populate categories when the page is loaded.
            $.getJSON('/Partgroup/GetStationID', { Lineid: LineID }, function (data) {
                if (data.length > 0) {
                    // Ajax success callback function.
                    // Populate dropdown from Json data returned from server.
                    $('#Kitting_Release_Station_ID option').remove();
                    $('#Kitting_Release_Station_ID').append('<option value=""></option>');

                    for (i = 0; i < data.length; i++) {
                        $('#Kitting_Release_Station_ID').append('<option value="' +
                  data[i].Station_ID + '">' + data[i].Station_Name + '</option>');

                    }
                } else {
                    $('#Kitting_Release_Station_ID option').remove();
                    alert("No Station Available for this Plant or Shop!");
                }
            }).fail(function (jqXHR, textStatus, errorThrown) {
                // Ajax fail callback function.
                alert('Error getting station List Selection !');
            });
        }
    });

    $("#btnSave").click(function () {
        $.validator.addMethod('requiredif',
    function (value, element, parameters) {
        var id = '#' + parameters['dependentproperty'];

        // get the target value (as a string,
        // as that's what actual value will be)
        var targetvalue = parameters['targetvalue'];
        targetvalue =
          (targetvalue == null ? '' : targetvalue).toString();

        // get the actual value of the target control
        // note - this probably needs to cater for more
        // control types, e.g. radios
        var control = $(id);
        var controltype = control.attr('type');
        var actualvalue =
            controltype === 'checkbox' ?
            control.attr('checked').toString() :
            control.val();

        // if the condition is true, reuse the existing
        // required field validator functionality
        if (targetvalue === actualvalue)
            return $.validator.methods.required.call(
              this, value, element, parameters);

        return true;
    }
);

    });

</script>
@section Styles {

    @Styles.Render("~/Content/Select2styles")
}