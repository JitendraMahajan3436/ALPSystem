@model REIN_MES_System.Models.RS_OM_Platform
@using REIN_MES_System.App_LocalResources;

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/admin/_Layout.cshtml";
}
<style type="text/css">
    .upperCase {
        text-transform: uppercase;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.Hidden("Select_Line", ResourceDisplayName.select_Line);

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="alert  alert-info alert-dismissable" style="display:none;">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                <h4><i class="icon fa  fa-check"></i></h4>

            </div>
            <div class="col-md-3" style="display:none;">
                @Html.LabelFor(model => model.Plant_ID, ResourceDisplayName.Plant_Name, htmlAttributes: new { @class = "" })<i style="color:red">*</i>

                @Html.DropDownListFor(model => model.Plant_ID, (SelectList)ViewBag.Plant_ID, null, new { @class = "form-control", @readonly = "true" })
                @Html.ValidationMessageFor(model => model.Plant_ID, null, new { @class = "validation_error" })

            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Shop_ID, ResourceDisplayName.Shop_Name, htmlAttributes: new { @class = "" })<i style="color:red">*</i>

                @Html.DropDownListFor(model => model.Shop_ID, (SelectList)ViewBag.Shop_ID, ResourceDisplayName.Select_Shop, new { onchange = "", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Shop_ID, null, new { @class = "validation_error" })

            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Line_ID, ResourceDisplayName.Line_Name, htmlAttributes: new { @class = "" })<i style="color:red">*</i>

                @Html.DropDownListFor(model => model.Line_ID, Enumerable.Empty<SelectListItem>(), ResourceDisplayName.select_Line, new { onchange = "", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Line_ID, null, new { @class = "validation_error" })

            </div>
        </div>
        <br />
        <div class="row">

            <div class="col-md-3">
                @Html.LabelFor(model => model.Platform_Name, ResourceDisplayName.Platform_Name, htmlAttributes: new { @class = "" })<i style="color:red">*</i>
                @*@Html.TextBoxFor(model => model.Platform_Name, new { @class = "form-control" })*@
                @Html.TextBoxFor(model => model.Platform_Name, htmlAttributes: new { @class = "form-control", @maxlength = "50" })
                @Html.ValidationMessageFor(model => model.Platform_Name, null, new { @class = "validation_error" })

            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Serial_No_Code, ResourceDisplayName.Serial_No_Code, htmlAttributes: new { @class = "" })<i style="color:red">*</i>

                @Html.TextBoxFor(model => model.Serial_No_Code, new { onchange = "", @class = "form-control upperCase",@maxlength="1" })
                @Html.ValidationMessageFor(model => model.Serial_No_Code, null, new { @class = "validation_error" })

            </div>
        </div>
        <br />
    </div>
    <div class="row">
        <div class="col-md-5">
            <input type="submit" value="Save" class="btn btn-primary" />  @Html.ActionLink("Show All", "Index", null, new { @class = "btn btn-primary" })
        </div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/master_file")
    @Scripts.Render("~/bundles/Select2scripts")
    @Scripts.Render("~/bundles/Commonjs")
}
<script type="text/javascript">
    $("#Shop_ID").on("change", function () {
        var Shop = $("#Shop_ID").val();
        $('Line_ID').html("");
        if (Shop.length > 0) {

            // Populate categories when the page is loaded.
            $.getJSON('/Platform/GetLineID', { Shopid: Shop }, function (data) {
                if (data.length > 0) {
                    // Ajax success callback function.
                    // Populate dropdown from Json data returned from server.
                    $('#Shop_ID').removeClass('input-validation-error');
                    $('#Shop_ID').next().text('');
                    $('#Line_ID option').remove();
                    $('#Line_ID').append('<option value="">' + $('#Select_Line').val() + '</option>');


                    for (i = 0; i < data.length; i++) {
                        $('#Line_ID').append('<option value="' + data[i].Line_ID + '">' + data[i].Line_Name + '</option>');
                    }
                } else {
                    $('#Line_ID option').remove();
                    $('#Line_ID').append('<option value="">' + $('#Select_Line').val() + '</option>');
                    alert("No Line Available for this Plant or Shop!");
                }
            }).fail(function (jqXHR, textStatus, errorThrown) {
                // Ajax fail callback function.
                alert('Error getting Line Selection !');
            });
        }
        else {
            $('#Line_ID option').remove();
            $('#Line_ID').append('<option value="">' + $('#Select_Line').val() + '</option>');
        }
    });
</script>