@model REIN_MES_System.Models.RS_MT_Preventive_Maintenance

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/admin/_Layout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)  

    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.Machine_ID, "Machine Name *", htmlAttributes: new { @class = "" })
            @Html.DropDownListFor(model => model.Machine_ID, (IEnumerable<SelectListItem>)ViewBag.Machine_Name, "--Select Machine--", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Machine_ID, null, new { @class = "validation_error" })
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.EQP_ID, "Machine Part *", htmlAttributes: new { @class = "" })
            @Html.DropDownListFor(model => model.EQP_ID,Enumerable.Empty<SelectListItem>(), "--Select Part--", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EQP_ID, null, new { @class = "validation_error" })
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.Scheduled_Date, "Scheduled Date *", htmlAttributes: new { @class = "" })
            @Html.TextBoxFor(model => model.Scheduled_Date,"{0:yyyy/MM/dd}", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Scheduled_Date, null, new { @class = "validation_error" })
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.Cycle_Period, "Cycle(Months) *", htmlAttributes: new { @class = "" })
            @Html.TextBoxFor(model => model.Cycle_Period, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Cycle_Period, null, new { @class = "validation_error" })
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.users, "Maintenance User", htmlAttributes: new { @class = "" })
            @Html.DropDownListFor(model => model.users, (IEnumerable<SelectListItem>)ViewBag.Maintenance_User_ID, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.users, null, new { @class = "validation_error" })
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.mails, "Recipient Email", htmlAttributes: new { @class = "" })
            @Html.DropDownListFor(model => model.mails, (IEnumerable<SelectListItem>)ViewBag.Receipent_Email, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.mails, null, new { @class = "validation_error" })
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            <input type="submit" value="Save" class="btn btn-primary" /> @Html.ActionLink("Show All", "Index", null, new { @class = "btn btn-primary" })
        </div>
    </div>
}
<div id="dialog" title="Error"></div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/Select2scripts")
    <script src="~/Content/theme/plugins/jQueryUI/jquery-ui.min.js"></script>
    <link href="~/Content/theme/plugins/jQueryUI/jquery-ui.css" rel="stylesheet" />
    <link href="~/Content/theme/plugins/datepicker/datepicker3.css" rel="stylesheet" />
    <script src="~/Content/theme/plugins/datepicker/bootstrap-datepicker.js"></script>
    <script>
        $(document).ready(function () {


            $('#mails').keydown(function (e) {
                if (e.keyCode == 13) {
                    var t = $("#mails").select2('val');
                    valid(t);
                }
            });

            $("#mails").select2({
                allowClear: true,
                multiple: 'multiple',
                tags: true,
                placeholder: 'select an email',
                tokenSeparators: [',', ';']

            });

            $("#users").select2({
                allowClear: true,
                placeholder: 'select a user',
                multiple: 'multiple'
            });



            $('#Scheduled_Date').datepicker({
                format: 'yyyy/mm/dd'
            });

            $("#Machine_ID").on("change", function () {
                $("#EQP_ID").html("");
                //$("#Line_ID").html("");
                var Machine_ID = $('#Machine_ID').val();
                if (Machine_ID.length > 0) {
                    //  alert(Plant_ID);
                    $.getJSON('/PreventiveMaintenance/GetEquipmentByMachineID', { machineid: Machine_ID }, function (data) {
                        // alert(data);
                        if (data.length > 0) {
                            $('#EQP_ID option').remove();
                            $('#EQP_ID').append('<option value=""></option>');
                            for (var i = 0; i < data.length; i++) {
                                $('#EQP_ID').append('<option value="' +
                                           data[i].EQP_ID + '">' + data[i].Equipment_Name + '</option>');
                            }
                        }
                      
                    });
                }
            });

            $("#Machine_ID").on("change", function () {
                $("#Machine_Name").html("");
                // $("#Line_ID").html("");
                var Plant_ID = $('#Machine_ID').val();
                if (Plant_ID.length > 0) {
                    //alert(Plant_ID);
                    $.getJSON('/Equipment/GetMachineNameByMachineID', { machineid: Plant_ID }, function (data) {
                        //alert(data);
                        if (data.length > 0) {
                            for (var i = 0; i < data.length; i++) {
                                $('#Machine_Name').val(data[i].Machine_Name);
                            }
                            //$('#Machine_Name value').remove();
                            //$('#Machine_Name').append('<option value=""></option>');
                            //for (var i = 0; i < data.length; i++) {
                            //    $('#Machine_Name').append('<option value="' +
                            //               data[i].Shop_ID + '">' + data[i].Shop_Name + '</option>');
                            //}
                        }
                       
                    });
                }
            });
        });





        function valid(value) {
            if (value && value.length != 0) {
                var emailText = "";
                var isValidEmail = true;
                var isEmailLengthValid = true;
                for (var i in value) {
                    var email = value[i];
                    isValidEmail = validateEmail(email);
                    if (isValidEmail == false) {
                        break;
                    } else {
                        emailText = (i == 0) ? emailText : ", " + emailText;
                        if (emailText.length > 250) {
                            isEmailLengthNotValid = false;
                            break;
                        }
                    }
                    if (isValidEmail == false) {
                        return 'Enter a valid email Address';

                    } else if (isEmailLengthValid == false) {
                        return "Maximum 250 Character allowed";
                    }


                }
            }

        }

        function validateEmail(email) {
            var re = /^[_a-z0-9-]+(\.[_a-z0-9-]+)*@@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,4})$/;
            return re.text(re);
        }


    </script>
}
@section Styles {
    @Styles.Render("~/Content/Select2styles")
}