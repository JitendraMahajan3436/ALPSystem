

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Admin/_Layout.cshtml";
}
<link href="~/Content/theme/plugins/select2/select2.min.css" rel="stylesheet" />
<link href="~/Content/theme/plugins/timepicker1/timepickerCSS.css" rel="stylesheet" />

<style>

    .headingfont {
        font-size: 17px;
        margin-bottom: 0%
    }

    .headingsubfont {
        font-size: 13px;
        font-size: 13px;
        font-family: 'Times New Roman'
    }

    .pannelfont {
        font-size: 14px;
        height: 25px;
        text-align: center;
        background-color: black;
        color: white
    }

    .lebal-font {
        font-size: 12px;
    }

    .boxshadow {
        box-shadow: 0 1px 0px rgba(0,0,0,0.12), 2px 0px 1px rgba(66,59,59,0.24);
        border-radius: 7px;
        font-size: 12px;
        margin-top: 1%;
        /*height: 28px*/
    }

    .fixed_headertbody {
        /*display: block;*/
        overflow: auto;
        height: 200px;
        width: 100%;
    }

    .fixed_headerthead {
        /*display: block;*/
    }

    .fixedcellwidth {
        /*width: 5%;*/
        word-wrap: break-word;
        word-break: break-all;
    }
</style>

<div class="row">
    <input type="hidden" id="pieData" value="@ViewBag.pieData" />
    <input type="hidden" id="Shop_ID" value="@ViewBag.Shop_ID" />
    <div class="col-md-12 col-lg-12 col-sm-12">


        <div class="row">
            <div class="col-md-11 col-lg-11 col-md-11" style="padding:0px">

                <div class="col-md-3 col-lg-3 col-sm-3">
                    <div class="box-body" style="padding:0%">



                        <div class="panel">
                            <div class="pannelfont" style="height:44px">
                                <div>
                                    <b>Today's Data </b>
                                </div>
                                <div style="font-size:12px">
                                    @ViewBag.startt To @ViewBag.endt
                                </div>


                            </div>

                            <div class="table-responsive">
                                <table class="table table-bordered table-striped table-condensed datatable_completes">
                                    <thead>
                                        <tr>
                                            <th>

                                            </th>
                                            <th>

                                                Value
                                            </th>
                                            <th>
                                                Unit
                                            </th>

                                        </tr>
                                    </thead>
                                    <tbody>


                                        <tr>
                                            <td>@ViewBag.Generation </td>
                                            <td id="todayData">
                                                @ViewBag.TodayConsumption
                                            </td>

                                            <td> kWh</td>
                                        </tr>
                                        <tr id="TodaySpecfic">
                                            <td> Specfic Consumption</td>
                                            <td id="yesterdaycons">@ViewBag.TodaySpecificConsumption</td>
                                            <td>@ViewBag.specUnit</td>

                                        </tr>
                                        <tr id="TodayCount">
                                            <td> Production</td>
                                            <td id="todayPro">
                                                @ViewBag.TodayProduction
                                            </td>
                                            <td>
                                                veh
                                            </td>


                                        </tr>

                                    </tbody>
                                </table>
                            </div>

                        </div>

                    </div>
                </div>

                <div class="col-md-3 col-lg-3 col-sm-3">
                    <div class="box-body" style="padding:0%">



                        <div class="panel">
                            <div class="pannelfont" style="height:44px">
                                <div>
                                    <b>Yesterday's Data </b>
                                </div>
                                <div style="font-size:12px">
                                    @ViewBag.starty  To @ViewBag.endy
                                </div>


                            </div>

                            <div class="table-responsive">
                                <table class="table table-bordered table-striped table-condensed datatable_completes">
                                    <thead>
                                        <tr>
                                            <th>

                                            </th>
                                            <th>

                                                Value
                                            </th>
                                            <th>
                                                Unit
                                            </th>

                                        </tr>
                                    </thead>
                                    <tbody>

                                        <tr>
                                            <td>@ViewBag.Generation </td>
                                            <td id="yesterdayt">
                                                @ViewBag.yesturdayConsumption
                                            </td>

                                            <td>  kWh</td>
                                        </tr>
                                        <tr id="YesterdaySEC">
                                            <td> Specfic Consumption</td>
                                            <td id="yesterdaycons">@ViewBag.yesturdayspecificConsumption</td>
                                            <td>@ViewBag.specUnit</td>

                                        </tr>
                                        <tr id="YesterdayCount">
                                            <td> Production</td>
                                            <td id="yesterdayp">
                                                @ViewBag.yesturdayProduction
                                            </td>
                                            <td>
                                                veh
                                            </td>


                                        </tr>

                                    </tbody>
                                </table>
                            </div>

                        </div>

                    </div>
                </div>

                <div class="col-md-3 col-lg-3 col-sm-3">
                    <div class="box-body" style="padding:0%">



                        <div class="panel">
                            <div class="pannelfont" style="height:44px">
                                <div>
                                    <b>Last  week's Data </b>
                                </div>
                                <div style="font-size:12px">
                                    @ViewBag.startw  To @ViewBag.endw
                                </div>


                            </div>

                            <div class="table-responsive">
                                <table class="table table-bordered table-striped table-condensed datatable_completes">
                                    <thead>
                                        <tr>
                                            <th>

                                            </th>
                                            <th>

                                                Value
                                            </th>
                                            <th>
                                                Unit
                                            </th>

                                        </tr>
                                    </thead>
                                    <tbody>

                                        <tr>
                                            <td>@ViewBag.Generation </td>
                                            <td id="weekdata">
                                                @ViewBag.weekdata
                                            </td>

                                            <td>  kWh</td>
                                        </tr>
                                        <tr id="LastweekSEC">
                                            <td> Specfic Consumption</td>
                                            <td id="weekcons">@ViewBag.weekcons</td>
                                            <td>@ViewBag.specUnit</td>

                                        </tr>
                                        <tr id="LastweekCount">
                                            <td> Production</td>
                                            <td id="weekPro">
                                                @ViewBag.weekPro
                                            </td>
                                            <td>
                                                veh
                                            </td>


                                        </tr>

                                    </tbody>
                                </table>
                            </div>

                        </div>

                    </div>
                </div>

                <div class="col-md-3 col-lg-3 col-sm-3">
                    <div class="box-body" style="padding:0%">



                        <div class="panel">
                            <div class="pannelfont" style="height:44px">
                                <div>
                                    <b>Previous Month Data </b>
                                </div>
                                <div style="font-size:12px">
                                    @ViewBag.startm  To @ViewBag.endm
                                </div>

                            </div>


                            <div class="table-responsive">
                                <table class="table table-bordered table-striped table-condensed datatable_completes">
                                    <thead>
                                        <tr>
                                            <th>

                                            </th>
                                            <th>

                                                Value
                                            </th>
                                            <th>
                                                Unit
                                            </th>

                                        </tr>
                                    </thead>
                                    <tbody>

                                        <tr style="color:black;text-align:left">
                                            <td>@ViewBag.Generation </td>
                                            <td id="Monthdata">
                                                @ViewBag.Monthconsumption
                                            </td>

                                            <td> Kwh</td>
                                        </tr>
                                        <tr style="color:black;text-align:left" id="MonthSEC">
                                            <td> Specfic Consumption</td>
                                            <td id="Monthcons">@ViewBag.Monthlyspecificconsumption</td>
                                            <td>@ViewBag.specUnit</td>

                                        </tr>
                                        <tr style="color:black;text-align:left" id="MonthCount">
                                            <td> Production</td>
                                            <td id="MonthPro">
                                                @ViewBag.MonthlyProduction
                                            </td>
                                            <td>
                                                veh
                                            </td>


                                        </tr>

                                    </tbody>
                                </table>
                            </div>

                        </div>

                    </div>
                </div>

            </div>
            <div class="col-md-1 col-sm-1 col-lg-1" id="showbuttons">
                <div class="pull-right">


                    @*<a class="btn shopchartbtn" onclick="realtime(@ViewBag.ShopID)" style="background-color: #007bb6; color:white;margin-top: 0%;font-size: 12px; height: 28px">Trend</a>*@

                    <a class="btn shopchartbtn" href="/HomeEnergy/Index" style="background-color: #007bb6;color:white;margin-top: 0%;font-size: 12px; height: 28px">Home</a>
                </div>
            </div>
        </div>
    </div>
</div>

<br />


<div class="row">
    <div class="col-md-12 col-sm-12 col-lg-12" style="margin-top:-3%;padding:0px">
        <div class="box-body">
            <div class="col-lg-12 col-md-12 col-sm-12">
                <div class="col-md-3 col-lg-3 col-sm-3">
                    <div class="col-md-6 col-lg-6 col-sm-6">
                        <div class="form-group">
                            <label class="lebal-font">Parameter</label>
                            @*@Html.DropDownList("Type", new SelectList(new List<object> { new { value = true, text = "KWH" }, new { value = false, text = "KVAH" } }, "value", "text", true), new { @class = "form-control select2" })*@
                            @Html.DropDownList("Type", null, htmlAttributes: new { @class = "form-control", @style = "max-width:100%", })
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-6 col-sm-6">
                        <div class="form-group">
                            <label class="lebal-font">Date Range</label>
                            @Html.DropDownList("ddlDateRange", null, htmlAttributes: new { @class = "form-control select2", @style = "max-width:100%" })
                            <span class="error" id="ddlDateRangeId" style="color:red;display:none">Date Range field is required</span>
                        </div>
                    </div>

                </div>

                <div class="col-md-4 col-lg-4 col-sm-4" style="margin-left:-2%">
                    <div class="col-md-6 col-lg-6 col-sm-6">
                        <div class="form-group">
                            <label class="lebal-font"> From Date</label>
                            @Html.TextBox("StartDate", null, new { @class = "startdate form-control example1", @style = "max-width:100%", ReadOnly = "true", disabled = "false", @autocomplete = "off" })
                            <span class="error" id="StartDateId" style="color:red;display:none">From Date field is required</span>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-6 col-sm-6">
                        <div class="form-group">
                            <label class="lebal-font">To Date</label>
                            @Html.TextBox("EndDate", null, new { @class = "enddate form-control example1", @style = "max-width:100%", ReadOnly = "true", disabled = "false", @autocomplete = "off" })
                            <span class="error" id="EndDateId" style="color:red;display:none">To Date field is required</span>
                        </div>
                    </div>
                </div>


                <div class="col-md-5 col-lg-5 col-sm-5" style="margin-left:-2%">
                    <div class="col-md-3 col-lg-3 col-sm-3" style="margin-left:0%">
                        <div class="form-group">
                            <label class="lebal-font">Shift</label>
                            @Html.DropDownList("Shiftwise", null, "ALL", htmlAttributes: new { @class = "form-control", @style = "max-width:100%", })
                            <span class="error" id="EndDateId" style="color:red;display:none">To Date field is required</span>
                        </div>
                    </div>
                    <div class="col-md-3 col-lg-3 col-sm-3" style="margin-left:0%;display:none" id="NOWorkingDay">
                        <div class="form-group">
                            <label class="lebal-font">No Working Day</label>
                            @Html.DropDownList("Reason_ID", null, "ALL", htmlAttributes: new { @class = "form-control", @style = "max-width:100%", })
                            <span class="error" id="EndDateId" style="color:red;display:none">To Date field is required</span>
                        </div>
                    </div>
                    <div class="col-md-3 col-lg-3 col-sm-3" style="display:none;" id="Minutes">
                        <div class="form-group">
                            <label class="lebal-font">Grain</label>
                            @Html.DropDownList("MinuteRange", null, htmlAttributes: new { @class = "form-control", @style = "max-width:100%", })
                            <span class="error" id="EndDateId" style="color:red;display:none">To Date field is required</span>
                        </div>
                    </div>
                    <div class="col-md-2 col-lg-2 col-sm-2" style="margin-top:23px;">
                        <div class="form-group">


                            <input type="submit" value="Submit" id="btnSubmit" class="btn btn-primary  generate" />



                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-12 col-md-12 col-sm-12">

                <div class="col-lg-8 col-sm-8 col-md-8" id="shopGrpah">
                    <div class="nav-tabs-custom">
                        <ul class="nav nav-tabs" style="background-color:white">
                            <li id="Shoptab" class="active"><a href="" class="machine-tab graph-initialised" data-target-tab="" data-toggle="tab" data-machineid="">Shop Consumption</a></li>
                            <li id="ForeCasttab"><a href="" class="machine-tab graph-initialised" data-target-tab="" data-toggle="tab" data-machineid="">Monthly Forecast</a></li>
                            @*<li id="TODtab"><a href="" class="machine-tab graph-initialised" data-target-tab="" data-toggle="tab" data-machineid="">TOD Analysis</a></li>
                                <li id="Performancetab"><a href="" class="machine-tab graph-initialised" data-target-tab="" data-toggle="tab" data-machineid="">Performance Indices</a></li>*@
                        </ul>
                        <div class="tab-content" id="Normal">
                            <div>
                                <span id="fromdate"> @ViewBag.fromdate</span> To <span id="todate"> @ViewBag.todate</span>
                                <button id="btnshoplabel" class="boxshadow">data label </button>

                            </div>
                            <div id="shopcontainer" style="height:350px">

                            </div>
                        </div>
                        <div class="tab-content" id="ForeCast">

                            <div class="col-md-12 col-lg-12 col-sm-12" style="padding:0px">


                                <div id="ShopForeCast" class="ShopForeCast" style="width:100%">

                                </div>
                            </div>
                        </div>

                    </div>


                </div>

                <div class="col-lg-4 col-sm-4 col-md-4" id="feedergraph" style="padding:0px;height:350px">
                    <div class="box-body">

                        <div class="pannelfont">
                            <b>Feeder Consumption </b>

                        </div>


                        <button class="boxshadow btn btn-success" id="btnSummary" value="Summarywise">Summary</button>
                        <button class="boxshadow btn btn-default" id="btnAreaChart" value="Areawise">Area</button>
                        <button class="boxshadow btn btn-default" id="btnPiechart" value="Feederwise"> Feeder </button>
                        <button class="boxshadow btn btn-default" id="btnBarChart" value="Pareto">Pareto</button>
                        <button class="boxshadow btn btn-default" id="btnCategoryChart" value="Categorywise">Category</button>
                        <br />

                        <div id="Shop_Summary" style="padding:0px;margin-top:1%">
                            <div class="box-body" style="padding:0%">



                                <div class="panel">

                                    <div class="table-responsive">
                                        <table class="table table-bordered table-striped table-condensed datatable_completes">

                                            <tr>
                                                <td>
                                                    Total Consumption:
                                                </td>
                                                <td colspan="3" id="tbl_total">@ViewBag.totalconsume</td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    Daily Avg. Consumption:
                                                </td>
                                                <td colspan="3" id="tbl_totalavg">@ViewBag.totalavg</td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    Total Production:
                                                </td>
                                                <td colspan="3" id="tbl_totalpro">@ViewBag.totalprod</td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    Avg. SEC:
                                                </td>

                                                <td colspan="3" id="tbl_totalAvgsec">@ViewBag.totalavgsec</td>
                                            </tr>

                                            <tr>
                                                <td>
                                                    Best Consumption:
                                                </td>
                                                <td id="tbl_best">@ViewBag.best</td>
                                                <td>Achieved on :</td>
                                                <td id="tbl_bestdate">@ViewBag.bestdate</td>

                                            </tr>
                                            <tr>
                                                <td>
                                                    Total Power on Best day
                                                </td>
                                                <td id="tbl_bestpower">@ViewBag.bestpower</td>
                                                <td>Production on Best Day</td>
                                                <td id="tbl_bestpro">@ViewBag.bestprod</td>

                                            </tr>
                                            <tr>
                                                <td>
                                                    Max Consumption:
                                                </td>
                                                <td id="tbl_max">@ViewBag.maxpower</td>
                                                <td>Consumed on:</td>
                                                <td id="tbl_maxdate">@ViewBag.maxdate</td>

                                            </tr>
                                        </table>
                                    </div>

                                </div>

                            </div>
                        </div>


                        <div id="containerArea" style="display:none;">


                            <div class="col-md-6" id="InAreaChart" style="padding:0px">

                            </div>
                            <div class="col-md-6" style="padding:0px">
                                <br />
                                <div class="box-body" style="padding:0px">
                                    <div class="pannelfont">
                                        <b>Area Consumption</b>
                                        <button style="color:black" data-target="#AreawiseTrend_model" data-toggle="modal" title="Areawise Trend" onclick="AreawiseTrend()"><i class="fa fa-camera"></i> </button>
                                    </div>
                                    <div class="table-responsive" style="height:300px">
                                        <table class="table table-striped table-condensed datatable_completes" id="InAreatbl">
                                            <thead class="fixed_headerthead">
                                                <tr>
                                                    <th style="width:50%; WORD-BREAK: break-word">
                                                        Name
                                                    </th>
                                                    <th style="width:50%">
                                                        Consumption
                                                    </th>


                                                </tr>
                                            </thead>
                                            <tbody class="fixed_headertbody">
                                                @if (ViewData["AreaINData"] as IList<REIN_MES_System.Models.Areachart> != null)
                                                {
                                                    double Total = 0.0;
                                                    foreach (var item in ViewData["AreaINData"] as IList<REIN_MES_System.Models.Areachart>)
                                                    {
                                                        Total = Convert.ToDouble(Total + item.Y);
                                                        <tr>

                                                            @if (item.AreaId == 0)
                                                            {
                                                                <td style="width:50%; WORD-BREAK: break-word">


                                                                    @item.Label
                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                <td style="width:50%; WORD-BREAK: break-word">


                                                                    <button class="boxshadow" onclick="SubArea(@item.AreaId)" data-target="#Areawisefeeder" data-toggle="modal">@item.Label</button>
                                                                </td>
                                                            }

                                                            <td style="width:50%; WORD-BREAK: break-word">
                                                                <b>@item.Y</b>
                                                            </td>

                                                        </tr>
                                                    }
                                                    <tr>
                                                        <td style="width:50%; WORD-BREAK: break-word">Area wise Total  </td>
                                                        <td style="width:50%; WORD-BREAK: break-word"><b>@Total</b></td>
                                                    </tr>
                                                }
                                                else

                                                {
                                                    <h3>no data available</h3>
                                                }

                                            </tbody>
                                        </table>
                                    </div>

                                </div>
                            </div>




                        </div>




                        <div id="feederwisegraph">




                            <input type="radio" name="rdoFeederGraph" value="1" checked />Add Feeders
                            <input type="radio" name="rdoFeederGraph" value="0" />Sub Feeders

                            <div id="addFeeders" style="display:block">
                                <div class="col-md-6" id="addFeederpiechart" style="padding:0px">

                                </div>
                                <div class="col-md-6" style="padding:0px">
                                    <br />

                                    <div class="col-md-12 col-sm-12 col-lg-12" style="padding:0px">


                                        <div class="box-body" style="padding:0px">
                                            <div class="table-responsive" id="feederwiseConsumptiontbl" style="height:300px">
                                                <table class="table table-striped table-condensed datatable_completes">
                                                    <thead class="fixed_headerthead">
                                                        <tr>
                                                            <th style="width:50%">
                                                                Name
                                                            </th>
                                                            <th style="width:50%">
                                                                Consumption
                                                            </th>


                                                        </tr>
                                                    </thead>
                                                    <tbody class="fixed_headertbody" id="">
                                                        @if (ViewData["feederData1"] as IList<REIN_MES_System.Models.Barchart> != null)
                                                        {
                                                            double Total = 0.0;
                                                            foreach (var item in ViewData["feederData1"] as IList<REIN_MES_System.Models.Barchart>)
                                                            {

                                                                if (item.status == 1)
                                                                {
                                                                    Total = Convert.ToDouble(Total + item.Y);
                                                                }
                                                                <tr>
                                                                    <td style="width:50%; WORD-BREAK:break-word">
                                                                        @item.Label
                                                                    </td>
                                                                    <td style="width:50%; WORD-BREAK: break-word">
                                                                        <b>@item.Y</b>
                                                                    </td>

                                                                </tr>
                                                            }
                                                            <tr>
                                                                <td style="width:50%; WORD-BREAK: break-word">
                                                                    Total
                                                                </td>
                                                                <td style="width:50%; WORD-BREAK: break-word">
                                                                    <b>@Total</b>
                                                                </td>
                                                            </tr>
                                                        }

                                                    </tbody>
                                                </table>
                                            </div>

                                        </div>


                                    </div>
                                </div>
                            </div>
                            <div id="SubFeeders" style="display:block">
                                <div class="col-md-6" id="SubFeederspichart" style="padding:0px">

                                </div>
                                <div class="col-md-6" style="padding:0px">
                                    <br />

                                    <div class="col-md-12 col-sm-12 col-lg-12" style="padding:0px">


                                        <div class="box-body" style="padding:0px">
                                            <div class="table-responsive" id="subfeederwiseConsumptiontbl" style="height:300px">
                                                <table class="table table-striped table-condensed datatable_completes">
                                                    <thead class="fixed_headerthead">
                                                        <tr>
                                                            <th style="width:50%; WORD-BREAK: break-word">
                                                                Name
                                                            </th>
                                                            <th style="width:50%">
                                                                Consumption
                                                            </th>


                                                        </tr>
                                                    </thead>
                                                    <tbody class="fixed_headertbody" id="">
                                                        @if (ViewData["SubFeederData"] as IList<REIN_MES_System.Models.Barchart> != null)
                                                        {
                                                            double Total = 0.0;
                                                            foreach (var item in ViewData["SubFeederData"] as IList<REIN_MES_System.Models.Barchart>)
                                                            {

                                                                if (item.status == 1)
                                                                {
                                                                    Total = Convert.ToDouble(Total + item.Y);
                                                                }
                                                                <tr>
                                                                    <td style="width:50%; WORD-BREAK: break-word">
                                                                        @item.Label
                                                                    </td>
                                                                    <td style="width:50%; WORD-BREAK: break-word">
                                                                        <b>@item.Y</b>
                                                                    </td>

                                                                </tr>
                                                            }
                                                            <tr>
                                                                @*<td style="width:70%; WORD-BREAK: break-word">
                                                                        Total
                                                                    </td>
                                                                    <td style="width:50%">
                                                                        <b>@Total</b>
                                                                    </td>*@
                                                            </tr>
                                                        }

                                                    </tbody>
                                                </table>
                                            </div>

                                        </div>


                                    </div>
                                </div>
                            </div>


                        </div>


                        <div id="INfeederwisegraph" style="display:none;">
                            <input type="radio" name="INrdoFeederGraph" value="1" checked />Add Feeders
                            <input type="radio" name="INrdoFeederGraph" value="0" />Sub Feeders

                            <div id="INaddFeeders" style="display:block">
                                <div class="col-md-6" id="INaddFeederpiechart" style="padding:0px">

                                </div>
                                <div class="col-md-6" style="padding:0px">
                                    <br />

                                    <div class="col-md-12 col-sm-12 col-lg-12" style="padding:0px">


                                        <div class="box-body" style="padding:0px">
                                            <div class="table-responsive" id="INfeederwiseConsumptiontbl" style="height:300px">
                                                <table class="table table-striped table-condensed datatable_completes">
                                                    <thead class="fixed_headerthead">
                                                        <tr>
                                                            <th style="width:50%">
                                                                Name
                                                            </th>
                                                            <th style="width:50%">
                                                                Consumption
                                                            </th>


                                                        </tr>
                                                    </thead>
                                                    <tbody class="fixed_headertbody" id="">
                                                        @if (ViewData["feederData1"] as IList<REIN_MES_System.Models.Barchart> != null)
                                                        {
                                                            double Total = 0.0;
                                                            foreach (var item in ViewData["feederData1"] as IList<REIN_MES_System.Models.Barchart>)
                                                            {

                                                                if (item.status == 1)
                                                                {
                                                                    Total = Convert.ToDouble(Total + item.Y);
                                                                }
                                                                <tr>
                                                                    <td style="width:50%; WORD-BREAK: break-word">
                                                                        @item.Label
                                                                    </td>
                                                                    <td style="width:50%; WORD-BREAK: break-word">
                                                                        <b>@item.Y</b>
                                                                    </td>

                                                                </tr>
                                                            }
                                                            <tr>
                                                                <td style="width:50%; WORD-BREAK: break-word">
                                                                    Total
                                                                </td>
                                                                <td style="width:50%; WORD-BREAK: break-word">
                                                                    <b>@Total</b>
                                                                </td>
                                                            </tr>
                                                        }

                                                    </tbody>
                                                </table>
                                            </div>

                                        </div>


                                    </div>
                                </div>
                            </div>

                            <div id="INSubFeeders" style="display:block">
                                <div class="col-md-6" id="INSubFeederspichart" style="padding:0px">

                                </div>
                                <div class="col-md-6" style="padding:0px">
                                    <br />

                                    <div class="col-md-12 col-sm-12 col-lg-12" style="padding:0px">


                                        <div class="box-body" style="padding:0px">
                                            <div class="table-responsive" id="INsubfeederwiseConsumptiontbl" style="height:300px">
                                                <table class="table table-striped table-condensed datatable_completes">
                                                    <thead class="fixed_headerthead">
                                                        <tr>
                                                            <th style="width:50%; WORD-BREAK: break-word">
                                                                Name
                                                            </th>
                                                            <th style="width:50%">
                                                                Consumption
                                                            </th>


                                                        </tr>
                                                    </thead>
                                                    <tbody class="fixed_headertbody" id="">
                                                        @if (ViewData["SubFeederData"] as IList<REIN_MES_System.Models.Barchart> != null)
                                                        {
                                                            double Total = 0.0;
                                                            foreach (var item in ViewData["SubFeederData"] as IList<REIN_MES_System.Models.Barchart>)
                                                            {

                                                                if (item.status == 1)
                                                                {
                                                                    Total = Convert.ToDouble(Total + item.Y);
                                                                }
                                                                <tr>
                                                                    <td style="width:50%; WORD-BREAK: break-word">
                                                                        @item.Label
                                                                    </td>
                                                                    <td style="width:50%; WORD-BREAK: break-word">
                                                                        <b>@item.Y</b>
                                                                    </td>

                                                                </tr>
                                                            }
                                                            <tr>
                                                                @*<td style="width:70%; WORD-BREAK: break-word">
                                                                        Total
                                                                    </td>
                                                                    <td style="width:50%">
                                                                        <b>@Total</b>
                                                                    </td>*@
                                                            </tr>
                                                        }

                                                    </tbody>
                                                </table>
                                            </div>

                                        </div>


                                    </div>
                                </div>
                            </div>

                        </div>

                        <div id="containerLine" style="height:300px" ; class="img-responsive">

                        </div>

                        <div id="containerCategory">

                            <div class="col-md-6 img-responsive" id="containerCategory1" style="z-index:unset">

                            </div>
                            <div class="col-md-6" style="padding:0px">
                                <br />
                                <div class="box-body" style="padding:0px">
                                    <div class="pannelfont">
                                        <b>Rated Load %</b>
                                    </div>
                                    <div class="table-responsive" style="height:300px" id="CategoryRatedLoadtbl">
                                        <table class="table table-striped table-condensed datatable_completes">
                                            <thead class="fixed_headerthead">
                                                <tr>
                                                    <th style="width:87.5%; WORD-BREAK: break-word">
                                                        Name
                                                    </th>
                                                    <th>
                                                        %
                                                    </th>


                                                </tr>
                                            </thead>
                                            <tbody class="fixed_headertbody">
                                                @if (ViewData["CategoryRatedLoad"] as IList<REIN_MES_System.Models.Barchart> != null)
                                                {
                                                    foreach (var item in ViewData["CategoryRatedLoad"] as IList<REIN_MES_System.Models.Barchart>)
                                                    {
                                                        <tr>
                                                            <td style="width:50%; WORD-BREAK: break-word">
                                                                @item.Label
                                                            </td>
                                                            <td style="width:50%; WORD-BREAK: break-word">
                                                                <b>@item.Y</b>
                                                            </td>

                                                        </tr>
                                                    }
                                                }
                                                else

                                                {
                                                    <h3>no data available</h3>
                                                }

                                            </tbody>
                                        </table>
                                    </div>

                                </div>
                            </div>
                        </div>



                    </div>
                </div>

                <div id="loading" class="highcharts-loading" style="display:none">
                    <div class="center-block">
                        <img src="/content/images/loader/gears.gif" style="height:200px;margin: 0 0 0 40%;">
                    </div>
                </div>

            </div>

        </div>
    </div>




</div>


<div class="row">
    <div class="col-lg-12 col-sm-12 col-md-12">
        <div class="box-body" style="padding:0px">
            <div class="col-lg-12 col-sm-12 col-md-12" style="padding:0px">
                <div class="panel">


                    <div class="pannelfont" style="height:27px;text-align:left">
                        <b style="text-align:left">Feeder  Live Reading </b>
                        <div style="float:right">

                            <button data-target="#ShopwiseHistory" data-toggle="modal" onclick="ShopwiseReport()" style="color:black" title="All feeders parameter log"><i class="fa fa-download" aria-hidden="true"></i></button>
                            <button style="color:black" onclick="ShopwiseLiveReport()" title="Feeder live values reports"><i class="fa fa-camera"></i> </button>
                            <button style="color:black" data-target="#feederComparisonTrend" data-toggle="modal" title="Comparison Trend" onclick="Trend()"><i class="fa fa-line-chart"></i> </button>
                            <button data-target="#feederMailalert" data-toggle="modal" value="alert" onclick="Mailalert()" title="Alerts" style="color:black"><i class="fa fa-bell"></i></button>
                        </div>


                    </div>
                </div>
                <div style="height:320px;margin-top:-1%">
                    <div class="table-responsive" style="height:300px">
                        <table class="table table-striped table-condensed datatable_completes table-bordered" style="max-width:100%;padding:0px">
                            <thead class="fixed_headerthead">
                                <tr>
                                    <th style="text-align:left;word-break:break-word" rowspan="2" class="fixedcellwidth">
                                        Feeder Name
                                    </th>
                                    @if (ViewBag.Parameter != null)
                                    {

                                        foreach (var ParameterObj in ViewBag.Parameterlist)
                                        {
                                            foreach (var Paradesc in ViewBag.Parameterdesc)
                                            {
                                                string subName = Paradesc.Name;
                                                if (ParameterObj == subName)
                                                {
                                                    if (Paradesc.Subcount > 1)
                                                    {
                                                        <th colspan="@Paradesc.Subcount" style="text-align:center;word-break:break-all">@ParameterObj</th>
                                                    }
                                                    else
                                                    {
                                                        <th rowspan="2" style="text-align:center;" class="fixedcellwidth">@ParameterObj</th>
                                                    }
                                                }
                                            }
                                        }

                                    }
                                    <th style="text-align:center;" rowspan="2" class="fixedcellwidth">
                                        Last Update
                                    </th>
                                    <th style="text-align:center;word-break:break-all;width:6%" rowspan="2">
                                        Action
                                    </th>
                                    @*<th style="text-align:left;word-break:break-all;width:6.2%" rowspan="2" >
                                            Alert
                                        </th>*@
                                </tr>
                                <tr>
                                    @foreach (var sub in ViewBag.SubParameter)
                                    {
                                        <th class="fixedcellwidth" style="word-break:break-all">@sub</th>
                                    }
                                </tr>
                            </thead>
                            <tbody class="fixed_headertbody">
                                @if (ViewBag.FeederList != null)
                                {

                                    var shop_ID = ViewBag.Shop_ID;
                                    int Paracount = ViewBag.Paracount;

                                    foreach (var item in ViewBag.FeederName)
                                    {
                                        //int i = 0;
                                        string date = System.DateTime.Now.ToString("dd MMM hh:mm tt");
                                        <tr style="WORD-BREAK: break-word; text-align:center">

                                            <td class="fixedcellwidth">
                                                @item.FeederName
                                            </td>


                                            @foreach (var subParamter in ViewBag.Parameterlist)
                                            {


                                                foreach (var ParameterObj in ViewBag.Parameter)
                                                {
                                                    if (subParamter == ParameterObj.Description)
                                                    {



                                                        int i = 0;
                                                        foreach (var FeederListObj in ViewBag.FeederList)
                                                        {


                                                            if (ParameterObj.Prameter_ID == FeederListObj.Prameter_ID && item.FeederName == FeederListObj.FeederName)
                                                            {
                                                                <td id="@FeederListObj.FeederIndex" class="fixedcellwidth"> @FeederListObj.ParamterValue </td>

                                                                i++;
                                                                break;

                                                            }

                                                        }
                                                        if (i == 0)
                                                        {
                                                            <td id="" class="fixedcellwidth"> </td>
                                                        }
                                                    }
                                                }
                                            }
                                            @if (ViewBag.Feederdate != null)
                                            {
                                                int j = 0;
                                                foreach (var FeederdateObj in ViewBag.FeederList)
                                                {
                                                    if (item.Feeder_ID == FeederdateObj.Feeder_ID)
                                                    {
                                                        var date1 = Convert.ToDateTime(@FeederdateObj.Dateandtime).ToString("dd MMM hh: mm tt");
                                                        <td id="idate_@item.Feeder_ID" style="text-align:left" class="fixedcellwidth">@date1 </td>

                                                        j++;
                                                        break;

                                                    }
                                                }
                                                if (j == 0)
                                                {
                                                    <td id="" class="fixedcellwidth"> </td>
                                                }
                                            }
                                            else
                                            {
                                                <td style="text-align:left" class="fixedcellwidth"> </td>
                                            }
                                            @*<td id="idate_@item.Feeder_ID" style="text-align:left" class="fixedcellwidth">@date </td>*@
                                            <td id="" style="text-align:left" class="fixedcellwidth">
                                                <button data-target="#feederwiseHistory" data-toggle="modal" value="@item.Feeder_ID" onclick="FeederReport(@item.Feeder_ID)" title="All parameter log"><i class="fa fa-download" aria-hidden="true"></i></button>
                                                <button data-target="#feederwiseTrend" data-toggle="modal" value="@item.Feeder_ID" onclick="FeederTrend(@item.Feeder_ID)" title="Show trend"><i class="fa fa-line-chart"></i></button>
                                                @*<button><i class="fa fa-line-chart" aria-hidden="true" value="@item.Feeder_ID"></i></button>*@
                                            </td>
                                            @*@if (ViewBag.mailstatus != null)
                                                {

                                                    foreach (var alert in ViewBag.mailstatus)
                                                    {

                                                        if (alert == item.Feeder_ID)
                                                        {
                                                         <td style="text-align:left;width:3%" >

                                                             <button data-target="#feederMailalert" data-toggle="modal" value="alert" onclick="Mailalert(@alert)" title="mail alert"><i class="fa fa-bell blinker"></i></button>
                                                         </td>

                                                        }


                                                    }

                                                }
                                                else
                                                {
                                                    <td></td>
                                                }*@

                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="feederwiseHistory" tabindex="-1" role="dialog" arssia-labelledby="feederwiseHistory">
    <div class="modal-dialog modal-md" role="document" style="width:60%">
        >
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title text-center" id="MinorStoppagesModal" style="margin-top: -2%; margin-bottom: -2%;height: 26px;font-family:'Times New Roman', Times, serif">Feeder Deatil Report</h4>
            </div>

            <div class="row">
                <div class="col-md-3 col-sm-3 col-lg-3">

                    <div class="form-group">
                        <label> From Date</label>
                        @Html.TextBox("FromDate", null, new { @class = "fromDate1 form-control fromdate1", @style = "max-width:100%", @autocomplete = "off" })
                        <span class="error" id="StartDateId" style="color:red; display:none">Date field is required</span>
                    </div>
                </div>
                <div class="col-md-3 col-sm-3 col-lg-3">
                    <div class="form-group">
                        <label>To Date</label>
                        @Html.TextBox("ToDate", null, new { @class = "ToDate1 form-control todate1", @style = "max-width:100%", @autocomplete = "off" })
                        <span class="error" id="EndDateId" style="color:red; display:none">Date field is required</span>
                    </div>
                </div>
                <div class="col-md-2 col-sm-2 col-lg-">
                    <div class="form-group">
                        <label>Parameter</label>
                        @Html.DropDownList("ParameterID1", null, "ALL", new { @class = "form-control select2", @style = "max-width:100%" })
                        <span class="error" id="EndDateId" style="color:red; display:none">Date field is required</span>
                    </div>
                </div>
                <div class="col-md-4 col-sm-5 col-lg-4">

                    <div>
                        @Html.Hidden("Feeder_ID")
                        <input type="button" value="Submit" id="btnFeederdetails" class="btn btn-primary  generate" style="margin-top:25px;font-size:12px" />
                        <input type="button" value="Download" id="btnFeederReport" class="btn btn-primary  generate" style="margin-top:25px;font-size:12px" />
                    </div>

                </div>
            </div>
            <div class="modal-body no-padding table-responsive table table-bordered table-striped table-condensed datatable_completes" id="FeederwiseModalsdetail" style="height:300px">
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="feederwiseTrend" tabindex="-1" role="dialog" arssia-labelledby="feederwiseTrend">
    <div class="modal-dialog modal-md" role="document" style="width:80%">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <label class="modal-title text-center" id="MinorStoppagesModal" style="margin-top: -2%; margin-bottom: -2%;height: 26px;font-family:'Times New Roman', Times, serif">Feederwise Trend</label>
            </div>

            <div class="row">
                <div class="col-md-12 col-lg-12 col-sm-12" style="font-size:12px">



                    <div class="col-md-2 col-sm-2 col-lg-2">

                        <div class="form-group">
                            <label> Parameter</label>

                            @*@Html.DropDownList("Parameter_ID",  Enumerable.Empty<SelectListItem>(), htmlAttributes: new { @class = "form-control select2", @style = "max-width:100%" })*@

                            @Html.DropDownList("Parameter_ID", null, "Select Parameter", new { @class = "form-control select2", @style = "max-width:100%" })

                            @*<span class="error" id="StartDateId" style="color:red; display:none">Date field is required</span>*@
                        </div>
                    </div>
                    <div class="col-md-2 col-sm-2 col-lg-2">

                        <div class="form-group">
                            <label> From Date</label>
                            @Html.TextBox("FromDateTrend", null, new { @class = "fromDate1 form-control fromdate1", @style = "max-width:100%", @autocomplete = "off" })
                            <span class="error" id="StartDateId" style="color:red; display:none">Date field is required</span>
                        </div>
                    </div>
                    <div class="col-md-2 col-sm-2 col-lg-2">
                        <div class="form-group">
                            <label>To Date</label>
                            @Html.TextBox("ToDateTrend", null, new { @class = "ToDate1 form-control todate1", @style = "max-width:100%", @autocomplete = "off" })
                            <span class="error" id="EndDateId" style="color:red; display:none">Date field is required</span>
                        </div>
                    </div>
                    <div class="col-md-2 col-sm-2 col-lg-2">

                        <div>
                            @Html.Hidden("FeederTrend_ID")
                            <input type="button" value="Submit" id="btnFeederTrend" class="btn btn-primary  generate" style="margin-top:25px;font-size:12px" />
                            @*<input type="button" value="DonloadReport" id="btnFeederReport" class="btn btn-primary  generate" style="margin-top:25px;font-size:12px" />*@
                        </div>

                    </div>
                </div>
            </div>
            <div style="margin-left:1%">
                <button id="btnfeederwiseTrendlbl" class="boxshadow">data label</button>
            </div>
            <div id="FeederwiseTrendchart" style="height:300px">
            </div>
            <div id="Trendcloading" class="highcharts-loading" style="display:none; margin-top: -20%">
                <div class="center-block">
                    <img src="/content/images/loader/gears.gif" style="height:200px;margin: 0 0 0 40%;">
                </div>
            </div>
        </div>
    </div>

</div>

<div class="modal fade" id="ShopwiseHistory" tabindex="-1" role="dialog" arssia-labelledby="ShopwiseHistory">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title text-center" id="MinorStoppagesModal" style="margin-top: -2%; margin-bottom: -2%;height: 26px;font-family:'Times New Roman', Times, serif">Shopwise Feeder Report</h4>
            </div>
            <div>
                <div class="col-md-3 col-sm-3 col-lg-3">

                    <div class="form-group">
                        <label> From Date</label>
                        @Html.TextBox("FromDateShop", null, new { @class = "fromDate1 form-control fromdate1", @style = "max-width:100%", @autocomplete = "off" })
                        <span class="error" id="StartDateId" style="color:red; display:none">Date field is required</span>
                    </div>
                </div>
                <div class="col-md-3 col-sm-3 col-lg-3">
                    <div class="form-group">
                        <label>To Date</label>
                        @Html.TextBox("ToDateShop", null, new { @class = "ToDate1 form-control todate1", @style = "max-width:100%", @autocomplete = "off" })
                        <span class="error" id="EndDateId" style="color:red; display:none">Date field is required</span>
                    </div>
                </div>

                <div class="col-md-4 col-sm-4 col-lg-4">

                    <div>

                        <input type="button" value="Submit" id="btnShopwiseReport" class="btn btn-primary  generate" style="margin-top:25px;font-size:12px" />

                    </div>

                </div>
            </div>
            <div class="modal-body no-padding table-responsive table table-bordered table-striped table-condensed datatable_completes" id="FeederwiseModalsdetail" style="height:300px">
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="feederComparisonTrend" tabindex="-1" role="dialog" arssia-labelledby="feederComparisonTrend">
    <div class="modal-dialog modal-md" role="document" style="width:90%">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <label class="modal-title text-center" id="MinorStoppagesModal" style="margin-top: -2%; margin-bottom: -2%;height: 26px;font-family:'Times New Roman', Times, serif">Feederwise Trend</label>
            </div>




            <div class="row">
                <div class="col-md-12 col-lg-12 col-sm-12" style="font-size:12px">


                    <div class="col-md-2">


                        <div class="form-group">
                            <label class="lebal-font"> Feeder</label>

                            @Html.DropDownList("Feeder", null, htmlAttributes: new { @style = "max-width:100%" })


                        </div>
                    </div>

                    <div class="col-md-3 col-sm-3 col-lg-3" style="margin-left :-1%">

                        <div class="col-md-6 col-sm-6 col-lg-6">
                            <div class="form-group">
                                <label class="lebal-font"> Parameter</label>

                                @Html.DropDownList("ParameterID", null, htmlAttributes: new { @class = "ParameterC", @style = "max-width:100% " })

                            </div>
                        </div>
                        <div class="col-md-6 col-sm-6 col-lg-6">



                            <div class="form-group">
                                <label class="lebal-font">Date Range</label>
                                @Html.DropDownList("ddlDateRange1", null, htmlAttributes: new { @class = "ddlDateRangeC", @style = "max-width:100% " })
                                <span class="error" id="ddlDateRangeId" style="color:red;display:none">Date Range field is required</span>
                            </div>

                        </div>


                    </div>

                    <div class="col-md-3 col-sm-3 col-lg-3" style="margin-left:-2%">
                        <div class="col-lg-6 col-md-6 col-sm-6">
                            <div class="form-group">
                                <label class="lebal-font"> From Date</label>
                                @Html.TextBox("StartDate1", null, new { @class = "startdate form-control example1", @style = "max-width:100%", ReadOnly = "true", disabled = "false", @autocomplete = "off" })
                                <span class="error" id="StartDateId" style="color:red;display:none">From Date field is required</span>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-6">
                            <div class="form-group">
                                <label class="lebal-font">To Date</label>
                                @Html.TextBox("EndDate1", null, new { @class = "enddate form-control example1", @style = "max-width:100%", ReadOnly = "true", disabled = "false", @autocomplete = "off" })
                                <span class="error" id="EndDateId" style="color:red;display:none">To Date field is required</span>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-4" style="margin-left:-2%">
                        <div class="col-md-4" id="ShiftwiseCom">
                            <div class="form-group">
                                <label class="lebal-font">Shift</label>
                                @Html.DropDownList("Shiftwise1", null, "ALL", htmlAttributes: new { @class = "Shiftwise1C", @style = "max-width:100%", })
                                <span class="error" id="EndDateId" style="color:red;display:none">To Date field is required</span>
                            </div>
                        </div>
                        <div class="col-md-6" style="margin-left:0%;display:none" id="NOWorkingDay1">
                            <div class="form-group">
                                <label class="lebal-font">No Working Day</label>
                                @Html.DropDownList("Reason_ID1", null, "ALL", htmlAttributes: new { @class = "Reason_ID1C", @style = "max-width:100%" })
                                <span class="error" id="EndDateId" style="color:red;display:none">To Date field is required</span>
                            </div>
                        </div>
                        <div class="col-md-4" id="Minutes1">
                            @*<div class="form-group">
                                    <label class="lebal-font">Grain</label>
                                    @Html.DropDownList("MinuteRange1", null, htmlAttributes: new { @class = "MinuteRange1C", @style = "max-width:100%" })
                                    <span class="error" id="EndDateId" style="color:red;display:none">To Date field is required</span>
                                </div>*@
                            <div class="form-group">
                                <label class="lebal-font">Grain</label>
                                @Html.DropDownList("MinuteRange1", null, htmlAttributes: new { @class = "form-control MinuteRange1C", @style = "max-width:100%", })
                                <span class="error" id="EndDateId" style="color:red;display:none">To Date field is required</span>
                            </div>
                        </div>
                        <div class="col-md-2" style="margin-top:21px;">
                            <div class="form-group">


                                <input type="submit" value="Submit" id="btnComparison" class="btn btn-primary  generate" />



                            </div>
                        </div>
                    </div>


                </div>
            </div>

            <div style="margin-left:1%">
                <button id="btncomparisonchartlbl" class="boxshadow">data label</button>
            </div>

            <div id="FeederComparisonchart" style="height:330px">
            </div>


            <div id="Comparisonloading" class="highcharts-loading" style="display:none;margin-top:-20%">
                <div class="center-block">
                    <img src="/content/images/loader/gears.gif" style="height:200px;margin: 0 0 0 40%;">
                </div>
            </div>
        </div>
    </div>

</div>

<div class="modal fade" id="feederMailalert" tabindex="-1" role="dialog" arssia-labelledby="feederMailalert">
    <div class="modal-dialog modal-md" role="document" style="width:80%">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <label class="modal-title text-center" id="MinorStoppagesModal" style="margin-top: -2%; margin-bottom: -2%;height: 26px;font-family:'Times New Roman', Times, serif">Alerts</label>
            </div>

            <div id="Mailalerttbl">
            </div>
        </div>
    </div>

</div>


<div class="modal fade" id="Areawisefeeder" tabindex="-1" role="dialog" arssia-labelledby="Areawisefeeder">
    <div class="modal-dialog modal-md" role="document" style="width:99%">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <label class="modal-title text-center" id="AreaName" style="margin-top: -2%; margin-bottom: -2%;height: 26px;font-family:'Times New Roman', Times, serif">Area wise Feeder</label>
                <div style="float:right">

                    <label id="Area_ID" style="display:none">AreaID</label>
                    <label id="CBMCount" style="display:none">0</label>
                    <label id="CBM_feederID" style="display:none">0</label>
                </div>
            </div>
            <div class="modal-body">

                <div class="row" id="subAreamodel_tbl">


                    <div class="col-md-4">
                        <div class="box-body" style="padding:0px">
                            <div class="pannelfont">
                                <b>Sub Area  Consumption</b>
                            </div>
                            <div class="table-responsive" style="height:400px">
                                <table class="table table-striped table-condensed datatable_completes" id="subArea_tbl">
                                    <thead>
                                        <tr>
                                            <th>
                                                Feeder Name
                                            </th>
                                            <th>
                                                Consumption
                                            </th>


                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>

                        </div>
                    </div>

                    <div class="col-md-8 col-lg-8 col-sm-8">


                        <div class="row" id="CBM_Feeder_Panel">
                            @*<div class="col-md-3 col-sm-3 col-lg-3">


                                    <div class="form-group">
                                        <label class="lebal-font"> Feeder</label>

                                        @Html.DropDownList("AreaFeeder", Enumerable.Empty<SelectListItem>(), new { @class = "form-control", @style = "max-width:100% ", @size = "2" })

                                    </div>



                                </div>*@


                            <div class="col-md-3 col-sm-3 col-lg-3">


                                <div class="form-group">
                                    <label class="lebal-font"> CBM</label>

                                    @Html.DropDownList("CBMFeeder", Enumerable.Empty<SelectListItem>(), new { @class = "form-control", @style = "max-width:100% ", @size = "2" })

                                </div>



                            </div>
                            <div class="col-md-2 col-sm-2 col-lg-2" style="margin-left :1%">
                                <div class="form-group">
                                    <label class="lebal-font"> Date</label>
                                    @Html.TextBox("CBMFeederDate", null, new { @class = "form-control example1", @style = "max-width:100%", @autocomplete = "off" })
                                    <span class="error" id="CBMDateId" style="color:red;display:none">Date field is required</span>
                                </div>
                            </div>


                            <div class="col-md-2" style="margin-top:21px;">
                                <div class="form-group">


                                    <input type="submit" value="Submit" id="btnFeederCBM" class="btn btn-primary  generate" />



                                </div>
                            </div>

                        </div>

                        <button id="btnArealabel" class="boxshadow">data label</button>
                        <div id="Areawisefeederchart">
                        </div>
                        <div id="Areawisefeederchart_tblloading" class="highcharts-loading" style="display:none;">
                            <div class="center-block">
                                <img src="/content/images/loader/gears.gif" style="height:200px;margin: 0 0 0 40%;">
                            </div>
                        </div>
                    </div>

                </div>

                <div class="col-md-offset-3 col-md-4 ighcharts-loading" id="subAreamodel_tblloading" style="display:none;margin-top:-20%">
                    <div class="center-block">
                        <img src="/content/images/loader/gears.gif" style="height:200px;margin: 0 0 0 40%;">
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<div class="modal fade" id="AreawiseTrend_model" tabindex="-1" role="dialog" arssia-labelledby="AreawiseTrend_model">
    <div class="modal-dialog modal-md" role="document" style="width:99%">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <label class="modal-title text-center" id="MinorStoppagesModal" style="margin-top: -2%; margin-bottom: -2%;height: 26px;font-family:'Times New Roman', Times, serif">Areawise Trend</label>
            </div>

            <div class="row">



                <div class="col-md-2 col-sm-2 col-lg-2" style="margin-left :1%">


                    <div class="form-group">
                        <label class="lebal-font"> Area</label>

                        @Html.DropDownList("Area", null, "Select Area", htmlAttributes: new { @style = "max-width:100%" })


                    </div>
                </div>

                <div class="col-md-3 col-sm-3 col-lg-3">


                    <div class="form-group">
                        <label class="lebal-font"> CBM</label>

                        @Html.DropDownList("CBM", Enumerable.Empty<SelectListItem>(), new { @class = "form-control", @style = "max-width:100% ", @size = "2" })

                    </div>



                </div>
                <div class="col-md-2 col-sm-2 col-lg-2" style="margin-left :1%">


                    <div class="form-group">
                        <label class="lebal-font"> Date</label>

                        @Html.TextBox("CBMDate", null, new { @class = "CBMDate form-control example1", @style = "max-width:100%", @autocomplete = "off" })
                        <span class="error" id="CBMDateId" style="color:red;display:none">Date field is required</span>


                    </div>
                </div>



                <div class="col-md-2" style="margin-top:21px;">
                    <div class="form-group">


                        <input type="submit" value="Submit" id="btnAreaCBM" class="btn btn-primary  generate" />



                    </div>
                </div>
            </div>

            <div style="margin-left:1%">
                <button id="btnAreawiseTrendlbl" class="boxshadow">data label</button>
            </div>
            <div class="row">
                <div class="col-md-8">
                    <div id="AreawiseTrendchart" style="height:300px">
                    </div>
                </div>
                <div class="col-md-4">
                    <div id="AreawisePareto" style="height:300px">
                    </div>
                </div>
            </div>

            <div class="row">
                <div id="AreawiseTrendloading" class="highcharts-loading" style="display:none; margin-top:-20%">
                    <div class="center-block">
                        <img src="/content/images/loader/gears.gif" style="height:200px;margin: 0 0 0 40%;">
                    </div>
                </div>
            </div>


        </div>
    </div>

</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*@Scripts.Render("~/bundles/PDFHighchart")*@

}
<script src="~/Scripts/ParteoHighchart/highcharts.js"></script>
<script src="~/Scripts/ParteoHighchart/pareto.js"></script>
<script src="~/Content/theme/plugins/daterangepicker/moment.min.js"></script>
<script src="~/Content/theme/plugins/select2/select2.full.js"></script>
<link href="~/Content/theme/plugins/datepicker/datepicker3.css" rel="stylesheet" />
<script src="~/Content/theme/plugins/datepicker/bootstrap-datepicker.js"></script>
<script src="~/Content/theme/plugins/DateTimePicker/jquery.datetimepicker.min.js"></script>
<script src="~/Content/theme/plugins/DateTimePicker/jquery.datetimepicker.full.min.js"></script>
<link href="~/Content/theme/plugins/DateTimePicker/jquery.datetimepicker.min.css" rel="stylesheet" />


<script>
    $(document).ready(function (e) {




        window.onload = function () {


            var Generation = '@ViewBag.Generation';

            if (Generation == 'Generation') {
                $("#TodaySpecfic").hide();
                $("#TodayCount").hide();

                $("#YesterdaySEC").hide();
                $("#YesterdayCount").hide();

                $("#LastweekSEC").hide();
                $("#LastweekCount").hide();

                $("#MonthSEC").hide();
                $("#MonthCount").hide();

            }


            //$("#StartDate").datepicker({ format: 'dd/mm/yyyy' });
            //$("#EndDate").datepicker({ format: 'dd/mm/yyyy' });


            $('#Minutes').show();

            $("#CBMDate").datepicker({ format: 'dd/mm/yyyy' });
            $("#CBMFeederDate").datepicker(
                {
                    format: 'dd/mm/yyyy',
                    autoclose: true,
                    endDate: '+0d'
                })


            $("#StartDate1").datepicker({ format: 'dd/mm/yyyy' });
            $("#EndDate1").datepicker({ format: 'dd/mm/yyyy' });
            $(".fromDate1").datetimepicker(
                {
                    format: 'd/m/y H:i',
                    defaultDate: new Date(),
                    timepickerScrollbar: true,
                    hours12: false
                });
            $(".ToDate1").datetimepicker(
                {
                    format: 'd/m/Y H:i',
                    defaultDate: new Date(),
                    timepickerScrollbar: true,
                    hours12: false
                });
            var data = new Array();
            Date1 = new Array();
            daywiseData = new Array();
            ShopspficData = new Array();

            var chartdata = JSON.parse('@Html.Raw(Json.Encode(ViewData["pieData1"]))');
            var SubFeederData = JSON.parse('@Html.Raw(Json.Encode(ViewData["SubFeederData"]))');
            var ParetoData = JSON.parse('@Html.Raw(Json.Encode(ViewData["ParetoData"]))');
            var shopdata = JSON.parse('@Html.Raw(Json.Encode(ViewData["Shopwise_Data"]))');
            var shopDate = JSON.parse('@Html.Raw(Json.Encode(ViewData["Shopwise_Date"]))');
            var SpecficData = JSON.parse('@Html.Raw(Json.Encode(ViewData["Shopwise_specfic_Data"]))');
            var AreaINData = JSON.parse('@Html.Raw(Json.Encode(ViewData["AreaINData"]))');
            var cumulativedata = JSON.parse('@Html.Raw(Json.Encode(ViewData["cumulative"]))');
            var avragedata =JSON.parse('@Html.Raw(Json.Encode(ViewData["Averge"]))');

            var Parameter =JSON.parse('@Html.Raw(Json.Encode(ViewBag.Parameter_ID))');
            var SpecficDataunit = '@ViewBag.specUnit';
            var unit = '@ViewBag.ConsumeType';



            $("#bodyid").addClass('sidebar-collapse');
            $.each(Parameter, function (index, item) {
                //kwhdata.push(item.Y);


                //feeder.push(item.Label);
                $("#Parameter_ID").append(



                    $('<option></option>').val(item.Value).html(item.Text).prop('selected', true));



            })
            $("#Parameter_ID").select2({
                placeholder: 'Add Parameter',
                allowClear: true,
                multiple: 'multiple',
                width: '-webkit-fill-available'
            });
            $("#Feeder").select2({
                placeholder: 'Add Feeder',
                allowClear: true,
                multiple: 'multiple',
                width: '-webkit-fill-available'
            });
            $("#Area").select2({
                placeholder: 'Add Area',
                allowClear: true,
                //multiple: 'multiple',
                width: '-webkit-fill-available'
            });
            $(".ParameterC").select2({
                ////placeholder: 'Add Feeder',
                allowClear: true,
                ////multiple: 'multiple',
                width: '-webkit-fill-available'
            });
            $("#CBM").select2({
                ////placeholder: 'Add Feeder',
                allowClear: true,
                multiple: 'multiple',
                width: '-webkit-fill-available'
            });
            $("#CBMFeeder").select2({
                ////placeholder: 'Add Feeder',
                allowClear: true,
               // multiple: 'multiple',
                width: '-webkit-fill-available'
            });
            $("#AreaFeeder").select2({
                ////placeholder: 'Add Feeder',
                allowClear: true,
                //multiple: 'multiple',
                width: '-webkit-fill-available'
            });
            $(".ddlDateRangeC").select2({

                allowClear: false,

                width: '-webkit-fill-available'
            });
            $(".Reason_ID1C").select2({

                allowClear: false,

                width: '-webkit-fill-available'
            });
            $(".Shiftwise1C").select2({

                allowClear: false,

                width: '-webkit-fill-available'
            });

            kwhdata = new Array();
            feeder = new Array();
            var feeder_data = [];
            var Category_data = [];

            if (chartdata != null) {

                $.each(chartdata, function (index, item) {
                    //kwhdata.push(item.Y);
                    //feeder.push(item.Label);
                    feeder_data.push({ "Name": item.Label, "y": item.Y });

                })
                var id = 'addFeederpiechart'
                feederwisechart(feeder_data, id);
                $.each(ParetoData, function (index, item) {
                    kwhdata.push(item.Y);
                    feeder.push(item.Label);

                })

                feeerwiseLineChart(kwhdata, feeder);
            }

             var CategoryData = JSON.parse('@Html.Raw(Json.Encode(ViewData["CategoryData"]))');
            $.each(CategoryData, function (index, item) {

                Category_data.push({ "Name": item.Label, "y": item.Y });

            })
            var Area_Indata = [];
            var Sub_Feederdata = [];
            var cumulative_data = [];
            var avg_data = [];

            $.each(AreaINData, function (index, item) {

                Area_Indata.push({ "Name": item.Label, "y": item.Y });

            })
            $.each(shopdata, function (index, item) {

                daywiseData.push(item);
            })
            $.each(SpecficData, function (index, item) {

                ShopspficData.push(item);

            })
            $.each(shopDate, function (index, item) {

                Date1.push(item);

            })
            $.each(cumulativedata, function (index, item) {

                cumulative_data.push(item);

            })
            $.each(avragedata, function (index, item) {

                avg_data.push(item);

            })
            shopwisechart(daywiseData, Date1, ShopspficData, SpecficDataunit, unit, cumulative_data, avg_data);


            repeater = setInterval(updateParameterData, 100000)
            ShowAreainchart(Area_Indata);
            ShowCategoryChart(Category_data);
            $("#feederwisegraph").hide();
            $("#Shop_Summary").show();
            $("#rdoFeederGraph").prop("checked", true);
            $("#SubFeederData").hide();
            $("#containerCategory").hide();
            $("#containerLine").hide();
            $("#containerCategory").hide();

            if (SubFeederData != null) {

                $.each(SubFeederData, function (index, item) {
                    //kwhdata.push(item.Y);
                    //feeder.push(item.Label);
                    Sub_Feederdata.push({ "Name": item.Label, "y": item.Y });

                })
                var id = 'SubFeederspichart'
                feederwisechart(Sub_Feederdata, id);

            }
        }


   })
</script>

<script>
    function updateParameterData() {
        var ShopId = $('#Shop_ID').val();

        $.ajax({
            url: '/RealTimeParameter/ParamterLivedata',
            type: 'GET',
            data: ({ Shop: ShopId }),
            contentType: 'application/json;charset-utf-8',
            success: function (data) {
                for (var i = 0; i < data.LiveData.length; i++) {

                    var TagIndex = data.LiveData[i].FeederIndex;
                    var FeederIndex = ("#" + TagIndex);
                    $(FeederIndex).html(data.LiveData[i].ParamterValue)

                }
                for (var i = 0; i < data.Feederobj.length; i++) {

                    var feeder = data.Feederobj[i].feeder;
                    var FeederIndex = ("#idate_" + feeder);
                    var date = new Date();

                    date = (data.Feederobj[i].datetime);

                    $(FeederIndex).html(data.Feederobj[i].datetime)

                }

            }


        });
    }
    function shopwisechart1(daywiseData, Date1) {


        Highcharts.stockChart('shopcontainer', {
            xAxis: {
                gapGridLineWidth: 0,
                categories: Date1,
            },
            rangeSlector: {
                buttons: [{
                    type: 'day',
                    count: 3,
                    text: '3d'
                }, {
                    type: 'all',

                    text: 'All'
                }
                ],
                selected: 3
            },
            series: [{
                type: 'area',
                data: daywiseData,
            }]
        })
    }
    function realtime(shopId) {

        var path = "/MeterwiseConsumptionGraph/Index?Shop_ID=" + shopId;
        window.location.href = path;
    }

    function SubArea(AreaId) {
        debugger;

        $("#CBM_Feeder_Panel").hide();
        //$("#SubProcessData").show();
        // $("#AreaName").html("");
        $("#CBMFeeder").html("");
        $("#CBMFeederDate").html("");
        //$("#AreaFeeder").html("");
        //$("#AreaFeeder, .select2-selection__rendered").empty()
        $("#CBMFeeder, .select2-selection__rendered").empty()


        $("#Areawisefeederchart").html("");
        $("#subArea_tbl tbody").html("");
        $("#subAreamodel_tblloading").show();
        var ShopId = $('#Shop_ID').val();
        var Formdate = $("#StartDate").val();
        var Todate = $("#EndDate").val();
        var ddlformat = $("#ddlDateRange").val();
        var Shift = $('#Shiftwise').val();
        var Minute = $('#MinuteRange').val()
        if (Formdate != Todate) {
            Minute = '';
        }

        if (ddlformat == "5") {
            debugger;
            dt1 = new Date(Formdate);
            dt2 = new Date(Todate);
            Formdate = moment(Formdate).format("DD/MM/YY HH:mm");
            Todate = moment(Todate).format("DD/MM/YY HH:mm");
            var diff = (dt2.getTime() - dt1.getTime()) / 1000;
            diff /= (60 * 60);
            var diffval = diff;

            if (diffval <= 24) {
                Minute = '60';
            }
        }
        var type = $("#Type").val();
        var holiday = $("#Reason_ID").val();
        $("#Area_ID").html(AreaId);
        $("#CBMCount").html(0);

        $.ajax({
            url: '/RealTimeParameter/SubArea',
            type: 'GET',
            data: ({ Formdate: Formdate, Todate: Todate, ddlformat: ddlformat, Shiftwise: Shift, Minute: Minute, ConsumptionId: type, holiday: holiday, Area: AreaId, Shop: ShopId }),
            contentType: 'application/json;charset-utf-8',
            success: function (data) {
                var Area_Data = []


                var Total = 0;
                $("#subAreamodel_tblloading").hide();
                $("#subArea_tbl tbody").html("");
                $("#AreaName").html(data.AreaName);
                // $("#CBMFeeder").html("");
                // $("#AreaFeeder").html("");
                debugger;

                if (data.CBM.length > 0) {
                    //$("#CBM_Feeder_Panel").show();
                    $("#CBMCount").html(1);
                }

                for (var i = 0; i < data.CBM.length; i++) {

                    $("#CBMFeeder").append(


                        $('<option></option>').val(data.CBM[i].CBM_ID).html(data.CBM[i].CBM_Name).prop('selected', false));
                }



                for (var i = 0; i < data.ProcessData.length; i++) {


                    //var markup = "<tr><td>" + data[i].Label + "</td><td>" + data[i].Y + "</td></tr>"
                    var markup = "<tr><td><button  class='boxshadow' id='realtime' value=" + data.ProcessData[i].ShopId + ", onclick ='FeederData(" + data.ProcessData[i].ShopId + ")'>" + data.ProcessData[i].Label + "</button></td><td>" + data.ProcessData[i].Y + "</td></tr>"

                    $("#subArea_tbl tbody").append(markup)
                    Total += data.ProcessData[i].Y
                    //$("#AreaFeeder").append(
                    //    $('<option></option>').val(data.ProcessData[i].ShopId).html(data.ProcessData[i].Label).prop('selected', false));
                    Area_Data.push({ "Name": data.ProcessData[i].Label, "y": data.ProcessData[i].Y });

                }
                if (data.ProcessData.length > 0) {


                    var markup = "<tr><td>" + "Total" + "</td><td>" + Total + "</td></tr>"
                    $("#subArea_tbl tbody").append(markup);
                }
                ShowAreasubChart(Area_Data)

            }


        });
    }
    function ShowAreasubChart(CategoryData) {

        Highcharts.chart('Areawisefeederchart', {
            chart: {
                plotBackgroundColor: null,
                plotBorderWidth: null,
                plotShadow: false,
                type: 'pie',
                spacingTop: -10,
                //spacingLeft:-525
            },
            title: {
                text: ''
            },
            credits: {
                enabled: false
            },
            tooltip: {
                pointFormat: '{point.Name}: <b>{point.percentage:.1f}%</b>'
            },
            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    size: '100%',
                    dataLabels: {
                        enabled: true,
                        format: '{point.Name}: {point.percentage:.1f}% ',
                        style: {
                            color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                        },
                    },
                }
            },
            series: [{
                colorByPoint: true,
                data: CategoryData,
                dataLabels: {
                    style: {
                        fontSize: '9px',
                        fontFamily: 'Verdana, sans-serif',
                    },
                }
            }],
            exporting: {
                enabled: true
            }
        })
    }
    function FeederData(TagIndex) {

        debugger;
        $("#CBM_Feeder_Panel").hide();
        var ShopId = $('#Shop_ID').val();
        var Formdate = $("#StartDate").val();
        var Todate = $("#EndDate").val();
        var ddlformat = $("#ddlDateRange").val();
        var Shift = $('#Shiftwise').val();
        var Minute = $('#MinuteRange').val()
        var Count = $('#CBMCount').html();
        var AreaID = $('#Area_ID').html();
        $('#CBM_feederID').html(TagIndex);

        if (Formdate != Todate) {
            Minute = '';
        }
        if (ddlformat == "5") {
            debugger;
            dt1 = new Date(Formdate);
            dt2 = new Date(Todate);
            Formdate = moment(Formdate).format("DD/MM/YY HH:mm");
            Todate = moment(Todate).format("DD/MM/YY HH:mm");
            var diff = (dt2.getTime() - dt1.getTime()) / 1000;
            diff /= (60 * 60);
            var diffval = diff;

            if (diffval <= 24) {
                Minute = '60';
            }
        }
        var type = $("#Type").val();

        var holiday = $("#Reason_ID").val();



        var temp = new Array();
        var CBMID = $.map($('#CBMFeeder'), function (e) {

            return $(e).val();
        });
        for (var i = 0; i < CBMID.length; i++) {

            temp.push(CBMID[i]);
        }
        var CBMDate = $('#CBMFeederDate').val()


        {
            $("#Areawisefeederchart").html("");
            $("#Areawisefeederchart_tblloading").show();

            $.ajax({
                url: '/RealTimeParameter/FeederData',
                //type: 'GET',
                //data: ({ Fromdate: startdate, ToDate: enddate, Shop: ShopId, feeder: feederId, Parameter: ParameterId }),
                contentType: 'application/json;charset-utf-8',
                data: "{ 'Fromdate': '" + Formdate + "', 'ToDate': '" + Todate + "',  'ddlformat': '" + ddlformat + "', 'Shop': '" + ShopId + "',  'TagIndex': '" + TagIndex + "','Reason':'" + holiday + "','shiftwise':'" + Shift + "','Minute':'" + Minute + "','type':'" + type + "'}",
                dataType: "json",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    ddl = new Array();

                    for (var i = 0; i < data.allDates.length; i++) {
                        ddl.push(data.allDates[i]);
                    }
                    if (Count == '1') {

                        $("#CBM_Feeder_Panel").show();
                    }
                    var titleName = "";
                    var YAxistext = data.Unit
                    // $("#Comparisonloading").hide();
                    $("#Areawisefeederchart_tblloading").hide();
                    Showfeederchart(ddl, titleName, YAxistext);

                    for (var j = 0; j < data.AllConsumption.length; j++) {

                        TotalConsumtion = new Array();
                        TotalIdeal = new Array();
                        cumulative = new Array();
                        Average = new Array();
                        var feeder = data.Names[j];



                        for (var i = 0; i < data.AllConsumption[j].length; i++) {
                            TotalConsumtion.push(data.AllConsumption[j][i]);

                        }
                        if (data.Ideal.length > 0) {


                            for (var i = 0; i < data.Ideal[j].length; i++) {
                                TotalIdeal.push(data.Ideal[j][i]);

                            }

                        }
                        for (var i = 0; i < data.cumulative[j].length; i++) {
                            cumulative.push(data.cumulative[j][i]);

                        }
                        if (data.Average.length > 0) {
                            for (var i = 0; i < data.Average[j].length; i++) {
                                Average.push(data.Average[j][i]);

                            }
                        }
                        ShowfeederchartData(TotalConsumtion, feeder, cumulative, TotalIdeal, Average);

                        //if (ParameterId == 1) {

                        //    ShowComparisoncumulativeData(TotalConsumtion, feeder, TotalIdeal, cumulative);
                        //}
                        //else {
                        //    ShowComparisonData(TotalConsumtion, feeder);
                        //}


                    }

                }
            });
        }
    }

    function feeerwiseLineChart(kwhdata, feeder) {

        Highcharts.chart('containerLine', {
            chart: {
                renderTo: 'containerLine',
                type: 'column'
            },
            title: {
                text: ''
            },
            tooltip: {
                shared: true
            },
            xAxis: {
                categories: feeder,
                crosshair: true
            },
            yAxis: [{
                //title: {
                //    text: ''
                //},
                type: 'logarithmic',
                minorTickInterval: 'auto',
            }, {
                title: {
                    text: ''
                },
                minPadding: 0,
                maxPadding: 0,
                max: 100,
                min: 0,
                opposite: true,
                labels: {
                    format: "{value}%"
                }
            }],
            series: [{
                type: 'pareto',
                name: 'Pareto',
                yAxis: 1,
                zIndex: 10,
                baseSeries: 1,
                tooltip: {
                    valueDecimals: 2,
                    valueSuffix: '%'
                }
            }, {
                name: 'Feeder',
                type: 'column',
                zIndex: 2,
                pointWidth: 10,
                data: kwhdata
            }],
            credits: {
                enabled: false
            },
        });

    }

    function AreaWiseParteo(kwhdata, feeder) {
        Highcharts.chart('AreawisePareto', {
            chart: {
                renderTo: 'AreawisePareto',
                type: 'column'
            },
            title: {
                text: ''
            },
            tooltip: {
                shared: true
            },
            xAxis: {
                categories: feeder,
                crosshair: true
            },
            yAxis: [{
                //title: {
                //    text: ''
                //},
                type: 'logarithmic',
                minorTickInterval: 'auto',
            }, {
                title: {
                    text: ''
                },
                minPadding: 0,
                maxPadding: 0,
                max: 100,
                min: 0,
                opposite: true,
                labels: {
                    format: "{value}%"
                }
            }],
            series: [{
                type: 'pareto',
                name: 'Pareto',
                yAxis: 1,
                zIndex: 10,
                baseSeries: 1,
                tooltip: {
                    valueDecimals: 2,
                    valueSuffix: '%'
                }
            }, {
                name: 'Feeder',
                type: 'column',
                zIndex: 2,
                pointWidth: 10,
                data: kwhdata
            }],
            credits: {
                enabled: false
            },
        });
    }
    function shopwisechart(daywiseData, Date1, ShopspficData, SpecficDataunit, unit, cumulative, avg) {
        var chart = $('#shopcontainer').highcharts({
            chart: {
                zoomType: 'xy',
                exportChart: {
                    type: 'application/pdf',
                    filename: 'my-pdf'
                }
            },
            title: {
                text: null,
                style: {
                    class: 'HighTitle'
                }
            },
            credits: {
                enabled: false
            },
            xAxis: {
                title: {
                    //text: Date1,
                    //style: {
                    //    fontWeight: 'bold'
                    //}
                },
                dataLabels: {
                    //rotation: -45,
                    rotation: -90,
                    //allowOverlap:true,
                    enabled: true,

                },
                categories: Date1,
                labels:
                {
                    rotation: -90,
                    //formatter: function () {

                    //    var item = this.value;
                    //    var ddlitem = item.split(" ");
                    //    var finalitem = ddlitem[3];
                    //    //var finalitem = "";
                    //    return finalitem;
                    //}
                },
                //
                crosshair: true
            },
            yAxis: [{
                title: {
                    text: SpecficDataunit,
                    //style: {
                    //    fontWeight: 'bold'
                    //}
                },
                //type: 'logarithmic',
                //minorTickInterval: 'auto'
            },
            {
                title: {
                    text: unit,
                    //style: {
                    //    fontWeight: 'bold'
                    //}
                },
                opposite: true,
                type: 'logarithmic',
                //minorTickInterval: 'auto'
                gridLineWidth: 0
            },
            ],
            tooltip: {
                shared: true
            },
            series: [
                {
                    name: SpecficDataunit,
                    data: ShopspficData,
                    connectNulls: true,
                    type: 'spline',
                    yAxis: 0,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,
                        //rotation: -90,
                        //color: '#FFFFFF',
                        //align: 'right',
                        //format: '{point.y:.1f}', // one decimal
                        //y: 10, // 10 pixels down from the top
                        //style: {
                        //    fontSize: '10px',
                        //    fontFamily: 'Verdana, sans-serif'
                        //}
                    }
                },
                {
                    name: unit,
                    data: daywiseData,
                    dashStyle: 'ShortDot',
                    color: "chocolate",
                    yAxis: 1,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,
                        //rotation: -90,
                        //color: '#FFFFFF',
                        //align: 'right',
                        //format: '{point.y:.1f}', // one decimal
                        //y: 10, // 10 pixels down from the top
                        //style: {
                        //    fontSize: '10px',
                        //    fontFamily: 'Verdana, sans-serif'
                        //}
                    }
                },
                {
                    name: 'cumulative',
                    data: cumulative,
                    type: 'spline',
                    color: "darkcyan",
                    yAxis: 1,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,
                        //rotation: -90,
                        //color: '#FFFFFF',
                        //align: 'right',
                        //format: '{point.y:.1f}', // one decimal
                        //y: 10, // 10 pixels down from the top
                        //style: {
                        //    fontSize: '10px',
                        //    fontFamily: 'Verdana, sans-serif'
                        //}
                    }
                },
                {
                    name: 'Averge',
                    data: avg,
                    type: 'spline',
                    yAxis: 1,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,
                        //rotation: -90,
                        //color: '#FFFFFF',
                        //align: 'right',
                        //format: '{point.y:.1f}', // one decimal
                        //y: 10, // 10 pixels down from the top
                        //style: {
                        //    fontSize: '10px',
                        //    fontFamily: 'Verdana, sans-serif'
                        //}
                    }
                },
            ],
            exporting: {
                enabled: true
            }
        });

    }

    function ShowPlantChart1(daywiseData, Date1, ShopspficData, SpecficDataunit, Production, Best, Target, unit, cumulative, Averge) {

        var chart = $('#shopcontainer').highcharts({
            chart: {
                zoomType: 'xy',
                exportChart: {
                    type: 'application/pdf',
                    filename: 'my-pdf'
                }
            },
            title: {
                text: null,
                style: {
                    class: 'HighTitle'
                }
            },
            credits: {
                enabled: false
            },
            xAxis: {
                title: {
                    //text: Date1,
                    //style: {
                    //    fontWeight: 'bold'
                    //}
                },
                dataLabels: {
                    //rotation: -45,
                    //rotation: -90,
                    //allowOverlap:true,
                    enabled: true,

                },
                categories: Date1,
                labels:
                {
                    rotation: -45,

                },
                //
                crosshair: true
            },
            yAxis: [{
                title: {
                    text: SpecficDataunit,
                    //style: {
                    //    fontWeight: 'bold'
                    //}
                },
                //type: 'logarithmic',
                //minorTickInterval: 'auto'
            },
            {
                title: {
                    text: unit,
                    //style: {
                    //    fontWeight: 'bold'
                    //}
                },
                opposite: true,
                type: 'logarithmic',
                //minorTickInterval: 'auto'
                gridLinewidth: 0
            },
            {
                title: {
                    text: 'veh',
                    //style: {
                    //    fontWeight: 'bold'
                    //}
                },
                opposite: true,
                //type: 'logarithmic',
                //minorTickInterval: 'auto'
            },
                //{
                //    title: {
                //        text: 'Target',
                //        //style: {
                //        //    fontWeight: 'bold'
                //        //}
                //    },
                //    opposite: true
                //},
            ],
            tooltip: {
                shared: true
            },
            series: [
                {
                    name: SpecficDataunit,
                    data: ShopspficData,
                    type: 'spline',
                    yAxis: 0,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    }
                },
                {
                    name: 'Best',
                    data: Best,
                    type: 'spline',
                    yAxis: 0,
                    connectNulls: true,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    }
                },
                {
                    name: 'Target',
                    data: Target,
                    type: 'spline',
                    yAxis: 0,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    }
                },
                {
                    name: unit,
                    data: daywiseData,
                    dashStyle: 'spline',
                    ///* color: "chocolate"*/,
                    yAxis: 1,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    }
                },
                {
                    name: 'cumulative',
                    data: cumulative,
                    dashStyle: 'spline',
                    ///* color: "chocolate"*/,
                    yAxis: 1,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    }
                },
                {
                    name: 'Averge',
                    data: Averge,
                    dashStyle: 'spline',
                    ///* color: "chocolate"*/,
                    yAxis: 1,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    }
                },
                {
                    name: 'Veh',
                    data: Production,
                    dashStyle: 'spline',
                    //color: "chocolate",
                    yAxis: 2,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    },
                },
            ],
            exporting: {
                enabled: true
            }
        });




    }

    function ShowCategoryChart(CategoryData) {

        Highcharts.chart('containerCategory1', {
            chart: {
                plotBackgroundColor: null,
                plotBorderWidth: null,
                plotShadow: false,
                type: 'pie',
                spacingTop: -100,
                //spacingLeft:-525
            },
            title: {
                text: ''
            },
            credits: {
                enabled: false
            },
            tooltip: {
                pointFormat: '{point.Name}: <b>{point.percentage:.1f}%</b>'
            },
            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    size: '100%',
                    dataLabels: {
                        enabled: false,
                        //format: '{point.label}: {point.percentage:.1f}% ',
                        style: {
                            color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                        },
                    },
                }
            },
            series: [{
                colorByPoint: true,
                data: CategoryData,
                dataLabels: {
                    style: {
                        fontSize: '9px',
                        fontFamily: 'Verdana, sans-serif',
                    },
                }
            }],
            exporting: {
                enabled: true
            }
        })
    }

    function ShowAreainchart(Data) {

        Highcharts.chart('InAreaChart', {
            chart: {
                plotBackgroundColor: null,
                plotBorderWidth: null,
                plotShadow: false,
                type: 'pie',
                spacingTop: -100,
                //spacingLeft:-525
            },
            title: {
                text: ''
            },
            credits: {
                enabled: false
            },
            tooltip: {
                pointFormat: '{point.Name}: <b>{point.percentage:.1f}%</b>'
            },
            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    size: '90%',
                    dataLabels: {
                        enabled: false,
                        //format: '{point.label}: {point.percentage:.1f}% ',
                        style: {
                            color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                        },
                    },
                }
            },
            series: [{
                colorByPoint: true,
                data: Data,
                dataLabels: {
                    style: {
                        fontSize: '8px',
                        fontFamily: 'Verdana, sans-serif',
                    },
                }
            }],
            exporting: {
                enabled: true
            }
        })
    }

    function feederwisechart(chartdata, id) {
        Highcharts.chart(id, {
            chart: {
                plotBackgroundColor: null,
                plotBorderWidth: null,
                plotShadow: false,
                type: 'pie',
                spacingTop: -125,
                //spacingLeft:-525
            },
            title: {
                text: ''
            },
            credits: {
                enabled: false
            },
            tooltip: {
                pointFormat: '{point.Name}: <b>{point.percentage:.1f}%</b>'
            },
            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    size: '100%',
                    dataLabels: {
                        enabled: false,
                        //format: '{point.label}: {point.percentage:.1f}% ',
                        style: {
                            color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                        },
                    },
                }
            },
            series: [{
                colorByPoint: true,
                data: chartdata,
                dataLabels: {
                    style: {
                        fontSize: '9px',
                        fontFamily: 'Verdana, sans-serif',
                    },
                }
            }],
            exporting: {
                enabled: true
            }
        })
    }

    $('#btnSummary').click(function () {

        $('#btnSummary').addClass("btn-success").removeClass("btn-default");

        $('#btnBarChart').removeClass("btn-success").addClass("btn-default");
        $('#btnCategoryChart').removeClass("btn-success").addClass("btn-default");
        $('#btnPiechart').removeClass("btn-success").addClass("btn-default");
        $('#btnFeederwise').removeClass("btn-success").addClass("btn-default");
        $('#btnIncomer').removeClass("btn-success").addClass("btn-default");

        $('#btnAreaChart').removeClass("btn-success").addClass("btn-default");

        $("#feederwisegraph").hide();
        $("#containerLine").hide();
        $("#containerCategory").hide();
        $("#containerArea").hide();
        $("#Shop_Summary").show();

        $('input:radio[name="rdoFeederGraph"][value="1"]').prop('checked', true);
        $("#addFeeders").show();
        $("#SubFeeders").hide();
        $("#INfeederwisegraph").hide();


    })
    $('#btnPiechart').click(function () {

        $('#btnBarChart').removeClass("btn-success").addClass("btn-default");
        $('#btnCategoryChart').removeClass("btn-success").addClass("btn-default");
        $('#btnPiechart').addClass("btn-success").removeClass("btn-default");
        $('#btnFeederwise').removeClass("btn-success").addClass("btn-default");
        $('#btnIncomer').removeClass("btn-success").addClass("btn-default");
        $('#btnSummary').removeClass("btn-success").addClass("btn-default");
        $('#btnAreaChart').removeClass("btn-success").addClass("btn-default");

        $("#feederwisegraph").show()
        $("#containerLine").hide()
        $("#containerCategory").hide()
        $("#containerArea").hide()
        $("#Shop_Summary").hide()

        $('input:radio[name="rdoFeederGraph"][value="1"]').prop('checked', true);
        $("#addFeeders").show();
        $("#SubFeeders").hide();
        $("#INfeederwisegraph").hide();


    })

    $('#btnBarChart').click(function () {

        $('#btnBarChart').addClass("btn-success").removeClass("btn-default");
        $('#btnPiechart').removeClass("btn-success").addClass("btn-default");
        $('#btnCategoryChart').removeClass("btn-success").removeClass("btn-default");
        $('#btnFeederwise').removeClass("btn-success").addClass("btn-default");
        $('#btnIncomer').removeClass("btn-success").addClass("btn-default");
        $('#btnSummary').removeClass("btn-success").addClass("btn-default");
        $('#btnAreaChart').removeClass("btn-success").addClass("btn-default");

        $("#feederwisegraph").hide()
        $("#containerLine").show()
        $("#containerCategory").hide()
        $("#ConsumePower").hide()
        $("#containerArea").hide()
        $("#INfeederwisegraph").hide();
        $("#Shop_Summary").hide()


    })
    $('#btnCategoryChart').click(function () {

        $('#btnCategoryChart').addClass("btn-success").removeClass("btn-default");
        $('#btnPiechart').removeClass("btn-success").addClass("btn-default");
        $('#btnBarChart').removeClass("btn-success").removeClass("btn-default");
        $('#btnFeederwise').removeClass("btn-success").addClass("btn-default");
        $('#btnIncomer').removeClass("btn-success").addClass("btn-default");
        $('#btnSummary').removeClass("btn-success").addClass("btn-default");
        $('#btnAreaChart').removeClass("btn-success").addClass("btn-default");

        $("#feederwisegraph").hide()
        $("#containerLine").hide()
        $("#containerCategory").show()
        $("#ConsumePower").hide()
        $("#containerArea").hide()
        $("#INfeederwisegraph").hide();
        $("#Shop_Summary").hide()


    })
    $('#btnFeederwise').click(function () {

        $('#btnFeederwise').addClass("btn-success").removeClass("btn-default");
        $('#btnBarChart').removeClass("btn-success").addClass("btn-default");
        $('#btnCategoryChart').removeClass("btn-success").addClass("btn-default");
        $('#btnPiechart').removeClass("btn-success").removeClass("btn-default");
        $('#btnIncomer').removeClass("btn-success").addClass("btn-default");
        $('#btnSummary').removeClass("btn-success").addClass("btn-default");
        $('#btnAreaChart').removeClass("btn-success").addClass("btn-default");

        $("#ConsumePower").show()
        $("#feederwisegraph").hide()
        $("#containerLine").hide()
        $("#containerCategory").hide()
        $("#containerArea").hide()
        $("#INfeederwisegraph").hide();
        $("#Shop_Summary").hide()


    })
    $('#btnAreaChart').click(function () {

        $('#btnAreaChart').addClass("btn-success").removeClass("btn-default");
        $('#btnBarChart').removeClass("btn-success").addClass("btn-default");
        $('#btnCategoryChart').removeClass("btn-success").addClass("btn-default");
        $('#btnPiechart').removeClass("btn-success").removeClass("btn-default");
        $('#btnFeederwise').removeClass("btn-success").removeClass("btn-default");
        $('#btnIncomer').removeClass("btn-success").addClass("btn-default");
        $('#btnSummary').removeClass("btn-success").addClass("btn-default");

        $("#ConsumePower").hide()
        $("#feederwisegraph").hide()
        $("#containerLine").hide()
        $("#containerCategory").hide()
        $("#containerArea").show()
        $("#INfeederwisegraph").hide();
        $("#Shop_Summary").hide();
        $("#consumeArea").hide()
    })
    $('#btnIncomer').click(function () {

        $('#btnIncomer').addClass("btn-success").removeClass("btn-default");
        $('#btnBarChart').removeClass("btn-success").addClass("btn-default");
        $('#btnCategoryChart').removeClass("btn-success").addClass("btn-default");
        $('#btnFeederwise').removeClass("btn-success").addClass("btn-default");
        $('#btnAreaChart').removeClass("btn-success").addClass("btn-default");
        $('#btnPiechart').removeClass("btn-success").addClass("btn-default");
        $('#btnSummary').removeClass("btn-success").addClass("btn-default");

        $("#feederwisegraph").hide();
        $("#INfeederwisegraph").show();
        $("#containerLine").hide();
        $("#containerCategory").hide();
        $("#containerArea").hide()
        $("#Shop_Summary").hide();



        $('input:radio[name="INrdoFeederGraph"][value="1"]').prop('checked', true);
        $("#INaddFeeders").show();
        $("#INSubFeeders").hide();
    })



    $('input:radio[name="rdoFeederGraph"]').change(function () {
        if ($(this).val() == '1') {
            //$("#InAreaChart").show()
            $("#addFeeders").show()
            //$("#consumeAreaChart").hide()
            $("#SubFeeders").hide()
        } else {
            // $("#InAreaChart").hide()
            $("#addFeeders").hide()
            //$("#consumeAreaChart").show()
            $("#SubFeeders").show()
        }
    });

    $('input:radio[name="INrdoFeederGraph"]').change(function () {
        if ($(this).val() == '1') {
            //$("#InAreaChart").show()
            $("#INaddFeeders").show()
            //$("#consumeAreaChart").hide()
            $("#INSubFeeders").hide()
        } else {
            // $("#InAreaChart").hide()
            $("#INaddFeeders").hide()
            //$("#consumeAreaChart").show()
            $("#INSubFeeders").show()
        }
    });


    $("#Shoptab").click(function () {
        $("#ForeCast").hide();
        $("#Normal").show();
        $("#Todtbl").hide();
        $("#Performance").hide();
    })
    $("#ForeCasttab").click(function () {
        $("#Normal").hide();
        $("#ForeCast").show();
        $("#Todtbl").hide();
        $("#Performance").hide();
        var type = $("#Type").val();
        Analysis(type)

    })
    function Analysis(type) {

        var ShopId = $('#Shop_ID').val();
        $.ajax({
            url: '/RealTimeParameter/ForeCast',
            type: 'GET',
            data: ({ ConsumptionId: type, Shop: ShopId }),
            contentType: 'application/json;charset-utf-8',
            success: function (data) {
                debugger;
                $("#loading").hide();
                $("#unloading").show();
                // Plantwise
                Date1 = new Array();
                plantkwh = new Array();
                Cumulative = new Array();
                Averge = new Array();
                lastmth = new Array();
                Estimate = new Array();
                for (var i = 0; i < data.Perform.length; i++) {


                    //daywiseData.push(data.PlantResult[i].Consumption);
                    plantkwh.push(data.Perform[i].TotalConsumption);
                    //Prodution.push(data.PlantResult[i].Production);
                    //Best.push(data.PlantResult[i].Best)
                };
                for (var i = 0; i < data.allDates.length; i++) {
                    Date1.push(data.allDates[i]);

                }
                for (var i = 0; i < data.EstimatedMth.length; i++) {
                    Estimate.push(data.EstimatedMth[i]);

                }
                for (var i = 0; i < data.cumulative.length; i++) {
                    Cumulative.push(data.cumulative[i]);

                }
                for (var i = 0; i < data.AvgtMth.length; i++) {
                    Averge.push(data.AvgtMth[i]);

                }
                for (var i = 0; i < data.LastMth.length; i++) {
                    lastmth.push(data.LastMth[i]);

                }


                ShowPlantanalyze(lastmth, Averge, plantkwh, Cumulative, Estimate, Date1);


            }


        });
    }
    function ShowPlantanalyze(Lastmth, AvgMth, plntkwh, cumulative, Estimate, Date1) {

        var chart = $('#ShopForeCast').highcharts({
            chart: {
                zoomType: 'xy',
                exportChart: {
                    type: 'application/pdf',
                    filename: 'my-pdf'
                }
            },
            title: {
                text: null,
                style: {
                    class: 'HighTitle'
                }
            },
            credits: {
                enabled: false
            },
            legend: {
                algin: 'top',
                verticalAlign: 'top',
                layout: 'horizontal'
            },
            xAxis: {
                title: {
                    //text: Date1,
                    //style: {
                    //    fontWeight: 'bold'
                    //}
                },
                dataLabels: {
                    //rotation: -45,
                    //rotation: -90,
                    //allowOverlap:true,
                    enabled: true,

                },
                categories: Date1,
                labels:
                {
                    rotation: -90,

                },
                //
                crosshair: true
            },
            yAxis: [{
                title: {
                    text: 'Daily Unit',


                },
                //opposite: true,
                type: 'logarithmic',
                gridLineWidth: 0
                //minorTickInterval: 'auto'
            },
            {
                title: {
                    text: 'Cumulative Monthly Unit',



                },
                opposite: true,
                type: 'logarithmic',
                //minorTickInterval: 'auto'
                gridLineWidth: 0
            },
                //{
                //    title: {
                //        text: 'Production',



                //    },
                //    //opposite: true,
                //    //type: 'logarithmic',
                //    //minorTickInterval: 'auto',
                //},

            ],
            tooltip: {
                shared: true
            },
            series: [
                {
                    name: 'Daily Consumption',
                    data: plntkwh,
                    type: 'column',
                    yAxis: 0,
                    pointWidth: 20,
                    dataLabels: {
                        enabled: false,

                    }
                },
                {
                    name: 'Cumulative (Till Date)',
                    data: cumulative,
                    dashStyle: 'spline',
                    ///* color: "chocolate"*/,
                    yAxis: 1,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    }
                },
                {
                    name: 'Averge Monthly Consumption',
                    data: AvgMth,
                    type: 'column',
                    yAxis: 1,
                    pointWidth: 20,
                    dataLabels: {
                        enabled: false,

                    }
                },
                {
                    name: 'Last Month Billed Consumption',
                    data: Lastmth,
                    type: 'column',
                    yAxis: 1,
                    pointWidth: 20,
                    dataLabels: {
                        enabled: false,

                    }
                },

                {
                    name: 'This Month Estimate ',
                    data: Estimate,
                    dashStyle: 'shortdot',
                    //color: "chocolate",
                    yAxis: 1,
                    //pointWidth: 10,
                    dataLabels: {
                        enabled: false,

                    },
                },
            ],
            exporting: {
                enabled: true
            }
        });




    }
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $today = new Date();
        $yesterday = new Date($today);
        $yesterday.setDate($today.getDate() - 1);
        var $dd = $yesterday.getDate();
        var $mm = $yesterday.getMonth() + 1;
        var $yyyy = $yesterday.getFullYear();
        if ($dd < 10) { $dd = '0' + $dd } if ($mm < 10) { $mm = '0' + $mm } $yesterday = $dd + '/' + $mm + '/' + $yyyy;
        $("#StartDate").val($yesterday);
        $("#EndDate").val($yesterday);
        $("#StartDate1").val($yesterday);
        $("#EndDate1").val($yesterday);

        var StartDate = $("#StartDate").val();
        var EndDate = $("#EndDate").val();

        $("#ddlDateRange").change(function () {

            if ($("#ddlDateRange").val() == "1") {
                $("#StartDate").prop('readonly', true);
                $("#EndDate").prop('readonly', true);
                $today = new Date();
                $("#Minutes").show();
                $('#NOWorkingDay').hide();
                $('#NOWorkingDay option').prop("selected", false);

                $yesterday = new Date($today);
                $yesterday.setDate($today.getDate());
                var $dd = $yesterday.getDate();
                var $mm = $yesterday.getMonth() + 1;
                var $yyyy = $yesterday.getFullYear();
                if ($dd < 10) { $dd = '0' + $dd } if ($mm < 10) { $mm = '0' + $mm } $yesterday = $dd + '/' + $mm + '/' + $yyyy;
                $("#StartDate").val($yesterday);
                $("#EndDate").val($yesterday);
                //$("#StartDate").datepicker({ format: 'dd/mm/yyyy' }).datepicker("setDate", new Date());
                //$("#EndDate").datepicker({ format: 'dd/mm/yyyy' }).datepicker("setDate", new Date());

            }
            else if ($("#ddlDateRange").val() == "2") {
                $("#Minutes").show();
                $('#NOWorkingDay').hide();
                $('#NOWorkingDay option').prop("selected", false);
                $("#StartDate").prop('readonly', true);
                $("#EndDate").prop('readonly', true);
                $today = new Date();
                $yesterday = new Date($today);
                $yesterday.setDate($today.getDate() - 1);
                var $dd = $yesterday.getDate();
                var $mm = $yesterday.getMonth() + 1;
                var $yyyy = $yesterday.getFullYear();
                if ($dd < 10) { $dd = '0' + $dd } if ($mm < 10) { $mm = '0' + $mm } $yesterday = $dd + '/' + $mm + '/' + $yyyy;
                $("#StartDate").val($yesterday);
                $("#EndDate").val($yesterday);
            }
            else if ($("#ddlDateRange").val() == "3") {
                $("#Minutes").hide();
                $('#NOWorkingDay').show();
                $('#Minutes option').prop("selected", false);
                $('#Minutes option').prop("selected", false);
                $("#StartDate").prop('readonly', true);
                $("#EndDate").prop('readonly', true);
                $today = new Date();
                $startDate = new Date($today);
                //$startDate.setDate($today.getDate() - $today.getDay());
                $endDate = new Date($today);
                //$endDate.setDate($startDate.getDate() + 7);


                var $mm = $startDate.getMonth() + 1;
                var $yyyy = $startDate.getFullYear();
                if ($mm < 10) { $mm = '0' + $mm } $startDate = '01' + '/' + $mm + '/' + $yyyy;

                $("#StartDate").val($startDate);


                var $endDate = new Date($endDate.getFullYear(), $endDate.getMonth() + 1, 0);
                var $dd1 = $endDate.getDate();
                var $mm1 = $endDate.getMonth() + 1;
                var $yyyy1 = $endDate.getFullYear();

                if ($dd1 < 10) { $dd1 = '0' + $dd1 } if ($mm1 < 10) { $mm1 = '0' + $mm1 } $endDate = $dd1 + '/' + $mm1 + '/' + $yyyy1;
                $("#EndDate").val($endDate);
            }
            else if ($("#ddlDateRange").val() == "4") {
                $("#Minutes").hide();
                $('#NOWorkingDay').show();
                $('#Minutes option').prop("selected", false);
                $("#StartDate").prop('readonly', true);
                $("#EndDate").prop('readonly', true);
                $today = new Date();
                $startDate = new Date($today);
                $endDate = new Date($today);
                //******************* Added by Ajay 01012019
                var prevDate = new Date($startDate.getFullYear(), $startDate.getMonth() - 1, 1);
                var $mm = prevDate.getMonth() + 1;
                var $yyyy = prevDate.getFullYear();

                if ($mm < 10) { $mm = '0' + $mm } prevDate = '01' + '/' + $mm + '/' + $yyyy;

                $("#StartDate").val(prevDate);
                //******************* Added by Ajay 01012019
                var $endDate = new Date($endDate.getFullYear(), $endDate.getMonth(), 0);
                var $dd1 = $endDate.getDate();
                var $mm1 = $endDate.getMonth() + 1;
                var $yyyy1 = $endDate.getFullYear();

                if ($dd1 < 10) { $dd1 = '0' + $dd1 } if ($mm1 < 10) { $mm1 = '0' + $mm1 } $endDate = $dd1 + '/' + $mm1 + '/' + $yyyy1;
                $("#EndDate").val($endDate);
            }

            else {

                //$("#StartDate").prop('readonly', false);
                //$("#EndDate").prop('readonly', false);
                //$("#StartDate").prop('disabled', false);
                //$("#EndDate").prop('disabled', false);
                //$("#StartDate").val('');
                //$("#EndDate").val('');
                //$('#Minutes option').prop("selected", false);
                //$('#NOWorkingDay').show();

                $("#StartDate").datetimepicker(
                    {
                        format: 'm/d/y H:i',
                        defaultDate: new Date(),
                        timepickerScrollbar: true,
                        hours12: false
                    });
                $("#EndDate").datetimepicker(
                    {
                        format: 'm/d/Y H:i',
                        defaultDate: new Date(),
                        timepickerScrollbar: true,
                        hours12: false
                    });

                $("#Minutes").hide();
                $('#NOWorkingDay').show();

                $('#Minutes option').prop("selected", false);
                $("#StartDate").prop('readonly', false);
                $("#EndDate").prop('readonly', false);
                $("#StartDate").prop('disabled', false);
                $("#EndDate").prop('disabled', false);


                var date1 = new Date();
                var toDate = new Date();
                toDate = moment(toDate).format("MM/DD/YY HH:mm");


                var time = moment().toDate();  // This will return a copy of the Date that the moment uses

                time.setHours(06);
                time.setMinutes(30);
                time.setSeconds(0);
                time.setMilliseconds(0);
                date1 = moment(time).format("MM/DD/YY HH:mm");
                $('#StartDate').val(date1);
                $('#EndDate').val(toDate);
                $('#Minutes').show();
                $('#MinuteRange option').prop("selected", true);

                $('#NOWorkingDay').hide();
                $('#Reason_ID option').prop("selected", false);
            }



        });

        $('#btnSubmit').click(function () {

            $("#loading").show();
            $("#shopGrpah").hide();
            $("#feedergraph").hide();
            $("#shopcontainer").html("");
            $("#container").html("");
            $("#containerLine").html("");
            $("#containerArea").show();
            $("#containerLine").show();
            $("#containerCategory").show();
            $("#feederwisegraph").show();
            $("#addFeeders").show();
            $("#SubFeeders").show();


            $('#btnBarChart').removeClass("btn-success").addClass("btn-default");
            $('#btnCategoryChart').removeClass("btn-success").addClass("btn-default");
            $('#btnPiechart').removeClass("btn-success").removeClass("btn-default");
            $('#btnPiechart').removeClass("btn-success").removeClass("btn-default");
            $('#btnAreaChart').removeClass("btn-success").removeClass("btn-default");
            $('#btnSummary').addClass("btn-success").addClass("btn-default");


            var Formdate = $("#StartDate").val();
            var Todate = $("#EndDate").val();
            var ddlformat = $("#ddlDateRange").val()
            var ShopId = $('#Shop_ID').val();
            var Shift = $('#Shiftwise').val();
            var Minute = $('#MinuteRange').val();
            var Reason = $('#Reason_ID').val();
            var Category = $('#Type').val();


            if (Formdate != Todate) {
                Minute = '';
            }

            if (ddlformat == "5") {
                debugger;
                dt1 = new Date(Formdate);
                dt2 = new Date(Todate);
                Formdate = moment(Formdate).format("DD/MM/YY HH:mm");
                Todate = moment(Todate).format("DD/MM/YY HH:mm");
                var diff = (dt2.getTime() - dt1.getTime()) / 1000;
                diff /= (60 * 60);
                var diffval = diff;

                if (diffval <= 24) {
                    Minute = '60';
                }
            }
            $.ajax({
                url: '/RealTimeParameter/ShopwiseSummay',
                type: 'GET',
                data: ({ Formdate: Formdate, Todate: Todate, ddlformat: ddlformat, Shop: ShopId, Shiftwise: Shift, Minute: Minute, Noworking: Reason, ConsumptionId: Category }),
                contentType: 'application/json;charset-utf-8',
                success: function (data) {
                    debugger;
                    $("#loading").hide();
                    $("#shopGrpah").show();
                    $("#feedergraph").show();
                    $("#containerArea").hide();
                    $("#containerLine").hide();
                    $("#feederwisegraph").hide();
                    $("#containerCategory").hide();
                    $("#Shop_Summary").show();


                    {
                        var SpecficDataunit = '@ViewBag.specUnit';
                        var unit = '@ViewBag.ConsumeType';
                        var SpecficunitID = '@ViewBag.UnitId';

                        Shopkwh = new Array();
                        daywiseData = new Array();
                        Target = new Array();
                        Production = new Array();
                        Best = new Array();
                        PlantTarget = new Array();
                        Cumulative = new Array();
                        Averge = new Array();

                        // shop wise Data
                        for (var i = 0; i < data.ShopResult.length; i++) {

                            daywiseData.push(data.ShopResult[i].Consumption);
                            Shopkwh.push(data.ShopResult[i].TotalConsumption);
                            Production.push(data.ShopResult[i].Production);
                            Best.push(data.ShopResult[i].Best)
                        };
                        Date1 = new Array();
                        for (var i = 0; i < data.allDates.length; i++) {
                            debugger;
                            Date1.push(data.allDates[i]);
                            Target.push(data.Target[i])
                        }
                        for (var i = 0; i < data.Cumulative.length; i++) {
                            Cumulative.push(data.Cumulative[i]);

                        }
                        for (var i = 0; i < data.Averge.length; i++) {
                            Averge.push(data.Averge[i]);

                        }
                        if (ddlformat == '3' || ddlformat == '4' || ddlformat == '5' && Minute == "") {
                            Best = new Array();
                            for (var i = 0; i < data.BestData.length; i++) {
                                Best.push(data.BestData[i]);

                            }

                            ShowPlantChart1(Shopkwh, Date1, daywiseData, SpecficDataunit, Production, Best, Target, unit, Cumulative, Averge);
                        }
                        else {
                            debugger;
                            shopwisechart(Shopkwh, Date1, daywiseData, SpecficDataunit, unit, Cumulative, Averge);
                        }

                        //   Shop Summery
                        $("#starts").html(data.starts);
                        $("#ends").html(data.ends);
                        if (data.ShopSummary.length > 0) {


                            $("#tbl_maxdate").html(data.ShopSummary[0].maxdate);
                            $("#tbl_max").html(data.ShopSummary[0].maxpower);
                            $("#tbl_bestpro").html(data.ShopSummary[0].bestprod);
                            $("#tbl_bestpower").html(data.ShopSummary[0].bestpower);
                            $("#tbl_bestdate").html(data.ShopSummary[0].bestdate);
                            $("#tbl_best").html(data.ShopSummary[0].best);
                            $("#tbl_totalAvgsec").html(data.ShopSummary[0].totalavgsec);
                            $("#tbl_totalpro").html(data.ShopSummary[0].totalprod);
                            $("#tbl_totalavg").html(data.ShopSummary[0].totalavg);
                            $("#tbl_total").html(data.ShopSummary[0].totalpower);

                        }
                        else {
                            $("#tbl_maxdate").html("");
                            $("#tbl_max").html("");
                            $("#tbl_bestpro").html("");
                            $("#tbl_bestpower").html("");
                            $("#tbl_bestdate").html("");
                            $("#tbl_best").html("");
                            $("#tbl_totalAvgsec").html("");
                            $("#tbl_totalpro").html("");
                            $("#tbl_totalavg").html("");
                            $("#tbl_total").html("");
                        }

                        // Catergory Data
                        var Category_data = [];
                        for (var i = 0; i < data.CategoryData.length; i++) {


                            //kwhdata.push(item.Y);
                            //feeder.push(item.Label);
                            Category_data.push({ "Name": data.CategoryData[i].Label, "y": data.CategoryData[i].Y});
                        }
                        ShowCategoryChart(Category_data);

                        // Area wise Data
                        var Area_Indata = [];
                        for (var i = 0; i < data.AreaInomerData.length; i++) {


                            //kwhdata.push(item.Y);
                            //feeder.push(item.Label);
                            Area_Indata.push({ "Name": data.AreaInomerData[i].Label, "y": data.AreaInomerData[i].Y, "AreaId": data.AreaInomerData[i].AreaId });
                        }
                        ShowAreainchart(Area_Indata);
                        $("#InAreatbl tbody").html("");
                        if (Area_Indata.length > 0) {
                            $("#InAreatbl tbody").html("");
                            var Total = 0;
                            var markup = "";
                            for (var i = 0; i < Area_Indata.length; i++) {
                                debugger;

                                Total += Area_Indata[i].y
                                if (Area_Indata[i].AreaId == 0) {

                                    markup = "<tr><td>" + Area_Indata[i].Name + "</td><td>" + Area_Indata[i].y + "</td></tr>"
                                }
                                else {
                                    markup = "<tr><td style = 'width:50%; WORD-BREAK: break-word'><button class='boxshadow' id='realtime'  data-target='#Areawisefeeder' data-toggle='modal'   value=" + Area_Indata[i].AreaId + ", onclick ='SubArea(" + Area_Indata[i].AreaId + ")'>" + Area_Indata[i].Name + "</button></td><td style = 'width:50%; WORD-BREAK: break-word'>" + Area_Indata[i].y + "</td></tr>"

                                }

                                $("#InAreatbl tbody").append(markup);
                            }
                            var markup = "<tr><td style = 'width:50%; WORD-BREAK: break-word'>" + "Area wise Total" + "</td><td style = 'width:50%; WORD-BREAK: break-word'>" + Total + "</td></tr>"
                            $("#InAreatbl tbody").append(markup);
                        }
                        else {
                            $("#InAreatbl tbody").html("");
                        }

                        // Addition Feeder Data
                        var id = 'addFeederpiechart'
                        var Add_Feederdata = [];
                        $("#feederwiseConsumptiontbl tbody").html("");
                        for (var i = 0; i < data.AddFeederData.length; i++) {


                            //kwhdata.push(item.Y);
                            //feeder.push(item.Label);
                            Add_Feederdata.push({ "Name": data.AddFeederData[i].Label, "y": data.AddFeederData[i].Y });
                        }
                        //feeerwiseLineChart(kwhdata, feeder);
                        feederwisechart(Add_Feederdata, id);

                        if (Add_Feederdata.length > 0) {
                            for (var i = 0; i < Add_Feederdata.length; i++) {

                                markup = "<tr><td style = 'width:50%; WORD-BREAK: break-word'>" + Add_Feederdata[i].Name + "</td><td style = 'width:50%; WORD-BREAK: break-word'>" + Add_Feederdata[i].y + "</td></tr>"

                                $("#feederwiseConsumptiontbl tbody").append(markup);
                            }


                        }
                        else {
                            $("#feederwiseConsumptiontbl tbody").html("");
                        }



                        // sub Feeder Data
                        var id = 'SubFeederspichart'
                        $("#subfeederwiseConsumptiontbl tbody").html("");
                        var Sub_Feederdata = [];
                        for (var i = 0; i < data.SubFeederData.length; i++) {


                            //kwhdata.push(item.Y);
                            //feeder.push(item.Label);
                            Sub_Feederdata.push({ "Name": data.SubFeederData[i].Label, "y": data.SubFeederData[i].Y });
                        }
                        feederwisechart(Sub_Feederdata, id);
                        if (Sub_Feederdata.length > 0) {
                            for (var i = 0; i < Sub_Feederdata.length; i++) {

                                markup = "<tr><td style = 'width:50%; WORD-BREAK: break-word'>" + Sub_Feederdata[i].Name + "</td><td style = 'width:50%; WORD-BREAK: break-word'>" + Sub_Feederdata[i].y + "</td></tr>"

                                $("#subfeederwiseConsumptiontbl tbody").append(markup);
                            }


                        }
                        else {
                            $("#subfeederwiseConsumptiontbl tbody").html("");
                        }

                        // Add Feeder Perto
                        kwhdata = new Array();
                        feeder = new Array();
                        for (var i = 0; i < data.FeederParetoData.length; i++) {


                            kwhdata.push(data.FeederParetoData[i].Y);
                            feeder.push(data.FeederParetoData[i].Label);

                        }
                        feeerwiseLineChart(kwhdata, feeder);
                    }
                }
            });
        });





    });
</script>

<script type="text/javascript">
    $(function () {
        //$("#EndDate").change(function () {

        //    var Formdate = $("#StartDate").val();
        //    var Todate = $("#EndDate").val();
        //    var dateRange = $("#ddlDateRange").val()
        //    if (dateRange == "5" && Formdate == Todate) {
        //        $('#Minutes').show();
        //        $('#MinuteRange option').prop("selected", true);
        //    }
        //    else {
        //        $('#Minutes').hide();
        //        $('#Minutes option').prop("selected", false);
        //    }
        //});
        $("#EndDate").change(function () {
            debugger;
            var Formdate = $("#StartDate").val();
            var Todate = $("#EndDate").val();
            var dateRange = $("#ddlDateRange").val();
            if (Formdate != "") {
                dt1 = new Date(Formdate);
                dt2 = new Date(Todate);
                var diff = (dt2.getTime() - dt1.getTime()) / 1000;
                diff /= (60 * 60);
                var diffval = diff;
                if (dateRange == "5" && diffval <= 24) {
                    $('#Minutes').show();
                    $('#MinuteRange option').prop("selected", true);

                    $('#NOWorkingDay').hide();
                    $('#Reason_ID option').prop("selected", false);
                }
                else {
                    $('#Minutes').hide();
                    $('#Minutes option').prop("selected", false);

                    $('#NOWorkingDay').show();
                    $('#Reason_ID option').prop("selected", true);
                }

                if ((Date.parse(Formdate) > Date.parse(Todate))) {

                    $('.EndDate').html("To date should be greater than or equal to From date");
                    document.getElementById("EndDate").value = "";
                }
            }
        });




        $("#StartDate").change(function () {
            debugger;
            var Formdate = $("#StartDate").val();
            var Todate = $("#EndDate").val();
            var dateRange = $("#ddlDateRange").val();

            if (Todate != "") {
                dt1 = new Date(Formdate);
                dt2 = new Date(Todate);
                var diff = (dt2.getTime() - dt1.getTime()) / 1000;
                diff /= (60 * 60);
                var diffval = diff;

                //alert(diff);
                if (dateRange == "5" && diffval <= 24) {
                    $('#Minutes').show();
                    $('#MinuteRange option').prop("selected", true);

                    $('#NOWorkingDay').hide();
                    $('#Reason_ID option').prop("selected", false);
                }
                else {
                    $('#Minutes').hide();
                    $('#MinuteRange option').prop("selected", false);

                    $('#NOWorkingDay').show();
                    $('#Reason_ID option').prop("selected", true);
                }
                if ((Date.parse(Formdate) > Date.parse(Todate))) {

                    $('.EndDate').html("To date should be greater than or equal to From date");
                    document.getElementById("EndDate").value = "";
                }
            }

        });
    })
    function FeederReport(feederId) {

        var date1 = new Date();
        var toDate = new Date();
        toDate = moment(toDate).format("DD/MM/YY HH:mm");


        var time = moment().toDate();  // This will return a copy of the Date that the moment uses

        time.setHours(06);
        time.setMinutes(30);
        time.setSeconds(0);
        time.setMilliseconds(0);
        date1 = moment(time).format("DD/MM/YY HH:mm");
        $('#Feeder_ID').val(feederId)
        $('#FromDate').val(date1);
        $('#ToDate').val(toDate);
        var ShopId = $('#Shop_ID').val();
        var startdate = $('#FromDate').val();
        var enddate = $('#ToDate').val();
        var Parameter = $('#ParameterID1').val();

        $("#FeederwiseModalsdetail").html();
        $("#FeederwiseModalsdetail").empty();
        $.ajax({
            url: '/RealTimeParameter/Feederwisedetails',
            type: 'GET',
            data: ({ Fromdate: startdate, ToDate: enddate, Shop: ShopId, Feeder: feederId, Parameter: Parameter }),
            contentType: 'application/json;charset-utf-8',
            success: function (data) {

                if (data != "") {
                    $("#FeederwiseModalsdetail").html(data);
                }
            }
        });
    }
    function FeederTrend(feederId) {

        // $("#Trendcloading").show();
        var date1 = new Date();
        var toDate = new Date();
        toDate = moment(toDate).format("DD/MM/YY HH:mm");


        var time = moment().toDate();  // This will return a copy of the Date that the moment uses

        time.setHours(06);
        time.setMinutes(30);
        time.setSeconds(0);
        time.setMilliseconds(0);
        date1 = moment(time).format("DD/MM/YY HH:mm");
        $('#FeederTrend_ID').val(feederId)
        $('#FromDateTrend').val(date1);
        $('#ToDateTrend').val(toDate);
        var temp = new Array();
        var Parameter = $.map($('#Parameter_ID'), function (e) {

            return $(e).val();
        });
        for (var i = 0; i < Parameter.length; i++) {

            temp.push(Parameter[i]);
        }
        //var feederId = Feeder[i];
        var ShopId = $('#Shop_ID').val();
        var startdate = $('#FromDateTrend').val();
        var enddate = $('#ToDateTrend').val();
        $("#FeederwiseTrendchart").html();

        //$("#FeederwiseModalsdetail").html();
        $("#FeederwiseTrendchart").empty();
        //$.ajax({
        //    url: '/RealTimeParameter/FeederwiseTrend',
        //    //type: 'GET',
        //    //data: ({ Fromdate: startdate, ToDate: enddate, Shop: ShopId, feeder: feederId, Parameter: ParameterId }),
        //    contentType: 'application/json;charset-utf-8',
        //    data: "{ 'Fromdate': '" + startdate + "', 'ToDate': '" + enddate + "',  'Shop': '" + ShopId + "', 'feeder': '" + feederId + "',  'temp': '" + temp + "'}",
        //    dataType: "json",
        //    type: "POST",
        //    contentType: "application/json; charset=utf-8",
        //    success: function (data) {
        //
        //        var statuslist = new Array();
        //        FeederData = new Array();
        //        unit = new Array();
        //        name = new Array();
        //        ddl = new Array();
        //        var feeder = data.FeederName;
        //        for (var i = 0; i < data.allDates.length; i++) {
        //            //ddl.push(data.allTimes[i]);
        //            ddl.push(data.allDates[i]);
        //            //cbmData.push(data.CBMdatas[i]);
        //        }
        //        for (var i = 0; i < data.Units.length; i++)                {
        //
        //            var statusdata = {};
        //            var y = i + 1;
        //            statusdata.ID = y;
        //            statusdata.unit = data.Units[i];
        //            if (statuslist.length > 0) {
        //
        //                var k = 0;
        //                for (var j = 0; j < statuslist.length; j++) {
        //
        //                    if (statuslist[j].unit == unit[i]) {

        //                        break;
        //                    }
        //                    k++;
        //                }
        //                if (statuslist.length < k) {
        //                    statuslist.push(statusdata);
        //                }


        //            }
        //            else {
        //                statuslist.push(statusdata);
        //            }

        //        }
        //        $("#Trendcloading").hide();
        //        ShowFeeder(ddl, feeder);
        //        for (var j = 0; j < data.AllConsumption.length; j++) {
        //
        //            cbmData1 = new Array();

        //            var paraname = data.Names[j];
        //            var unit = data.Units[j]
        //            //unit.push(data.units[j]);
        //            var y = j + 1;
        //            for (var m = 0; m < statuslist.length; m++) {
        //
        //                if (statuslist[m].unit == data.Units[j]) {
        //                    y = statuslist[m].ID;
        //                    break;
        //                }

        //            }


        //            //paraname = data.paramNames[j];
        //            for (var i = 0; i < data.AllConsumption[j].length; i++) {
        //                FeederData.push(data.AllConsumption[j][i]);

        //            }
        //            //ShowCellGraph(cbmData, paraname, y, GroupID);
        //
        //            ShowFeederTrend(FeederData, paraname, y, unit);

        //        }
        //        //$("#FeederwiseModalsdetail").html(data);

        //    }
        //});
    }
    function Mailalert() {

        $("#Mailalerttbl").html();
        var ShopId = $('#Shop_ID').val();
        $("#Mailalerttbl").empty();
        $.ajax({
            url: '/RealTimeParameter/alertdata',
            type: 'GET',
            data: ({ Shop: ShopId }),
            contentType: 'application/json;charset-utf-8',
            success: function (data) {

                var res = "";
                if (data.Performace.length > 0) {
                    res += ' <table class="table table-striped table-bordered" id ="scantable">';
                    res += ' <tr>';
                    res += ' <th>'; res += ' Alert Name'; res += '</th>'
                    res += ' <th>'; res += ' Feedar Name.'; res += '</th>';
                    res += ' <th>'; res += ' Tag Index'; res += '</th>';
                    res += ' <th>'; res += 'Previous Reading'; res += '</th>';
                    res += ' <th>'; res += 'Previous Reading Time'; res += '</th>';
                    res += ' <th>'; res += '   Latest Reading'; res += '</th>';
                    res += ' <th>'; res += '   Latest Reading Time'; res += '</th>';
                    res += ' </tr>';
                    for (var i = 0; i < data.Performace.length; i++) {
                        res += '';
                        res += ' <tr>';
                        res += ' <td >'; res += '' + data.Performace[i].alert_Name; res += '</td>';
                        res += ' <td >'; res += '' + data.Performace[i].FeederName; res += '</td>';
                        res += ' <td >'; res += '' + data.Performace[i].TagIndex; res += '</td>';
                        res += ' <td >'; res += '' + data.Performace[i].Pervious_Value; res += '</td>';
                        res += ' <td >'; res += '' + data.Performace[i].Pervious_Time; res += '</td>';
                        res += ' <td >'; res += '' + data.Performace[i].Latest_Value; res += '</td>';
                        res += ' <td >'; res += '' + data.Performace[i].Latest_Time; res += '</td>';

                        res += ' </tr>';
                    }

                    res += ' <table width="100%">';
                }
                res += ' </br>';
                if (data.ConstantData.length > 0) {
                    res += ' <table class="table table-striped table-bordered" id ="scantable">';
                    res += ' <tr>';
                    res += ' <th>'; res += ' Alert Name'; res += '</th>'
                    res += ' <th>'; res += ' Feedar Name.'; res += '</th>';
                    res += ' <th>'; res += ' Tag Index'; res += '</th>';
                    res += ' <th>'; res += 'Constant Reading Since '; res += '</th>';
                    res += ' <th>'; res += 'Value Logged'; res += '</th>';
                    res += ' <th>'; res += '   Latest Reading Time'; res += '</th>';
                    res += ' </tr>';
                    for (var i = 0; i < data.ConstantData.length; i++) {
                        res += '';
                        res += ' <tr>';
                        res += ' <td >'; res += '' + data.ConstantData[i].alert_Name; res += '</td>';
                        res += ' <td >'; res += '' + data.ConstantData[i].FeederName; res += '</td>';
                        res += ' <td >'; res += '' + data.ConstantData[i].TagIndex; res += '</td>';
                        res += ' <td >'; res += '' + data.ConstantData[i].Latest_Value; res += '</td>';
                        res += ' <td >'; res += '' + data.ConstantData[i].Value_Logged; res += '</td>';

                        res += ' <td >'; res += '' + data.ConstantData[i].Latest_Time; res += '</td>';

                        res += ' </tr>';
                    }

                    res += ' <table width="100%">';
                }
                //$("#Tracebilitydata").html(res);
                $("#Mailalerttbl").html(res);

            }
        });

    }
    function ShopwiseReport() {

        //var date1 = new Date();
        //var toDate = new Date();
        //toDate = moment(toDate).format("DD/MM/YY HH:mm");


        //var time = moment().toDate();  // This will return a copy of the Date that the moment uses

        //time.setHours(06);
        //time.setMinutes(30);
        //time.setSeconds(0);
        //time.setMilliseconds(0);
        var date1 = new Date();
        var toDate = new Date();
        toDate = moment(toDate).format("DD/MM/YY HH:mm:ss");
        var fromDate = new Date(date1.getTime() - 60 * 60000);
        fromDate = moment(fromDate).format("DD/MM/YY HH:mm:ss");
        //$('#fromdateprediction').val(fromDate);
        //$('#todateprediction').val(toDate);

        $('#FromDateShop').val(fromDate);
        $('#ToDateShop').val(toDate);
    }
    function Trend() {
        //$("#Parameter_ID").select2({
        //    placeholder: 'Add Parameter',
        //    allowClear: true,
        //    multiple: 'multiple'
        //});
        //$("#Feeder").select2({

        //    allowClear: true,

        //});

    }
    function ShopwiseLiveReport() {
        var ShopId = $('#Shop_ID').val();
        var path = "/ShiftWiseReports/ExportshopLiveData?Shop=" + ShopId;

        //window.open(path, '_blank');
        window.open(path);
    }
    function ShowFeeder(ddl, Feeder) {


        $("#FeederwiseTrendchart").highcharts({
            chart: {
                zoomType: 'xy',



                events: {

                    addSeries: function () {

                    },
                    addAxis: function () {

                    }
                }
            },
            title: {
                text: Feeder,

            },
            credits: {
                enabled: false
            },
            xAxis: [{
                categories: ddl,
                labels: {
                    rotation: -45,
                },

                crosshair: true

            }],
            //yAxis: [{
            //    min: 0,
            //    //max: 12233344,
            //    startOnTick: false,
            //    endOnTick: false,
            //}],
        });

    }
    function ShowFeederTrend(FeederData, paraname, y, unit) {

        var chart = $("#FeederwiseTrendchart").highcharts();
        const axisId1 = y
        //chart.hideLoading();
        //$("#loading__" + GroupID).hide();

        chart.addAxis({


            id: axisId1,
            title: {
                text: paraname + ' ' + '(' + unit + ')',
            },
            dataLabels: {
                enabled: false
            },
            min: 0,
            //max: 12233344,
            startOnTick: false,
            endOnTick: false,
            //type: 'logarithmic',
            //minorTickInterval: 'auto'
        })
        chart.addSeries(
            {

                plotOptions: {
                    connectNulls: true
                },
                name: paraname,
                connectNulls: true,
                type: 'spline',
                yAxis: axisId1,
                dataLabels: {
                    enabled: false
                },


                data: FeederData,




            })

    }
    function ShowComparisonchart(ddl, titleName, YAxisText, minum) {

        //$("#loading").hide();
        $("#loading").css("display", "none");
        $('#FeederComparisonchart').highcharts({
            chart: {
                zoomType: 'xy',
                events: {

                    addSeries: function () {

                    }
                }
            },
            title: {
                text: titleName,

            },
            credits: {
                enabled: false
            },
            xAxis: {
                categories: ddl,
                lineWidth: 0,
                minorGridLineWidth: 0,
                lineColor: 'transparent'
            },
            yAxis: {
                title: {
                    text: YAxisText,

                },

                type: 'logarithmic',
                gridLineWidth: 0,
                //minorTickInterval: 'auto',
                min: minum,

                //type: 'logarithmic',
                //minorTickInterval: 'auto',
                //gridLineColor: '#ffffff',
                //lineColor: '#ffffff',



            },

        });
    }
    function ShowComparisonData(TotalConsumtion, Feeder) {

        var chart = $('#FeederComparisonchart').highcharts();
        chart.hideLoading();
        $("#loading").css("display", "none");

        chart.addSeries(
            {
                name: Feeder,
                type: 'spline',
                dataLabels: {
                    enabled: false
                },
                data: TotalConsumtion
            })

    }



    function Showfeederchart(ddl, titleName, YAxisText) {

        // $("#loading").css("display", "none");
        $('#Areawisefeederchart').highcharts({
            chart: {
                zoomType: 'xy',
                events: {

                    addSeries: function () {

                    }
                }
            },
            title: {
                text: titleName,

            },
            credits: {
                enabled: false
            },
            xAxis: {
                categories: ddl
            },
            yAxis: {
                title: {
                    text: YAxisText,

                },
                type: 'logarithmic',
                minorTickInterval: 'auto',
            },
            yAxis: {
                title: {
                    text: YAxisText,

                },

            },
        });
    }

    function ShowfeederchartData(TotalConsumtion, Feeder, cumulative, Idel, avg) {

        var chart = $('#Areawisefeederchart').highcharts();
        chart.hideLoading();
        //$("#loading").css("display", "none");

        chart.addSeries(
            {
                name: Feeder,
                type: 'spline',
                dataLabels: {
                    enabled: false
                },
                data: TotalConsumtion
            })
        chart.addSeries(
            {
                name: 'cumulative',
                type: 'spline',
                dataLabels: {
                    enabled: false
                },
                data: cumulative
            })
        chart.addSeries(
            {
                name: 'Rated Load',
                type: 'spline',
                dataLabels: {
                    enabled: false
                },
                data: Idel
            })
        chart.addSeries(
            {
                name: 'Average',
                type: 'spline',
                dataLabels: {
                    enabled: false
                },
                data: avg
            })
    }


    function ShowfeederCBM(ddl, titleName, units) {

        // $("#loading").css("display", "none");
        $('#Areawisefeederchart').highcharts({
            chart: {
                zoomType: 'xy',
                events: {

                    addSeries: function () {

                    }
                }
            },
            title: {
                text: titleName,

            },
            credits: {
                enabled: false
            },
            xAxis: {
                categories: ddl
            },
            yAxis: [{
                title: {
                    text: units[1],
                    //style: {
                    //    fontWeight: 'bold'
                    //}
                },
                //type: 'logarithmic',
                //minorTickInterval: 'auto'
            },
            {
                title: {
                    text: units[0],
                    //style: {
                    //    fontWeight: 'bold'
                    //}
                },
                opposite: true,
                type: 'logarithmic',
                //minorTickInterval: 'auto'
                gridLineWidth: 0
            },
            ],
        });
    }
    function ShowfeederCBMData(TotalConsumtion, Names, units, cumulative, Idel, avg, CBM) {

        var chart = $('#Areawisefeederchart').highcharts();
        chart.hideLoading();
        //$("#loading").css("display", "none");

        chart.addSeries(
            {
                name: Names[0],
                type: 'spline',
                yAxis: 1,
                dataLabels: {
                    enabled: false
                },
                data: TotalConsumtion
            })
        chart.addSeries(
            {
                name: 'cumulative',
                type: 'spline',
                yAxis: 1,
                dataLabels: {
                    enabled: false
                },
                data: cumulative
            })
        chart.addSeries(
            {
                name: 'Rated Load',
                type: 'spline',
                yAxis: 1,
                dataLabels: {
                    enabled: false
                },
                data: Idel
            })
        chart.addSeries(
            {
                name: 'Average',
                type: 'spline',
                yAxis: 1,
                dataLabels: {
                    enabled: false
                },
                data: avg
            })

        chart.addSeries(
            {
                name: Names[1],
                type: 'spline',
                yAxis: 0,
                dataLabels: {
                    enabled: false
                },
                data: CBM
            })
    }





    function ShowComparisoncumulativeData(TotalConsumtion, Feeder, Ideal, cumulative) {

        var chart = $('#FeederComparisonchart').highcharts();
        chart.hideLoading();
        $("#loading").css("display", "none");

        chart.addSeries(
            {
                name: Feeder,
                type: 'spline',
                dataLabels: {
                    enabled: false
                },
                data: TotalConsumtion
            })
        chart.addSeries(
            {
                name: Feeder + '_Rated Load',
                type: 'spline',
                dataLabels: {
                    enabled: false
                },
                data: Ideal
            })
        chart.addSeries(
            {
                name: Feeder + '_cumulative',
                type: 'spline',
                dataLabels: {
                    enabled: false
                },
                data: cumulative
            })

    }
    function AreawiseTrend() {

        $("#AreawiseTrendloading").show();
        $("#AreawiseTrendchart").html("");
        $("#AreawisePareto").html("");

        //$('#Area').prop('disabled', false);
        //$('#Area option').prop("selected", false);
        //$('#CBM option').prop("selected", false);
        $('#CBM').val('')
        $("#CBM").html('');
        $(".select2-selection__rendered").empty()
        $("#CBM, .select2-selection__rendered").empty()


        $("#CBMDate").val('');

        var Formdate = $("#StartDate").val();
        var Todate = $("#EndDate").val();

        var ddlformat = $("#ddlDateRange").val()
        var ShopId = $('#Shop_ID').val();
        var Shift = $('#Shiftwise').val();
        var Minute = $('#MinuteRange').val();
        var Reason = $('#Reason_ID').val();



        var Category = $('#Type').val();

        if (Formdate != Todate) {
            Minute = '';
        }
        if (ddlformat == "5") {
            debugger;
            dt1 = new Date(Formdate);
            dt2 = new Date(Todate);
            Formdate = moment(Formdate).format("DD/MM/YY HH:mm");
            Todate = moment(Todate).format("DD/MM/YY HH:mm");
            var diff = (dt2.getTime() - dt1.getTime()) / 1000;
            diff /= (60 * 60);
            var diffval = diff;

            if (diffval <= 24) {
                Minute = '60';
            }
        }

        $.ajax({
            url: '/RealTimeParameter/AreawiseTrend',
            type: 'GET',
            data: ({ Formdate: Formdate, Todate: Todate, ddlformat: ddlformat, Shop: ShopId, Shiftwise: Shift, Minute: Minute, Reason: Reason, ConsumptionId: Category }),
            contentType: 'application/json;charset-utf-8',
            success: function (data) {

                $("#loading").hide();
                $("#shopGrpah").show();
                $("#feedergraph").show();
                if (data.length != 0) {
                    ddl = new Array();

                    for (var i = 0; i < data.Areawise[0].length; i++) {

                        ddl.push(data.Areawise[0][i].date);
                    }
                    var titleName = "";
                    var YAxistext = ""
                    ShowAreachart(ddl, titleName);

                    for (var j = 0; j < data.Areawise.length; j++) {

                        TotalConsumtion = new Array();

                        var Area = data.Areawise[j][0].AreaName;
                        for (var i = 0; i < data.Areawise[j].length; i++) {

                            TotalConsumtion.push(data.Areawise[j][i].TotalConsumtion);

                        }
                        ShowAreachartData(TotalConsumtion, Area);

                    }
                    TotalConsumtion = new Array();
                    Name = new Array();
                    for (var j = 0; j < data.Pareto.length; j++) {

                        var Area = data.Pareto[j].AreaName;
                        Name.push(Area);
                        TotalConsumtion.push(data.Pareto[j].TotalConsumtion);
                    }
                    AreaWiseParteo(TotalConsumtion, Name)

                }
                else {
                    var path = "/User/Index";
                    //window.open(path, '_blank');
                    window.open(path);
                }
            }
        });
    }
    function ShowAreachart(ddl, titleName, YAxisText) {

        //$("#loading").hide();
        $("#AreawiseTrendloading").css("display", "none");
        $('#AreawiseTrendchart').highcharts({
            chart: {
                zoomType: 'xy',
                events: {

                    addSeries: function () {

                    }
                }
            },
            title: {
                text: titleName,

            },
            credits: {
                enabled: false
            },
            xAxis: {
                categories: ddl
            },
            yAxis: {
                title: {
                    text: YAxisText,

                },

                type: 'logarithmic',
                gridLineWidth: 0,
                //minorTickInterval: 'auto',
                //min: minum,

                //type: 'logarithmic',
                //minorTickInterval: 'auto',
                //gridLineColor: '#ffffff',
                //lineColor: '#ffffff',



            },

            //series: [{
            //    //data: [129.9, 171.5, 106.4, 19.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 195.6, 4.4]
            //}]
        });
    }

    function ShowAreachartData(TotalConsumtion, Area) {

        var chart = $('#AreawiseTrendchart').highcharts();
        chart.hideLoading();
        $("#AreawiseTrendloading").css("display", "none");

        chart.addSeries(
            {
                name: Area,
                type: 'spline',
                dataLabels: {
                    enabled: false
                },
                data: TotalConsumtion
            })

    }


    function ShowAreawiseCBM(ddl) {

        //$("#loading").hide();
        //$("#loading__" + GroupID).css("display", "none");
        //$("#loading__" + GroupID).hide();
        $("#AreawiseTrendchart").highcharts({
            chart: {
                zoomType: 'xy',



                events: {

                    addSeries: function () {

                    },
                    addAxis: function () {

                    }
                }
            },
            title: {
                text: '',

            },
            credits: {
                enabled: false
            },
            xAxis: [{
                categories: ddl,
                labels: {
                    rotation: -45,
                    //style: {
                    //    fontSize: 'px',
                    //    fontFamily: 'Verdana, sans-serif'
                    //}
                },
                crosshair: true

            }],

        });

    }
    function ShowAreawiseCBMChart(cbmData, paraname, y, unit) {

        var chart = $("#AreawiseTrendchart").highcharts();

        const axisId = y
        chart.hideLoading();
        //$("#loading__" + GroupID).hide();

        chart.addAxis({


            id: axisId,
            title: {
                text: paraname + ' ' + '(' + unit + ')',
            },
            dataLabels: {
                enabled: false
            },
        }, false)
        chart.addSeries(
            {

                plotOptions: {
                    connectNulls: true
                },
                name: paraname,
                connectNulls: true,
                type: 'spline',
                yAxis: axisId,
                dataLabels: {
                    enabled: false
                },


                data: cbmData,




            })




    }



    //btn click event
    $('#btnArealabel').click(function () {
        var chart = $('#Areawisefeederchart').highcharts();
        for (var i = 0; i < chart.series.length; i++) {
            var opt = chart.series[i].options;
            opt.dataLabels.enabled = !opt.dataLabels.enabled;
            chart.series[i].update(opt);
        }

    });

    $('#btnfeederwiseTrendlbl').click(function () {
        var chart = $('#FeederwiseTrendchart').highcharts();
        for (var i = 0; i < chart.series.length; i++) {
            var opt = chart.series[i].options;
            opt.dataLabels.enabled = !opt.dataLabels.enabled;
            chart.series[i].update(opt);
        }


    });
    $('#btncomparisonchartlbl').click(function () {
        var chart = $('#FeederComparisonchart').highcharts();
        for (var i = 0; i < chart.series.length; i++) {
            var opt = chart.series[i].options;
            opt.dataLabels.enabled = !opt.dataLabels.enabled;
            chart.series[i].update(opt);
        }


    });
    $('#btnshoplabel').click(function () {
        var chart = $('#shopcontainer').highcharts();
        for (var i = 0; i < chart.series.length; i++) {
            var opt = chart.series[i].options;
            opt.dataLabels.enabled = !opt.dataLabels.enabled;
            chart.series[i].update(opt);
        }


    });

    $('#btnAreawiseTrendlbl').click(function () {
        var chart = $('#AreawiseTrendchart').highcharts();
        for (var i = 0; i < chart.series.length; i++) {
            var opt = chart.series[i].options;
            opt.dataLabels.enabled = !opt.dataLabels.enabled;
            chart.series[i].update(opt);
        }


    });


    $('#btnFeederdetails').click(function () {

        var feederId = $('#Feeder_ID').val()

        var ShopId = $('#Shop_ID').val();
        var startdate = $('#FromDate').val();
        var enddate = $('#ToDate').val();
        var Parameter = $('#ParameterID1').val();

        $("#FeederwiseModalsdetail").html();
        $("#FeederwiseModalsdetail").empty();
        $.ajax({
            url: '/RealTimeParameter/Feederwisedetails',
            type: 'GET',
            data: ({ Fromdate: startdate, ToDate: enddate, Shop: ShopId, Feeder: feederId, Parameter: Parameter }),
            contentType: 'application/json;charset-utf-8',
            success: function (data) {

                if (data != "") {
                    $("#FeederwiseModalsdetail").html(data);
                }
            }
        });
    })


    $('#btnFeederReport').click(function () {

        var feederId = $('#Feeder_ID').val()

        var ShopId = $('#Shop_ID').val();
        var startdate = $('#FromDate').val();
        var enddate = $('#ToDate').val();
        var Parameter = $('#ParameterID1').val();
        var path = "/ShiftWiseReports/ExportFeederData?StartDate=" + startdate + "&EndDate=" + enddate + "&Shop=" + ShopId + "&Feeder=" + feederId + "&Parameter=" + Parameter;

        //window.open(path, '_blank');
        window.open(path);
    })
    $('#btnFeederTrend').click(function () {
        $("#FeederwiseTrendchart").html();

        //$("#FeederwiseModalsdetail").html();
        $("#FeederwiseTrendchart").empty();
        $("#Trendcloading").show();


        var feederId = $('#FeederTrend_ID').val()

        var ShopId = $('#Shop_ID').val();
        var temp = new Array();
        var Parameter = $.map($('#Parameter_ID'), function (e) {

            return $(e).val();
        });
        for (var i = 0; i < Parameter.length; i++) {

            temp.push(Parameter[i]);
        }
        //var feederId = Feeder[i];
        ShopId = $('#Shop_ID').val();
        var startdate = $('#FromDateTrend').val();
        var enddate = $('#ToDateTrend').val();

        //$("#FeederwiseModalsdetail").html();
        //$("#FeederwiseModalsdetail").empty();
        $.ajax({
            url: '/RealTimeParameter/FeederwiseTrend',
            //type: 'GET',
            //data: ({ Fromdate: startdate, ToDate: enddate, Shop: ShopId, feeder: feederId, Parameter: ParameterId }),
            contentType: 'application/json;charset-utf-8',
            data: "{ 'Fromdate': '" + startdate + "', 'ToDate': '" + enddate + "',  'Shop': '" + ShopId + "', 'feeder': '" + feederId + "',  'temp': '" + temp + "'}",
            dataType: "json",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                var statuslist = new Array();

                unit = new Array();
                name = new Array();
                ddl = new Array();
                var feeder = data.FeederName;
                for (var i = 0; i < data.allDates.length; i++) {
                    //ddl.push(data.allTimes[i]);
                    ddl.push(data.allDates[i]);
                    //cbmData.push(data.CBMdatas[i]);
                }
                for (var i = 0; i < data.Units.length; i++) {

                    var statusdata = {};
                    var y = i + 1;
                    statusdata.ID = y;
                    statusdata.unit = data.Units[i];
                    if (statuslist.length > 0) {

                        var k = 0;
                        for (var j = 0; j < statuslist.length; j++) {

                            if (statuslist[j].unit == unit[i]) {

                                break;
                            }
                            k++;
                        }
                        if (statuslist.length < k) {
                            statuslist.push(statusdata);
                        }

                    }
                    else {
                        statuslist.push(statusdata);
                    }

                }
                $("#Trendcloading").hide();
                ShowFeeder(ddl, feeder);
                for (var j = 0; j < data.AllConsumption.length; j++) {

                    cbmData1 = new Array();
                    FeederData = new Array();
                    FeederData = new Array();
                    var paraname = data.Names[j];
                    var unit = data.Units[j]
                    //unit.push(data.units[j]);
                    var y = j + 1;
                    for (var m = 0; m < statuslist.length; m++) {

                        if (statuslist[m].unit == data.Units[j]) {
                            y = statuslist[m].ID;
                            break;
                        }

                    }


                    //paraname = data.paramNames[j];
                    for (var i = 0; i < data.AllConsumption[j].length; i++) {
                        FeederData.push(data.AllConsumption[j][i]);

                    }

                    //ShowCellGraph(cbmData, paraname, y, GroupID);

                    ShowFeederTrend(FeederData, paraname, y, unit);

                }
                //$("#FeederwiseModalsdetail").html(data);

            }
        });

    })
    $('#btnShopwiseReport').click(function () {



        var ShopId = $('#Shop_ID').val();
        var startdate = $('#FromDateShop').val();
        var enddate = $('#ToDateShop').val();

        var path = "/ShiftWiseReports/ExportshopwiseReadingData?StartDate=" + startdate + "&EndDate=" + enddate + "&Shop=" + ShopId;

        //window.open(path, '_blank');
        window.open(path);
    })
    $('#btnComparison').click(function () {
        $("#FeederComparisonchart").html("");
        var startdate = $("#StartDate1").val();
        var enddate = $("#EndDate1").val();
        var ddlformat = $("#ddlDateRange1").val()
        var ShopId = $('#Shop_ID').val();
        var Shift = $('#Shiftwise1').val();
        var Minute = $('#MinuteRange1').val();
        var ReasonId = $('#Reason_ID1').val();
        var Feeder = $.map($('#Feeder'), function (e) {

            return $(e).val();
        });
        var ParameterId = $('#ParameterID').val();
        var temp = new Array();
        if (ddlformat == 1 || ddlformat == 2) {
            //Minute = '';

        }
        else {


            Minute = '';
        }


        if (startdate == enddate) {
            Minute = $('#MinuteRange1').val();
        }

        for (var i = 0; i < Feeder.length; i++) {

            temp.push(Feeder[i]);
        }

        $("#FeederComparisonchart").html("");
        //$("#FeederComparisonchart").emty();
        $("#Comparisonloading").show();

        $.ajax({
            url: '/RealTimeParameter/ComparisonData',
            //type: 'GET',
            //data: ({ Fromdate: startdate, ToDate: enddate, Shop: ShopId, feeder: feederId, Parameter: ParameterId }),
            contentType: 'application/json;charset-utf-8',
            data: "{ 'Fromdate': '" + startdate + "', 'ToDate': '" + enddate + "',  'ddlformat': '" + ddlformat + "', 'Shop': '" + ShopId + "',  'temp': '" + temp + "','Reason':'" + ReasonId + "','Parameter':'" + ParameterId + "','shiftwise':'" + Shift + "','Minute':'" + Minute + "'}",
            dataType: "json",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                ddl = new Array();

                for (var i = 0; i < data.allDates.length; i++) {
                    ddl.push(data.allDates[i]);
                }

                var titleName = "";
                var YAxistext = data.Unit;
                var minmum = 0.1;
                $("#Comparisonloading").hide();
                if (ParameterId == 1 || ParameterId == 3) {

                    minmum = data.minmum;

                }
                ShowComparisonchart(ddl, titleName, YAxistext, minmum);


                for (var j = 0; j < data.AllConsumption.length; j++) {

                    TotalConsumtion = new Array();
                    TotalIdeal = new Array();
                    cumulative = new Array();
                    var feeder = data.Names[j];



                    for (var i = 0; i < data.AllConsumption[j].length; i++) {
                        TotalConsumtion.push(data.AllConsumption[j][i]);

                    }
                    if (data.Ideal.length > 0) {


                        for (var i = 0; i < data.Ideal[j].length; i++) {
                            TotalIdeal.push(data.Ideal[j][i]);

                        }
                        for (var i = 0; i < data.cumulative[j].length; i++) {
                            cumulative.push(data.cumulative[j][i]);

                        }
                    }

                    if (ParameterId == 1) {

                        ShowComparisoncumulativeData(TotalConsumtion, feeder, TotalIdeal, cumulative);
                    }
                    else {
                        ShowComparisonData(TotalConsumtion, feeder);
                    }


                }

            }
        });


    })

    $("#ddlDateRange1").change(function () {

        if ($("#ddlDateRange1").val() == "1") {
            $("#StartDate1").prop('readonly', true);
            $("#EndDate1").prop('readonly', true);
            $today = new Date();
            if (parameter == 1 || parameter == 1) {
                $("#Minutes1").show();
            }
            else {
                $("#Minutes1").hide();
            }
            /*$("#Minutes1").show()*/;
            $('#NOWorkingDay1').hide();
            $('#NOWorkingDay1 option').prop("selected", false);

            $yesterday = new Date($today);
            $yesterday.setDate($today.getDate());
            var $dd = $yesterday.getDate();
            var $mm = $yesterday.getMonth() + 1;
            var $yyyy = $yesterday.getFullYear();
            if ($dd < 10) { $dd = '0' + $dd } if ($mm < 10) { $mm = '0' + $mm } $yesterday = $dd + '/' + $mm + '/' + $yyyy;
            $("#StartDate1").val($yesterday);
            $("#EndDate1").val($yesterday);
            //$("#StartDate").datepicker({ format: 'dd/mm/yyyy' }).datepicker("setDate", new Date());
            //$("#EndDate").datepicker({ format: 'dd/mm/yyyy' }).datepicker("setDate", new Date());

        }
        else if ($("#ddlDateRange1").val() == "2") {
            var parameter = $("#ParamaeterId").val()
            if (parameter == 1 || parameter == 1) {
                $("#Minutes1").show();
            }
            else {
                $("#Minutes1").hide();
            }

            $('#NOWorkingDay1').hide();
            $('#NOWorkingDay1 option').prop("selected", false);
            $("#StartDate1").prop('readonly', true);
            $("#EndDate1").prop('readonly', true);
            $today = new Date();
            $yesterday = new Date($today);
            $yesterday.setDate($today.getDate() - 1);
            var $dd = $yesterday.getDate();
            var $mm = $yesterday.getMonth() + 1;
            var $yyyy = $yesterday.getFullYear();
            if ($dd < 10) { $dd = '0' + $dd } if ($mm < 10) { $mm = '0' + $mm } $yesterday = $dd + '/' + $mm + '/' + $yyyy;
            $("#StartDate1").val($yesterday);
            $("#EndDate1").val($yesterday);
        }
        else if ($("#ddlDateRange1").val() == "3") {
            $("#Minutes1").hide();
            $('#NOWorkingDay1').show();
            $('#Minutes1 option').prop("selected", false);
            $('#Minutes1 option').prop("selected", false);
            $("#StartDate1").prop('readonly', true);
            $("#EndDate1").prop('readonly', true);
            $today = new Date();
            $StartDate1 = new Date($today);
            //$StartDate1.setDate($today.getDate() - $today.getDay());
            $EndDate1 = new Date($today);
            //$EndDate1.setDate($StartDate1.getDate() + 7);


            var $mm = $StartDate1.getMonth() + 1;
            var $yyyy = $StartDate1.getFullYear();
            if ($mm < 10) { $mm = '0' + $mm } $StartDate1 = '01' + '/' + $mm + '/' + $yyyy;

            $("#StartDate1").val($StartDate1);


            var $EndDate1 = new Date($EndDate1.getFullYear(), $EndDate1.getMonth() + 1, 0);
            var $dd1 = $EndDate1.getDate();
            var $mm1 = $EndDate1.getMonth() + 1;
            var $yyyy1 = $EndDate1.getFullYear();

            if ($dd1 < 10) { $dd1 = '0' + $dd1 } if ($mm1 < 10) { $mm1 = '0' + $mm1 } $EndDate1 = $dd1 + '/' + $mm1 + '/' + $yyyy1;
            $("#EndDate1").val($EndDate1);
        }
        else if ($("#ddlDateRange1").val() == "4") {
            $("#Minutes1").hide();
            if (parameter == 1 || parameter == 1) {
                $('#NOWorkingDay1').show();
            }
            else {
                $('#NOWorkingDay1').hide();
            }

            $('#Minutes1 option').prop("selected", false);
            $("#StartDate1").prop('readonly', true);
            $("#EndDate1").prop('readonly', true);
            $today = new Date();
            $StartDate1 = new Date($today);
            $EndDate1 = new Date($today);
            //******************* Added by Ajay 01012019
            var prevDate = new Date($StartDate1.getFullYear(), $StartDate1.getMonth() - 1, 1);
            var $mm = prevDate.getMonth() + 1;
            var $yyyy = prevDate.getFullYear();

            if ($mm < 10) { $mm = '0' + $mm } prevDate = '01' + '/' + $mm + '/' + $yyyy;

            $("#StartDate1").val(prevDate);
            //******************* Added by Ajay 01012019
            var $EndDate1 = new Date($EndDate1.getFullYear(), $EndDate1.getMonth(), 0);
            var $dd1 = $EndDate1.getDate();
            var $mm1 = $EndDate1.getMonth() + 1;
            var $yyyy1 = $EndDate1.getFullYear();

            if ($dd1 < 10) { $dd1 = '0' + $dd1 } if ($mm1 < 10) { $mm1 = '0' + $mm1 } $EndDate1 = $dd1 + '/' + $mm1 + '/' + $yyyy1;
            $("#EndDate1").val($EndDate1);
        }

        else {

            $("#StartDate1").prop('readonly', false);
            $("#EndDate1").prop('readonly', false);
            $("#StartDate1").prop('disabled', false);
            $("#EndDate1").prop('disabled', false);
            $("#StartDate1").val('');
            $("#EndDate1").val('');
            $('#Minutes1 option').prop("selected", false);
            $('#NOWorkingDay1').show();
            if (parameter == 1 || parameter == 1) {
                $('#NOWorkingDay1').show();
            }
            else {
                $('#NOWorkingDay1').hide();
            }


        }



    });

    $("#ParameterID").change(function () {
        var Parameter = $("#ParameterID").val();
        if (Parameter == 1 || Parameter == 2) {

        }
        else {
            $("#Minutes1").hide();
        }

    });
    $("#Area").change(function () {

        var Area = $("#Area").val();

        var options = {};
        options.url = "/CBM/AreawiseCBM";
        options.type = "POST";
        options.data = JSON.stringify({ Area: Area });
        options.contentType = "application/json";
        options.dataType = "json";
        options.success = function (id) {


            $("#CBM").html(""); // clear before appending new list
            $.each(id, function (i, test) {

                $("#CBM").append(


                    $('<option></option>').val(test.CBM_ID).html(test.CBM_Name).prop('selected', false));
            });





        };

        options.error = function () {
            alert("Invalid CBM ");
        };
        $.ajax(options);


    })


    $('#btnAreaCBM').click(function () {


        var Formdate = $("#CBMDate").val();
        var Todate = $("#EndDate").val();
        var ddlformat = $("#ddlDateRange").val()
        var ShopId = $('#Shop_ID').val();
        var Shift = $('#Shiftwise').val();
        var Minute = $('#MinuteRange').val();
        var Reason = $('#Reason_ID').val();

        var AreaID = $('#Area').val();
        var Category = $('#Type').val();
        var temp = new Array();


        var CBM = $.map($('#CBM'), function (e) {

            return $(e).val();
        });
        for (var i = 0; i < CBM.length; i++) {

            temp.push(CBM[i]);
        }
        if (Formdate != Todate) {
            Minute = '';
        }
        if (CBM == "") {
            alert("Please select CBM ")
            return;
        }
        if (AreaID == "") {
            alert("Please select Area ")
            return;
        }

        if (Formdate == "") {
            alert("Please select date ")
            return;
        }
        $("#AreawiseTrendloading").hide();
        $("#AreawiseTrendchart").html("");
        $("#AreawisePareto").html("");
        $.ajax({
            url: '/RealTimeParameter/AreawiseCBM',
            //type: 'POST',
            //data: ({ Formdate: Formdate, Shop: ShopId, ConsumptionId: Category, Area: AreaID, CBM: temp }),

            contentType: 'application/json;charset-utf-8',
            data: "{ 'Date': '" + Formdate + "', 'Shop': '" + ShopId + "',  'ConsumptionId': '" + Category + "', 'Area': '" + AreaID + "',  'CBM': '" + temp + "'}",
            dataType: "json",
            type: "POST",
            success: function (data) {

                $("#loading").hide();
                $("#shopGrpah").show();
                $("#feedergraph").show();
                if (data.length != 0) {
                    ddl = new Array();

                    for (var i = 0; i < data.Areawise[0].length; i++) {

                        ddl.push(data.Areawise[0][i].date);
                    }


                    var titleName = "";
                    var YAxistext = ""
                    ShowAreawiseCBM(ddl);


                    for (var j = 0; j < data.Areawise.length; j++) {

                        cbmData = new Array();
                        var paraname = data.Areawise[j][0].Name;
                        var y = j + 1;
                        //paraname = data.paramNames[j];
                        var unit = data.Areawise[j][0].unit;
                        for (var i = 0; i < data.Areawise[j].length; i++) {
                            cbmData.push(data.Areawise[j][i].Value);

                        }

                        ShowAreawiseCBMChart(cbmData, paraname, y, unit);


                    }
                    TotalConsumtion = new Array();
                    Name = new Array();
                    for (var j = 0; j < data.Pareto.length; j++) {

                        var Area = data.Pareto[j].AreaName;
                        Name.push(Area);
                        TotalConsumtion.push(data.Pareto[j].TotalConsumtion);
                    }
                    AreaWiseParteo(TotalConsumtion, Name)

                }
                else {
                    var path = "/User/Index";
                    //window.open(path, '_blank');
                    window.open(path);
                }
            }
        });
    })

    $('#btnFeederCBM').click(function () {
        var ShopId = $('#Shop_ID').val();
        var temp = new Array();
        var CBMID = $.map($('#CBMFeeder'), function (e) {

            return $(e).val();
        });
        for (var i = 0; i < CBMID.length; i++) {

            temp.push(CBMID[i]);
        }
        var CBMDate = $('#CBMFeederDate').val();
        var AreaID = $('#Area_ID').html();
        var TagIndex = $('#CBM_feederID').html();
        var type = $("#Type").val();

        if (CBMID == "") {
            alert("Please select CBM ")
            return;
        }
        if (CBMDate == "") {
            alert("Please select date ")
            return;
        }

        $("#Areawisefeederchart").html("");
        $("#Areawisefeederchart_tblloading").show();
        $.ajax({
            url: '/RealTimeParameter/CBMFeederData',
            contentType: 'application/json;charset-utf-8',
            data: "{ 'CBMdate': '" + CBMDate + "', 'Shop': '" + ShopId + "',  'TagIndex': '" + TagIndex + "', 'type': '" + type + "',  'Area': '" + AreaID + "','CBM':'" + temp + "'}",
            dataType: "json",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            success: function (data) {


                ddl = new Array();
                Name = new Array();
                Unit = new Array();
                for (var i = 0; i < data.allDates.length; i++) {
                    ddl.push(data.allDates[i]);
                }

                debugger;
                for (var i = 0; i < data.Names.length; i++) {
                    Name.push(data.Names[i]);
                    Unit.push(data.Units[i]);
                }

                var titleName = "";


                // CBM wise Feeder Trend
                $("#Areawisefeederchart_tblloading").hide();
                ShowfeederCBM(ddl, titleName, Unit);
                for (var j = 0; j < data.AllConsumption.length; j++) {

                    TotalConsumtion = new Array();
                    TotalIdeal = new Array();
                    cumulative = new Array();
                    Average = new Array();
                    CBM = new Array();
                    for (var i = 0; i < data.AllConsumption[j].length; i++) {
                        TotalConsumtion.push(data.AllConsumption[j][i]);

                    }
                    if (data.Ideal.length > 0) {


                        for (var i = 0; i < data.Ideal[j].length; i++) {
                            TotalIdeal.push(data.Ideal[j][i]);

                        }

                    }
                    for (var i = 0; i < data.cumulative[j].length; i++) {
                        cumulative.push(data.cumulative[j][i]);

                    }
                    if (data.Average.length > 0) {
                        for (var i = 0; i < data.Average[j].length; i++) {
                            Average.push(data.Average[j][i]);

                        }
                    }

                    if (data.CBMData.length > 0) {
                        for (var i = 0; i < data.CBMData[j].length; i++) {
                            CBM.push(data.CBMData[j][i]);

                        }
                    }

                    ShowfeederCBMData(TotalConsumtion, Name, Unit, cumulative, TotalIdeal, Average, CBM);
                }

                // Feeder wise table  data
                var Total = 0;
                var Area_Data = []
                debugger;
                $("#subArea_tbl tbody").html("");
                for (var i = 0; i < data.FeederwiseData.length; i++) {

                    debugger;
                    //var markup = "<tr><td>" + data[i].Label + "</td><td>" + data[i].Y + "</td></tr>"
                    var markup = "<tr><td><button  class='boxshadow' id='realtime' value=" + data.FeederwiseData[i].ShopId + ", onclick ='FeederData(" + data.FeederwiseData[i].ShopId + ")'>" + data.FeederwiseData[i].Label + "</button></td><td>" + data.FeederwiseData[i].Y + "</td></tr>"

                    $("#subArea_tbl tbody").append(markup)
                    Total += data.FeederwiseData[i].Y
                    //$("#AreaFeeder").append(
                    //    $('<option></option>').val(data.ProcessData[i].ShopId).html(data.ProcessData[i].Label).prop('selected', false));
                    Area_Data.push({ "Name": data.FeederwiseData[i].Label, "y": data.FeederwiseData[i].Y });

                }
                if (data.FeederwiseData.length > 0) {


                    var markup = "<tr><td>" + "Total" + "</td><td>" + Total + "</td></tr>"
                    $("#subArea_tbl tbody").append(markup);
                }
            }
        });

    })
</script>






