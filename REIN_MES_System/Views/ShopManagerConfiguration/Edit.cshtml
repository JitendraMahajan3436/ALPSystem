@model REIN_MES_System.Models.RS_AM_Shop_Manager_Mapping

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/admin/_Layout.cshtml";
}



<div class="col-md-6  manager_Line">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.SMM_ID)

            @*<div class="form-group">
                    @Html.LabelFor(model => model.Plant_ID, "Plant Name", htmlAttributes: new { @class = "" })
                    @Html.DropDownList("Plant_ID", null, String.Empty, htmlAttributes: new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.Plant_ID, null, new { @class = "validation_error" })

                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.Shop_ID, "Shop Name", htmlAttributes: new { @class = "" })
                @Html.DropDownList("Shop_ID", null, String.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Shop_ID, null, new { @class = "validation_error" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Employee_ID, "Manager Name", htmlAttributes: new { @class = "" })
                @Html.DropDownList("Employee_ID", null, String.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Employee_ID, null, new { @class = "validation_error" })

            </div>

            @*<div class="form-group">
                        @Html.LabelFor(model => model.Is_Transferred, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Is_Transferred)
                            @Html.ValidationMessageFor(model => model.Is_Transferred)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Is_Purgeable, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Is_Purgeable)
                            @Html.ValidationMessageFor(model => model.Is_Purgeable)
                        </div>
                    </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Inserted_Host, "Host ID", htmlAttributes: new { @class = "" })

                        @Html.TextBoxFor(model => model.Inserted_Host, htmlAttributes: new { disabled = "disabled", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Inserted_Host, null, new { @class = "validation_error" })

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Inserted_User_ID, "Inserted User", htmlAttributes: new { @class = "" })

                        @Html.DropDownList("Inserted_User_ID", null, String.Empty, htmlAttributes: new { disabled = "disabled", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Inserted_User_ID, null, new { @class = "validation_error" })

                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.Inserted_Date, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Inserted_Date)
                            @Html.ValidationMessageFor(model => model.Inserted_Date)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Updated_Host, htmlAttributes: new { @class = "control-label col-md-2", @readonly = "readonly" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Updated_Host)
                            @Html.ValidationMessageFor(model => model.Updated_Host)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Updated_User_ID, "Updated_User_ID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("Updated_User_ID", String.Empty)
                            @Html.ValidationMessageFor(model => model.Updated_User_ID)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Updated_Date, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Updated_Date)
                            @Html.ValidationMessageFor(model => model.Updated_Date)
                        </div>
                    </div>*@

            <div class="form-group">

                <input type="submit" value="Save" class="btn btn-primary" /> @Html.ActionLink("Show All", "Index", null, new { @class = "btn btn-primary" })

            </div>
        </div>
    }

    @*<div>
            @Html.ActionLink("Back to List", "Index")
        </div>*@


</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/ManagerManagement_file")
    @Scripts.Render("~/bundles/Select2scripts")
}

@section Styles {
    @Styles.Render("~/Content/Select2styles")
}
@*<script type="text/javascript">
        $(document).ready(function (e) {
            $("#Employee_ID").select2({

                allowClear: true
            });
        });


    </script>*@