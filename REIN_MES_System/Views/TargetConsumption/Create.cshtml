@model REIN_MES_System.Models.MM_PowerTarget

@{
    /**/

    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/Admin/_Layout.cshtml";
}

<link href="~/Content/theme/plugins/select2/select2.min.css" rel="stylesheet" />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

<div class="row">

    <div class="col-md-12">
        <div class="box-body">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Shop Name </label>
                        @Html.DropDownList("Shop_ID", null, "Select Shop ", new { @class = "form-control", @style = "max-width:100%" })
                        @Html.ValidationMessageFor(model => model.Shop_ID, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label" })

                        @Html.Editor("Year", new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                        @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                            <label>Month *</label>

                        @Html.DropDownList("Month", null, "Select Month", new { @class = "form-control select2", @style = "max-width:100%" })
                        @Html.ValidationMessageFor(model => model.Month, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Target Type *</label>

                        @Html.DropDownList("TargetType", null,  new { @class = "form-control select2", @style = "max-width:100%" })
                        @Html.ValidationMessageFor(model => model.TargetType, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Parameter*</label>
                        @Html.DropDownList("ConsumptionType", new SelectList(new List<object> { new { value = true, text = "kWh" }, new { value = false, text = "kVAh" } }, "value", "text", true), new { @class = "form-control select2" })

                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Category*</label>
                        @Html.DropDownList("Category", new SelectList(new List<object> { new { value = "1", text = "Consumption" }, new { value = "2", text = "Specifc Consumption" } }, "value", "text", 1), new { @class = "form-control select2" })

                    </div>
                </div>
                <div class="col-md-6" style="display:none" id="shift">
                    <div class="form-group">
                        <label class="lebal-font">Shift</label>
                        @Html.DropDownList("Shift_ID", null,  htmlAttributes: new { @class = "form-control", @style = "max-width:100%", })
                        <span class="error" id="EndDateId" style="color:red;display:none">To Date field is required</span>
                    </div>
                </div>
               
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Target *</label>

                        @Html.EditorFor(model => model.Target, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Target, "", new { @class = "text-danger" })
                        @Html.Hidden("Plant_ID")

                    </div>
                </div>
            </div>


            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">

                        <input type="submit" value="Save" class="btn btn-linkedin" />
                        @Html.ActionLink("Show All", "Index", null, htmlAttributes: new { @class = "btn btn-linkedin" })

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


            }
            @section Scripts {

                @Scripts.Render("~/bundles/jqueryval")
                <script src="~/Content/theme/plugins/select2/select2.full.js"></script>
                <script type="text/javascript">
                    $(document).ready(function () {
                        $(".select2").select2();
                        $("#Plant_ID").change(function () {

                            var Plant_ID = $("#Plant_ID").val();

                            var options = {};
                            options.url = "/CommanMethod/PlantwiseShopconfig";
                            options.type = "POST";
                            options.data = JSON.stringify({ Plant_ID: Plant_ID });
                            options.contentType = "application/json";
                            options.dataType = "json";
                            options.success = function (id) {

                                $("#Shop_ID").html(""); // clear before appending new list
                                $("#Shop_ID").html();
                                $.each(id, function (i, test) {
                                    $("#Shop_ID").append(


                                        $('<option></option>').val(test.Shop_ID).html(test.Shop_Name).prop('selected', true));
                                });

                                var elements = [];
                                elements = document.getElementsByClassName("mdl");
                                for (var i = 0; i < elements.length; i++) {
                                    elements[i].value = "";
                                }
                            };
                            options.error = function () {
                                alert("Invalid Shop ");
                            };
                            $.ajax(options);


                        })

                        $("#TargetType").change(function () {
                            var TargetType = $('#TargetType').val();
                            if (TargetType == 2) {
                                $("#shift").show();
                            }
                            else {
                                $("#shift").hide();
                            }
                      

                        })
                    });
                </script>

            }





